2018-04-30 09:38:25,382 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 09:38:25,454 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 09:38:25 CST 2018]; root of context hierarchy
2018-04-30 09:38:25,502 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 09:38:25,801 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 09:38:25,867 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 09:38:25,994 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 09:38:26,201 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 09:38:26,368 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 09:38:26,369 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:38:26,687 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:38:26,688 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:38:26,693 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:38:26,696 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:38:26,697 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:38:26,703 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:38:26,704 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:38:26,715 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:38:26,803 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1418 ms
2018-04-30 09:38:26,898 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 09:38:26,900 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:38:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:38:26,901 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 09:38:27,085 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 09:38:27,390 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 09:38:27,392 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 09:38:27,392 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 09:38:27,393 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 09:38:27,393 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 09:38:27,393 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 09:38:27,397 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 09:38:27,398 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 09:38:27,398 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 09:38:27,398 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 09:38:27,399 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 09:38:27,790 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:38:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:38:27,922 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:38:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:38:28,184 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 09:38:28,285 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1387 ms
2018-04-30 09:38:29,210 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:38:29,239 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:38:29,276 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:38:29,524 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:38:29,525 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:38:29,526 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:38:45,245 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:38:45,246 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:38:45,247 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:39:17,127 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:39:17,140 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-30 09:39:17,159 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:39:18,623 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:39:18,623 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-04-30 09:39:18,625 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:39:20,068 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:39:20,069 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 4(Integer)
2018-04-30 09:39:20,070 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:39:20,823 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:39:20,823 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-04-30 09:39:20,824 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:39:56,868 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 09:39:56,869 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: test(String)
2018-04-30 09:39:56,892 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 09:39:56,896 INFO[com.summer.blog.controller.UserController:69] - wrong user name or password
2018-04-30 09:40:03,141 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 09:40:03,142 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: test(String)
2018-04-30 09:40:03,143 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 09:40:03,144 INFO[com.summer.blog.controller.UserController:69] - wrong user name or password
2018-04-30 09:41:09,659 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 09:41:09,659 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: test(String)
2018-04-30 09:41:09,660 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 09:41:09,661 INFO[com.summer.blog.controller.UserController:61] - test: login
2018-04-30 09:41:09,716 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:41:09,716 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:41:09,717 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:41:09,747 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 09:41:09,748 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: test(String)
2018-04-30 09:41:09,762 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 0
2018-04-30 09:41:09,768 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 09:41:09,768 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: test(String)
2018-04-30 09:41:09,770 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 0
2018-04-30 09:41:09,774 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 09:41:09,774 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: test(String)
2018-04-30 09:41:09,775 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 0
2018-04-30 09:41:09,778 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 09:41:09,779 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: test(String)
2018-04-30 09:41:09,780 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 0
2018-04-30 09:41:23,620 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:41:23,621 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:41:23,623 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:41:30,546 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 09:41:30,547 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 09:41:30,548 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 09:41:30,549 INFO[com.summer.blog.controller.UserController:61] - admin: login
2018-04-30 09:41:30,572 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:41:30,573 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:41:30,574 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:41:30,580 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 09:41:30,580 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 09:41:30,615 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 09:41:30,619 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 09:41:30,619 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 09:41:30,621 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 09:43:07,223 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-30 09:43:07,243 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: 安装Ubuntu 18.04 LTS后要做的11件事情(String), summer(String), 2018-04-30 09-43-07(String), 2(Integer), 该文通过一些简单的说明提示、技巧和“需要做的事情”的选择有助于让Ubuntu 18.04更易于使用，使用起来更加愉快。 目的？ 让你有最好的体验。

从常识建议和精妙的调整到有用的建议和相关指南，我们的列表并不在乎你是一个熟手或新手。 每个人都有一些收获。

使用文章底部的评论部分与其他读者分享您自己的安装后必备项目。(String)
2018-04-30 09:43:07,347 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-30 09:43:07,658 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-30 09:43:07,659 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 安装Ubuntu 18.04 LTS后要做的11件事情(String)
2018-04-30 09:43:07,700 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-30 09:43:11,616 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:43:11,617 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:43:11,617 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:43:11,626 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 09:43:11,627 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 09:43:11,629 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 09:43:11,632 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 09:43:11,633 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 09:43:11,634 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 09:43:12,782 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:43:12,783 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-30 09:43:12,784 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-30 09:43:12,789 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 09:43:12,790 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 09:43:12,791 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 09:43:12,794 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 09:43:12,794 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 09:43:12,795 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 09:47:28,465 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-30 09:47:28,477 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: jdk(String), summer(String), 2018-04-30 09-47-26(String), 1(Integer), JDK是 Java 语言的软件开发工具包，主要用于移动设备、嵌入式设备上的java应用程序。JDK是整个java开发的核心，它包含了JAVA的运行环境（JVM+Java系统类库）和JAVA工具。(String)
2018-04-30 09:47:29,750 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-30 09:47:30,167 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-30 09:47:30,168 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: jdk(String)
2018-04-30 09:47:30,401 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-30 09:47:35,133 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:47:35,134 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:47:35,221 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-30 09:47:35,329 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 09:47:35,329 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 09:47:35,456 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 09:47:35,491 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 09:47:35,492 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 09:47:35,521 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 09:50:03,122 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-30 09:50:03,221 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: freemarker(String), summer(String), 2018-04-30 09-50-03(String), 1(Integer), FreeMarker是一款模板引擎： 即一种基于模板和要改变的数据，	并用来生成输出文本（HTML网页、电子邮件、配置文件、源代码等）的通用工具。	它不是面向最终用户的，而是一个Java类库，是一款程序员可以嵌入他们所开发产品的组件。(String)
2018-04-30 09:50:03,347 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-30 09:50:03,410 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-30 09:50:03,410 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: freemarker(String)
2018-04-30 09:50:03,411 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-30 09:50:07,594 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:50:07,594 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:50:07,596 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 09:50:07,603 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 09:50:07,603 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 09:50:07,629 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 09:50:07,682 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 09:50:07,683 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 09:50:07,685 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 09:50:23,596 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:38:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:50:23,648 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 09:38:25 CST 2018]; root of context hierarchy
2018-04-30 09:56:13,584 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 09:56:13,655 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 09:56:13 CST 2018]; root of context hierarchy
2018-04-30 09:56:13,695 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 09:56:13,857 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 09:56:13,922 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 09:56:14,052 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 09:56:14,312 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 09:56:14,510 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 09:56:14,511 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:56:14,940 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:56:14,941 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:56:14,946 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:56:14,948 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:56:14,949 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:56:14,955 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:56:14,956 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:56:14,966 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:56:15,076 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1490 ms
2018-04-30 09:56:15,205 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 09:56:15,207 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:56:15 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:56:15,208 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 09:56:15,303 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 09:56:15,520 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 09:56:15,521 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 09:56:15,521 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 09:56:15,522 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 09:56:15,522 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 09:56:15,522 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 09:56:15,525 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 09:56:15,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 09:56:15,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 09:56:15,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 09:56:15,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 09:56:15,888 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:56:15 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:56:16,028 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:56:15 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:56:16,286 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 09:56:16,438 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1233 ms
2018-04-30 09:56:16,732 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/] in DispatcherServlet with name 'myBlog'
2018-04-30 09:56:16,794 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/] in DispatcherServlet with name 'myBlog'
2018-04-30 09:56:32,295 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/] in DispatcherServlet with name 'myBlog'
2018-04-30 09:57:10,891 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:56:15 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:57:10,896 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 09:56:13 CST 2018]; root of context hierarchy
2018-04-30 09:57:29,517 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 09:57:29,594 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 09:57:29 CST 2018]; root of context hierarchy
2018-04-30 09:57:29,644 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 09:57:29,961 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 09:57:30,033 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 09:57:30,166 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 09:57:30,377 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 09:57:30,545 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 09:57:30,546 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:57:30,914 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:57:30,915 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:57:30,921 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:57:30,923 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:57:30,924 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:57:30,931 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:57:30,932 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:57:30,944 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:57:31,039 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1519 ms
2018-04-30 09:57:31,139 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 09:57:31,143 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:57:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:57:31,144 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 09:57:31,291 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 09:57:31,531 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 09:57:31,533 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 09:57:31,533 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 09:57:31,534 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 09:57:31,534 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 09:57:31,534 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 09:57:31,537 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 09:57:31,538 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 09:57:31,538 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 09:57:31,539 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 09:57:31,539 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 09:57:31,902 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:57:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:57:32,035 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:57:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:57:32,317 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 09:57:32,424 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1284 ms
2018-04-30 09:57:33,994 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:57:34,016 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:57:34,152 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 09:57:34,475 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:57:34,476 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:57:34,542 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 09:57:43,313 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:57:43,314 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:57:43,316 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 09:57:52,906 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/getArticlesByType.do] in DispatcherServlet with name 'myBlog'
2018-04-30 09:59:26,730 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:57:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:59:26,804 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 09:57:29 CST 2018]; root of context hierarchy
2018-04-30 09:59:43,752 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 09:59:43,795 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 09:59:43 CST 2018]; root of context hierarchy
2018-04-30 09:59:43,972 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 09:59:44,298 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 09:59:44,366 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 09:59:44,526 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 09:59:44,748 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 09:59:44,890 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 09:59:44,890 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:59:45,124 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:59:45,125 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:59:45,132 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:59:45,134 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:59:45,135 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:59:45,143 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:59:45,143 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:59:45,155 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 09:59:45,248 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1493 ms
2018-04-30 09:59:45,313 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 09:59:45,315 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:59:45 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:59:45,316 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 09:59:45,429 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 09:59:45,693 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 09:59:45,695 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 09:59:45,695 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 09:59:45,696 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 09:59:45,696 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 09:59:45,696 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 09:59:45,699 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 09:59:45,700 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 09:59:45,700 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 09:59:45,700 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 09:59:45,701 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 09:59:46,080 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:59:45 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:59:46,210 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:59:45 CST 2018]; parent: Root WebApplicationContext
2018-04-30 09:59:46,438 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 09:59:46,561 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1248 ms
2018-04-30 09:59:47,384 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:59:47,402 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:59:47,418 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 09:59:47,684 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:59:47,684 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:59:47,686 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 09:59:51,392 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:59:52,363 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:59:52,384 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 09:59:55,005 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:59:55,005 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-30 09:59:55,013 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-30 09:59:56,913 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:59:56,914 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 09:59:56,916 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 09:59:58,146 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:59:58,147 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-04-30 09:59:58,148 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 09:59:59,468 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 09:59:59,469 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 4(Integer)
2018-04-30 09:59:59,470 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 10:00:00,544 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:00:00,544 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:00:00,546 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:00:08,136 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 09:59:45 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:00:08,148 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 09:59:43 CST 2018]; root of context hierarchy
2018-04-30 10:13:45,700 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:13:45,762 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:13:45 CST 2018]; root of context hierarchy
2018-04-30 10:13:45,807 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:13:46,120 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:13:46,186 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:13:46,339 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:13:46,892 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:13:47,092 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:13:47,093 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:13:47,497 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:13:47,497 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:13:47,504 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:13:47,507 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:13:47,508 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:13:47,516 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:13:47,516 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:13:47,533 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:13:47,658 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1956 ms
2018-04-30 10:13:47,776 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:13:47,778 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:13:47 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:13:47,778 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:13:47,895 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:13:48,234 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:13:48,236 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:13:48,236 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:13:48,237 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:13:48,237 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:13:48,238 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:13:48,238 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:13:48,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:13:48,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:13:48,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:13:48,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:13:48,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:13:48,797 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:13:47 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:13:48,985 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:13:47 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:13:49,314 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:13:49,511 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1735 ms
2018-04-30 10:13:50,286 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:13:50,335 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:13:50,353 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:13:50,774 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:13:50,775 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:13:50,777 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:14:03,192 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:14:03,192 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:14:03,281 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:14:16,806 WARN[org.springframework.web.servlet.PageNotFound:188] - Request method 'POST' not supported
2018-04-30 10:14:23,548 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:13:47 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:14:23,605 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:13:45 CST 2018]; root of context hierarchy
2018-04-30 10:14:54,888 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:14:54,950 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:14:54 CST 2018]; root of context hierarchy
2018-04-30 10:14:54,988 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:14:55,141 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:14:55,205 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:14:55,340 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:14:55,626 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:14:55,932 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:14:55,933 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:14:56,153 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:14:56,154 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:14:56,166 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:14:56,171 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:14:56,173 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:14:56,190 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:14:56,192 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:14:56,213 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:14:56,315 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1425 ms
2018-04-30 10:14:56,445 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:14:56,447 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:14:56 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:14:56,448 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:14:56,743 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:14:56,985 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:14:56,986 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:14:56,986 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:14:56,987 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:14:56,987 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:14:56,987 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:14:56,988 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:14:56,991 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:14:56,991 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:14:56,992 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:14:56,992 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:14:56,992 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:14:57,358 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:14:56 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:14:57,491 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:14:56 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:14:57,748 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:14:57,891 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1446 ms
2018-04-30 10:14:58,703 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:14:58,722 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:14:58,739 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:14:58,980 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:14:58,980 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:14:58,982 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:15:03,819 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:15:03,840 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:15:03,843 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:15:34,742 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT * FROM article WHERE title LIKE %?%; 
2018-04-30 10:15:34,743 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: freemarker(String)
2018-04-30 10:15:34,949 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-04-30 10:15:35,052 INFO[org.springframework.jdbc.support.SQLErrorCodesFactory:128] - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-04-30 10:16:02,892 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT * FROM article WHERE title LIKE %?%; 
2018-04-30 10:16:02,893 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: freemarker(String)
2018-04-30 10:16:48,676 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:14:56 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:16:48,785 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:14:54 CST 2018]; root of context hierarchy
2018-04-30 10:20:11,205 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:20:11,289 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:20:11 CST 2018]; root of context hierarchy
2018-04-30 10:20:11,331 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:20:11,574 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:20:11,636 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:20:11,766 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:20:11,989 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:20:12,135 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:20:12,135 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:20:12,418 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:20:12,418 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:20:12,424 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:20:12,426 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:20:12,427 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:20:12,435 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:20:12,436 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:20:12,448 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:20:12,540 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1333 ms
2018-04-30 10:20:12,634 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:20:12,637 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:20:12 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:20:12,637 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:20:12,787 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:20:13,038 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:20:13,039 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:20:13,039 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:20:13,040 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:20:13,040 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:20:13,040 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:20:13,041 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:20:13,049 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:20:13,049 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:20:13,050 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:20:13,050 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:20:13,050 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:20:13,416 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:20:12 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:20:13,543 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:20:12 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:20:13,763 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:20:13,888 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1253 ms
2018-04-30 10:20:14,462 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:20:14,480 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:20:14,506 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:20:14,770 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:20:14,771 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:20:14,780 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:20:25,803 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:20:25,804 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:20:25,806 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:20:36,338 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT * FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:20:36,339 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: freemarker(String)
2018-04-30 10:20:36,412 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:20:36,438 ERROR[freemarker.runtime:59] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> article.time  [in template "main.ftl" at line 36, column 45]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${article.time}  [in template "main.ftl" at line 36, column 43]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:467)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:389)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:358)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:366)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:317)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:242)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:642)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:107)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:93)
	at freemarker.core.Environment.visit(Environment.java:330)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.process(Environment.java:309)
	at freemarker.template.Template.process(Template.java:384)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:392)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:307)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:257)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:165)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:312)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:620)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-30 10:20:43,707 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT * FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:20:43,708 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: freemarker(String)
2018-04-30 10:20:43,710 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:20:43,719 ERROR[freemarker.runtime:59] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> article.time  [in template "main.ftl" at line 36, column 45]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${article.time}  [in template "main.ftl" at line 36, column 43]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:467)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:389)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:358)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:366)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:317)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:242)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:642)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:107)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:93)
	at freemarker.core.Environment.visit(Environment.java:330)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.process(Environment.java:309)
	at freemarker.template.Template.process(Template.java:384)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:392)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:307)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:257)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:165)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:312)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:620)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-30 10:21:51,852 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:21:51,853 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:21:51,875 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:21:56,851 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT * FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:21:56,852 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: xggf(String)
2018-04-30 10:21:56,853 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 0
2018-04-30 10:22:05,714 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT * FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:22:05,715 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: xggf(String)
2018-04-30 10:22:05,716 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 0
2018-04-30 10:22:23,869 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT * FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:22:23,870 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:22:23,871 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:22:23,878 ERROR[freemarker.runtime:59] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> article.time  [in template "main.ftl" at line 36, column 45]

----
Tip: It's the step after the last dot that caused this error, not those before it.
----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${article.time}  [in template "main.ftl" at line 36, column 43]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:467)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:389)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:358)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:366)
	at freemarker.core.IteratorBlock$IterationContext.executedNestedContentForCollOrSeqListing(IteratorBlock.java:317)
	at freemarker.core.IteratorBlock$IterationContext.executeNestedContent(IteratorBlock.java:271)
	at freemarker.core.IteratorBlock$IterationContext.accept(IteratorBlock.java:242)
	at freemarker.core.Environment.visitIteratorBlock(Environment.java:642)
	at freemarker.core.IteratorBlock.acceptWithResult(IteratorBlock.java:107)
	at freemarker.core.IteratorBlock.accept(IteratorBlock.java:93)
	at freemarker.core.Environment.visit(Environment.java:330)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.process(Environment.java:309)
	at freemarker.template.Template.process(Template.java:384)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:392)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:307)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:257)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:165)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:312)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:620)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-30 10:23:53,353 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:23:53,451 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:23:53 CST 2018]; root of context hierarchy
2018-04-30 10:23:53,528 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:23:53,809 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:23:53,872 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:23:54,003 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:23:54,225 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:23:54,385 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:23:54,385 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:23:54,670 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:23:54,670 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:23:54,677 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:23:54,679 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:23:54,680 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:23:54,686 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:23:54,687 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:23:54,699 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:23:54,818 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1463 ms
2018-04-30 10:23:54,888 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:23:54,890 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:23:54 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:23:54,890 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:23:55,027 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:23:55,294 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:23:55,296 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:23:55,296 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:23:55,296 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:23:55,297 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:23:55,297 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:23:55,297 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:23:55,300 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:23:55,300 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:23:55,301 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:23:55,301 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:23:55,301 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:23:55,659 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:23:54 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:23:55,785 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:23:54 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:23:56,004 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:23:56,202 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1314 ms
2018-04-30 10:23:57,268 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:23:57,287 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:23:57,305 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:23:57,648 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:23:57,649 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:23:57,652 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:24:05,102 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:24:05,102 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:24:05,104 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:24:34,159 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:24:34,160 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:24:34,162 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:24:47,063 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:24:47,066 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:24:47,068 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:25:02,482 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:25:02,483 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-30 10:25:02,485 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-30 10:25:06,693 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:25:06,694 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:25:06,698 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:25:08,392 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:25:08,393 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:25:08,395 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:25:08,541 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:25:08,542 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:25:08,543 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:25:08,702 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:25:08,703 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:25:08,704 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:25:08,888 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:25:08,889 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:25:08,890 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:25:09,044 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:25:09,045 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:25:09,046 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:25:09,259 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:25:09,260 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:25:09,264 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:25:09,452 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:25:09,453 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:25:09,455 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:26:37,532 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:23:54 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:26:37,596 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:23:53 CST 2018]; root of context hierarchy
2018-04-30 10:26:55,785 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:26:55,825 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:26:55 CST 2018]; root of context hierarchy
2018-04-30 10:26:55,883 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:26:56,226 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:26:56,298 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:26:56,416 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:26:56,606 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:26:56,753 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:26:56,754 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:26:57,039 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:26:57,040 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:26:57,046 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:26:57,049 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:26:57,050 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:26:57,057 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:26:57,058 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:26:57,071 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:26:57,173 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1386 ms
2018-04-30 10:26:57,232 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:26:57,234 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:26:57 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:26:57,235 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:26:57,364 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:26:57,620 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:26:57,621 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:26:57,622 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:26:57,622 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:26:57,623 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:26:57,623 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:26:57,624 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:26:57,627 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:26:57,627 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:26:57,628 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:26:57,628 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:26:57,628 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:26:57,994 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:26:57 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:26:58,134 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:26:57 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:26:58,368 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:26:58,475 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1243 ms
2018-04-30 10:26:59,124 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:26:59,145 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:26:59,160 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:26:59,244 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:26:59,244 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:26:59,246 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:27:05,338 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:27:05,338 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:27:05,351 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:27:26,450 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:27:26,451 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:27:26,453 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:27:59,179 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:26:57 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:27:59,191 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:26:55 CST 2018]; root of context hierarchy
2018-04-30 10:28:06,951 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:28:06,992 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:28:06 CST 2018]; root of context hierarchy
2018-04-30 10:28:07,025 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:28:07,090 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:28:07,153 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:28:07,250 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:28:07,426 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:28:07,599 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:28:07,599 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:28:07,763 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:28:07,764 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:28:07,770 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:28:07,772 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:28:07,773 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:28:07,780 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:28:07,781 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:28:07,792 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:28:07,883 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 929 ms
2018-04-30 10:28:07,994 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:28:07,997 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:28:07 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:28:07,998 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:28:08,130 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:28:08,365 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:28:08,366 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:28:08,366 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:28:08,367 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:28:08,367 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:28:08,367 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:28:08,368 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:28:08,370 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:28:08,371 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:28:08,371 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:28:08,371 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:28:08,372 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:28:08,762 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:28:07 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:28:08,905 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:28:07 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:28:09,178 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:28:09,311 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1317 ms
2018-04-30 10:28:09,971 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:28:09,989 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:28:10,017 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:28:10,284 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:28:10,285 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:28:10,286 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:28:10,947 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:28:10,948 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:28:10,949 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:28:15,609 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:28:15,610 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:28:15,612 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:28:23,788 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:28:23,789 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:28:23,792 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:28:38,621 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:28:07 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:28:38,633 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:28:06 CST 2018]; root of context hierarchy
2018-04-30 10:31:24,191 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:31:24,232 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:31:24 CST 2018]; root of context hierarchy
2018-04-30 10:31:24,268 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:31:24,470 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:31:24,506 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:31:24,597 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:31:24,756 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:31:24,901 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:31:24,902 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:31:25,066 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:31:25,066 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:31:25,076 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:31:25,078 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:31:25,079 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:31:25,087 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:31:25,088 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:31:25,099 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:31:25,190 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 997 ms
2018-04-30 10:31:25,241 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:31:25,244 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:31:25 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:31:25,244 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:31:25,370 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:31:25,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:31:25,635 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:31:25,636 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:31:25,637 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:31:25,637 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:31:25,638 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:31:25,638 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:31:25,642 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:31:25,647 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:31:25,648 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:31:25,649 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:31:25,649 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:31:26,039 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:31:25 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:31:26,182 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:31:25 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:31:26,434 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:31:26,560 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1319 ms
2018-04-30 10:31:27,216 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:31:27,235 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:31:27,251 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:31:27,488 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:31:27,489 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:31:27,492 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:31:28,009 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:31:28,010 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:31:28,016 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:31:52,834 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:31:52,835 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:31:52,836 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:32:02,814 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:32:02,814 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:32:02,816 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:32:13,551 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:31:25 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:32:13,562 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:31:24 CST 2018]; root of context hierarchy
2018-04-30 10:36:08,521 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:36:08,562 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:36:08 CST 2018]; root of context hierarchy
2018-04-30 10:36:08,595 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:36:08,721 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:36:08,755 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:36:08,844 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:36:09,007 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:36:09,163 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:36:09,165 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:36:09,313 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:36:09,314 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:36:09,320 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:36:09,322 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:36:09,323 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:36:09,329 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:36:09,330 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:36:09,342 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:36:09,438 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 915 ms
2018-04-30 10:36:09,494 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:36:09,497 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:36:09 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:36:09,497 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:36:09,616 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:36:09,892 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:36:09,893 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:36:09,894 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:36:09,895 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:36:09,895 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:36:09,895 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:36:09,896 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:36:09,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:36:09,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:36:09,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:36:09,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:36:09,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:36:10,256 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:36:09 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:36:10,400 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:36:09 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:36:10,644 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:36:10,767 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1272 ms
2018-04-30 10:36:11,550 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:36:11,569 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:36:11,585 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:36:11,785 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:36:11,785 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:36:11,787 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:36:12,303 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:36:12,303 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:36:12,305 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:36:57,106 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:36:57,107 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:36:57,108 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:42:06,693 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:36:09 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:42:06,704 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:36:08 CST 2018]; root of context hierarchy
2018-04-30 10:42:13,866 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:42:13,906 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:42:13 CST 2018]; root of context hierarchy
2018-04-30 10:42:13,937 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:42:14,103 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:42:14,137 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:42:14,220 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:42:14,431 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:42:14,585 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:42:14,586 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:42:14,770 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:42:14,771 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:42:14,777 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:42:14,779 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:42:14,780 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:42:14,787 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:42:14,787 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:42:14,801 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:42:14,892 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1024 ms
2018-04-30 10:42:14,944 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:42:14,946 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:42:14 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:42:14,946 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:42:15,062 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:42:15,324 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:42:15,325 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:42:15,326 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:42:15,327 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:42:15,327 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:42:15,327 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:42:15,328 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:42:15,331 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:42:15,332 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:42:15,332 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:42:15,333 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:42:15,333 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:42:15,728 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:42:14 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:42:15,871 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:42:14 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:42:16,106 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:42:16,236 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1292 ms
2018-04-30 10:42:16,935 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:42:16,953 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:42:16,970 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:42:17,173 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:42:17,173 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:42:17,175 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:42:17,691 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:42:17,691 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:42:17,721 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:42:45,025 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:42:45,026 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:42:45,027 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:43:07,270 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:42:14 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:43:07,280 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:42:13 CST 2018]; root of context hierarchy
2018-04-30 10:43:30,007 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:43:30,047 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:43:30 CST 2018]; root of context hierarchy
2018-04-30 10:43:30,078 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:43:30,249 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:43:30,284 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:43:30,370 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:43:30,549 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:43:30,701 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:43:30,701 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:43:30,868 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:43:30,868 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:43:30,874 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:43:30,876 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:43:30,877 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:43:30,884 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:43:30,885 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:43:30,896 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:43:30,986 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 977 ms
2018-04-30 10:43:31,041 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:43:31,045 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:43:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:43:31,046 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:43:31,181 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:43:31,440 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:43:31,442 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:43:31,442 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:43:31,442 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:43:31,443 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:43:31,443 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:43:31,444 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:43:31,447 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:43:31,448 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:43:31,448 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:43:31,448 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:43:31,449 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:43:31,831 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:43:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:43:31,974 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:43:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:43:32,215 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:43:32,329 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1287 ms
2018-04-30 10:43:32,983 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:43:33,002 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:43:33,020 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:43:33,247 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:43:33,248 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:43:33,250 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:43:34,366 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:43:34,366 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:43:34,368 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:43:54,478 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:43:54,478 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: freemarker(String)
2018-04-30 10:43:54,480 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:44:05,885 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:44:05,886 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: sdfsdfsd(String)
2018-04-30 10:44:05,889 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 0
2018-04-30 10:46:03,941 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:43:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:46:03,958 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:43:30 CST 2018]; root of context hierarchy
2018-04-30 10:47:32,817 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:47:32,860 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:47:32 CST 2018]; root of context hierarchy
2018-04-30 10:47:32,894 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:47:33,047 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:47:33,086 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:47:33,183 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:47:33,349 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:47:33,512 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:47:33,512 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:47:33,661 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:47:33,661 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:47:33,667 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:47:33,669 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:47:33,670 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:47:33,677 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:47:33,678 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:47:33,689 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:47:33,782 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 962 ms
2018-04-30 10:47:33,833 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:47:33,835 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:47:33 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:47:33,836 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:47:33,952 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:47:34,213 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:47:34,215 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:47:34,215 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:47:34,216 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:47:34,216 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:47:34,216 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/nothing.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.nothing()
2018-04-30 10:47:34,217 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:47:34,217 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:47:34,219 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:47:34,220 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:47:34,220 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:47:34,220 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:47:34,221 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:47:34,578 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:47:33 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:47:34,723 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:47:33 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:47:34,972 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:47:35,087 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1254 ms
2018-04-30 10:47:35,617 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:47:33 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:47:35,620 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:47:32 CST 2018]; root of context hierarchy
2018-04-30 10:50:36,331 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:50:36,372 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:50:36 CST 2018]; root of context hierarchy
2018-04-30 10:50:36,405 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:50:36,574 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:50:36,614 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:50:36,709 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:50:36,884 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:50:37,053 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:50:37,053 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:50:37,216 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:50:37,217 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:50:37,223 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:50:37,225 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:50:37,226 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:50:37,234 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:50:37,234 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:50:37,247 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:50:37,346 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1013 ms
2018-04-30 10:50:37,400 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:50:37,402 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:50:37 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:50:37,403 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:50:37,528 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:50:37,781 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:50:37,783 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:50:37,783 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:50:37,784 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:50:37,784 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:50:37,785 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:50:37,785 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:50:37,788 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:50:37,788 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:50:37,788 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:50:37,789 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:50:37,789 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:50:38,165 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:50:37 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:50:38,301 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:50:37 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:50:38,551 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:50:38,679 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1279 ms
2018-04-30 10:50:39,420 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:50:39,438 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:50:39,455 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:50:39,628 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:50:39,629 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:50:39,630 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:50:40,340 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:50:40,341 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:50:40,343 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:54:40,886 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:50:37 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:54:40,898 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:50:36 CST 2018]; root of context hierarchy
2018-04-30 10:54:47,816 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:54:47,857 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:54:47 CST 2018]; root of context hierarchy
2018-04-30 10:54:47,891 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:54:47,953 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:54:48,000 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:54:48,110 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:54:48,307 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:54:48,490 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:54:48,491 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:54:48,697 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:54:48,697 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:54:48,704 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:54:48,706 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:54:48,707 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:54:48,715 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:54:48,715 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:54:48,727 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:54:48,875 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1057 ms
2018-04-30 10:54:48,923 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:54:48,925 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:54:48 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:54:48,925 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:54:49,029 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:54:49,269 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:54:49,270 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:54:49,271 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:54:49,271 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:54:49,271 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:54:49,272 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:54:49,272 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:54:49,275 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:54:49,275 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:54:49,276 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:54:49,276 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:54:49,276 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:54:49,655 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:54:48 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:54:49,794 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:54:48 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:54:50,041 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:54:50,183 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1260 ms
2018-04-30 10:54:50,864 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:54:50,882 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:54:50,897 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:54:51,121 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:54:51,122 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:54:51,123 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:54:51,690 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:54:51,690 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:54:51,692 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:54:59,453 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:54:59,453 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: sdfsd(String)
2018-04-30 10:54:59,455 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 0
2018-04-30 10:55:05,646 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:54:48 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:55:05,658 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:54:47 CST 2018]; root of context hierarchy
2018-04-30 10:56:28,697 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:56:28,737 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:56:28 CST 2018]; root of context hierarchy
2018-04-30 10:56:28,769 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:56:28,957 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:56:28,997 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:56:29,105 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:56:29,287 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:56:29,457 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:56:29,457 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:56:29,637 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:56:29,637 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:56:29,644 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:56:29,646 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:56:29,647 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:56:29,654 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:56:29,655 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:56:29,669 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:56:29,769 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1070 ms
2018-04-30 10:56:29,825 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:56:29,828 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:56:29 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:56:29,828 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:56:29,946 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:56:30,181 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:56:30,184 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:56:30,184 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:56:30,185 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:56:30,185 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:56:30,185 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:56:30,188 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:56:30,191 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:56:30,191 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:56:30,192 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:56:30,192 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:56:30,192 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:56:30,600 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:56:29 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:56:30,752 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:56:29 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:56:30,997 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:56:31,118 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1292 ms
2018-04-30 10:56:31,720 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:56:31,739 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:56:31,757 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:56:31,953 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:56:31,953 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:56:31,955 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:56:34,012 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:56:34,012 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:56:34,014 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:56:38,025 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:56:38,026 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: asfdsad(String)
2018-04-30 10:56:38,027 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 0
2018-04-30 10:56:46,538 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:56:46,538 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: asafds(String)
2018-04-30 10:56:46,539 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 0
2018-04-30 10:56:51,182 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:56:51,183 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 10:56:51,184 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 10:56:59,457 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:56:29 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:56:59,470 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:56:28 CST 2018]; root of context hierarchy
2018-04-30 10:58:15,785 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 10:58:15,828 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 10:58:15 CST 2018]; root of context hierarchy
2018-04-30 10:58:15,862 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 10:58:16,017 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 10:58:16,071 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 10:58:16,180 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 10:58:16,394 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:58:16,543 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 10:58:16,544 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:58:16,710 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:58:16,711 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:58:16,718 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:58:16,720 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:58:16,721 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:58:16,728 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:58:16,729 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:58:16,742 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 10:58:16,839 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1051 ms
2018-04-30 10:58:16,889 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 10:58:16,891 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:58:16 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:58:16,892 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 10:58:16,999 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 10:58:17,297 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 10:58:17,298 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:58:17,299 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:58:17,299 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 10:58:17,299 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 10:58:17,304 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 10:58:17,304 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 10:58:17,309 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 10:58:17,310 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 10:58:17,310 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 10:58:17,312 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 10:58:17,312 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 10:58:17,733 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:58:16 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:58:17,866 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:58:16 CST 2018]; parent: Root WebApplicationContext
2018-04-30 10:58:18,090 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 10:58:18,208 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1319 ms
2018-04-30 10:58:19,064 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:58:19,092 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:58:19,107 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:58:19,365 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:58:19,366 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:58:19,368 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:58:20,165 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 10:58:20,192 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 10:58:20,194 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 10:58:29,585 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 10:58:29,586 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: fsdfsdf(String)
2018-04-30 10:58:29,587 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 0
2018-04-30 11:00:03,406 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 10:58:16 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:00:03,418 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 10:58:15 CST 2018]; root of context hierarchy
2018-04-30 11:00:13,021 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 11:00:13,061 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 11:00:13 CST 2018]; root of context hierarchy
2018-04-30 11:00:13,093 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 11:00:13,242 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 11:00:13,280 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 11:00:13,375 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 11:00:13,544 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 11:00:13,700 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 11:00:13,701 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:13,847 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:13,847 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:13,854 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:13,856 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:13,857 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:13,864 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:13,865 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:13,877 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:13,965 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 942 ms
2018-04-30 11:00:14,018 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 11:00:14,021 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:00:14 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:00:14,022 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 11:00:14,146 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 11:00:14,402 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 11:00:14,403 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:00:14,404 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 11:00:14,404 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 11:00:14,404 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 11:00:14,405 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:00:14,405 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 11:00:14,408 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:00:14,409 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 11:00:14,409 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 11:00:14,410 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 11:00:14,410 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 11:00:14,765 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:00:14 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:00:14,908 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:00:14 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:00:15,163 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 11:00:15,316 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1298 ms
2018-04-30 11:00:15,716 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:00:14 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:00:15,718 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 11:00:13 CST 2018]; root of context hierarchy
2018-04-30 11:00:23,687 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 11:00:23,727 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 11:00:23 CST 2018]; root of context hierarchy
2018-04-30 11:00:23,757 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 11:00:23,813 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 11:00:23,853 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 11:00:23,956 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 11:00:24,154 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 11:00:24,307 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 11:00:24,307 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:24,486 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:24,487 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:24,493 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:24,495 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:24,496 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:24,502 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:24,503 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:24,514 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:00:24,596 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 907 ms
2018-04-30 11:00:24,726 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 11:00:24,728 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:00:24 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:00:24,731 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 11:00:24,832 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 11:00:25,050 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 11:00:25,052 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:00:25,052 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:00:25,052 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 11:00:25,053 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 11:00:25,053 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 11:00:25,053 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 11:00:25,057 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:00:25,057 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 11:00:25,058 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 11:00:25,058 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 11:00:25,058 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 11:00:25,427 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:00:24 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:00:25,572 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:00:24 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:00:25,832 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 11:00:25,951 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1225 ms
2018-04-30 11:00:26,537 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:00:26,556 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 11:00:26,577 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 11:00:26,796 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:00:26,801 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 11:00:26,803 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 11:00:27,754 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:00:27,754 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 11:00:27,756 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 11:00:36,865 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 11:00:36,866 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: asdfasd(String)
2018-04-30 11:00:36,867 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 0
2018-04-30 11:00:39,619 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:00:24 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:00:39,631 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 11:00:23 CST 2018]; root of context hierarchy
2018-04-30 11:01:58,057 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 11:01:58,099 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 11:01:58 CST 2018]; root of context hierarchy
2018-04-30 11:01:58,131 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 11:01:58,253 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 11:01:58,291 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 11:01:58,382 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 11:01:58,617 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 11:01:58,793 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 11:01:58,794 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:01:58,946 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:01:58,947 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:01:58,953 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:01:58,954 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:01:58,955 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:01:58,961 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:01:58,962 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:01:58,973 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:01:59,069 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1010 ms
2018-04-30 11:01:59,118 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 11:01:59,121 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:01:59 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:01:59,121 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 11:01:59,252 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 11:01:59,496 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:01:59,498 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:01:59,499 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 11:01:59,499 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 11:01:59,501 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 11:01:59,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 11:01:59,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 11:01:59,506 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:01:59,508 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 11:01:59,508 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 11:01:59,509 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 11:01:59,509 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 11:01:59,895 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:01:59 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:02:00,046 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:01:59 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:02:00,264 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 11:02:00,375 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1256 ms
2018-04-30 11:02:00,992 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:01,011 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 11:02:01,030 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 11:02:01,226 ERROR[freemarker.runtime:59] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> article  [in template "main.ftl" at line 82, column 13]

----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if (article?size == 0)  [in template "main.ftl" at line 82, column 7]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:85)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:48)
	at freemarker.core.BuiltInsForMultipleTypes$sizeBI._eval(BuiltInsForMultipleTypes.java:496)
	at freemarker.core.Expression.eval(Expression.java:83)
	at freemarker.core.EvalUtil.compare(EvalUtil.java:113)
	at freemarker.core.ComparisonExpression.evalToBoolean(ComparisonExpression.java:62)
	at freemarker.core.ParentheticalExpression.evalToBoolean(ParentheticalExpression.java:35)
	at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:48)
	at freemarker.core.Environment.visit(Environment.java:330)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.process(Environment.java:309)
	at freemarker.template.Template.process(Template.java:384)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:392)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:307)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:257)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:165)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:312)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:620)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-30 11:02:01,344 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:01,345 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 11:02:01,349 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 11:02:01,353 ERROR[freemarker.runtime:59] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> article  [in template "main.ftl" at line 82, column 13]

----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if (article?size == 0)  [in template "main.ftl" at line 82, column 7]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:85)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:48)
	at freemarker.core.BuiltInsForMultipleTypes$sizeBI._eval(BuiltInsForMultipleTypes.java:496)
	at freemarker.core.Expression.eval(Expression.java:83)
	at freemarker.core.EvalUtil.compare(EvalUtil.java:113)
	at freemarker.core.ComparisonExpression.evalToBoolean(ComparisonExpression.java:62)
	at freemarker.core.ParentheticalExpression.evalToBoolean(ParentheticalExpression.java:35)
	at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:48)
	at freemarker.core.Environment.visit(Environment.java:330)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.process(Environment.java:309)
	at freemarker.template.Template.process(Template.java:384)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:392)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:307)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:257)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:165)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:312)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:620)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-30 11:02:01,998 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:01,998 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 11:02:02,030 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 11:02:02,077 ERROR[freemarker.runtime:59] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> article  [in template "main.ftl" at line 82, column 13]

----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: #if (article?size == 0)  [in template "main.ftl" at line 82, column 7]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.UnexpectedTypeException.newDesciptionBuilder(UnexpectedTypeException.java:85)
	at freemarker.core.UnexpectedTypeException.<init>(UnexpectedTypeException.java:48)
	at freemarker.core.BuiltInsForMultipleTypes$sizeBI._eval(BuiltInsForMultipleTypes.java:496)
	at freemarker.core.Expression.eval(Expression.java:83)
	at freemarker.core.EvalUtil.compare(EvalUtil.java:113)
	at freemarker.core.ComparisonExpression.evalToBoolean(ComparisonExpression.java:62)
	at freemarker.core.ParentheticalExpression.evalToBoolean(ParentheticalExpression.java:35)
	at freemarker.core.ConditionalBlock.accept(ConditionalBlock.java:48)
	at freemarker.core.Environment.visit(Environment.java:330)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.process(Environment.java:309)
	at freemarker.template.Template.process(Template.java:384)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:392)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:307)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:257)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:165)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:312)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:620)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-04-30 11:02:17,507 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:01:59 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:02:17,524 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 11:01:58 CST 2018]; root of context hierarchy
2018-04-30 11:02:34,229 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 11:02:34,271 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 11:02:34 CST 2018]; root of context hierarchy
2018-04-30 11:02:34,304 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 11:02:34,434 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 11:02:34,469 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 11:02:34,555 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 11:02:34,740 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 11:02:34,892 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 11:02:34,892 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:02:35,034 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:02:35,034 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:02:35,040 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:02:35,042 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:02:35,043 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:02:35,051 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:02:35,052 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:02:35,064 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 11:02:35,155 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 924 ms
2018-04-30 11:02:35,206 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 11:02:35,208 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:02:35 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:02:35,208 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 11:02:35,316 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 11:02:35,544 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:02:35,545 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:02:35,545 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 11:02:35,545 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 11:02:35,546 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 11:02:35,546 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 11:02:35,546 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 11:02:35,549 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 11:02:35,549 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 11:02:35,550 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 11:02:35,550 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 11:02:35,550 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 11:02:35,922 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:02:35 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:02:36,068 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:02:35 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:02:36,310 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 11:02:36,434 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1228 ms
2018-04-30 11:02:37,220 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:37,239 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 11:02:37,255 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 11:02:37,485 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:37,485 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 11:02:37,489 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 11:02:38,008 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:38,008 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 11:02:38,010 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 11:02:43,189 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 11:02:43,189 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: sdfsdfs(String)
2018-04-30 11:02:43,190 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 0
2018-04-30 11:02:50,233 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:50,234 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-04-30 11:02:50,235 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 11:02:51,039 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:51,039 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 4(Integer)
2018-04-30 11:02:51,040 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 11:02:51,648 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:51,648 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-04-30 11:02:51,651 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 11:02:52,200 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:52,201 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-30 11:02:52,202 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-30 11:02:52,989 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 11:02:52,989 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-30 11:02:52,992 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-30 11:03:03,849 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 11:02:35 CST 2018]; parent: Root WebApplicationContext
2018-04-30 11:03:03,862 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 11:02:34 CST 2018]; root of context hierarchy
2018-04-30 14:41:26,292 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 14:41:26,395 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 14:41:26 CST 2018]; root of context hierarchy
2018-04-30 14:41:26,457 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 14:41:26,732 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 14:41:26,797 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 14:41:26,944 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 14:41:27,258 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 14:41:27,494 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 14:41:27,494 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:41:27,784 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:41:27,785 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:41:27,790 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:41:27,792 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:41:27,794 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:41:27,801 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:41:27,802 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:41:27,813 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:41:27,941 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1615 ms
2018-04-30 14:41:28,066 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 14:41:28,068 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:41:28 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:41:28,069 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 14:41:28,204 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 14:41:28,449 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:41:28,450 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 14:41:28,451 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:41:28,451 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 14:41:28,451 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 14:41:28,452 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 14:41:28,452 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 14:41:28,454 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:41:28,455 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 14:41:28,455 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 14:41:28,456 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 14:41:28,456 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 14:41:28,832 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:41:28 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:41:28,964 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:41:28 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:41:29,270 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 14:41:29,373 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1307 ms
2018-04-30 14:41:30,272 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:41:30,309 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:41:30,391 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:41:30,693 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:41:30,694 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:41:30,696 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:41:36,703 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:41:36,704 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:41:36,706 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:41:52,063 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 14:41:52,063 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: jdk(String)
2018-04-30 14:41:52,087 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 14:42:03,916 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-04-30 14:42:03,917 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: ubuntu(String)
2018-04-30 14:42:03,919 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-04-30 14:42:19,693 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 14:42:19,693 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: manager(String)
2018-04-30 14:42:19,773 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 14:42:19,779 INFO[com.summer.blog.controller.UserController:61] - manager: login
2018-04-30 14:42:19,919 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/getArticlesByType.do] in DispatcherServlet with name 'myBlog'
2018-04-30 14:42:26,856 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:42:26,856 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:42:26,863 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:42:26,890 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 14:42:26,891 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 14:42:26,996 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 14:42:27,028 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 14:42:27,028 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 14:42:27,053 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 14:42:27,058 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 14:42:27,058 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 14:42:27,211 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 14:42:27,255 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 14:42:27,255 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 14:42:27,260 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 14:42:36,117 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 14:42:36,118 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 14:42:36,119 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 14:42:36,124 INFO[com.summer.blog.controller.UserController:61] - admin: login
2018-04-30 14:42:36,142 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/getArticlesByType.do] in DispatcherServlet with name 'myBlog'
2018-04-30 14:43:06,965 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:41:28 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:43:06,978 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 14:41:26 CST 2018]; root of context hierarchy
2018-04-30 14:43:17,747 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 14:43:17,786 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 14:43:17 CST 2018]; root of context hierarchy
2018-04-30 14:43:17,818 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 14:43:18,021 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 14:43:18,056 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 14:43:18,172 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 14:43:18,503 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 14:43:18,665 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 14:43:18,666 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:43:18,851 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:43:18,851 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:43:18,858 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:43:18,860 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:43:18,861 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:43:18,870 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:43:18,871 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:43:18,884 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:43:18,988 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1239 ms
2018-04-30 14:43:19,046 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 14:43:19,049 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:43:19 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:43:19,049 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 14:43:19,202 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 14:43:19,504 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:43:19,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:43:19,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 14:43:19,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 14:43:19,506 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 14:43:19,506 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 14:43:19,506 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 14:43:19,509 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:43:19,510 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 14:43:19,510 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 14:43:19,510 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 14:43:19,510 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 14:43:19,877 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:43:19 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:43:20,018 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:43:19 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:43:20,350 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 14:43:20,549 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1503 ms
2018-04-30 14:43:21,016 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:43:21,037 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:43:21,053 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:43:21,292 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:43:21,293 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:43:21,296 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:43:22,956 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:43:22,956 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:43:23,024 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:43:35,855 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 14:43:35,856 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: manager(String)
2018-04-30 14:43:35,858 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 14:43:35,866 INFO[com.summer.blog.controller.UserController:61] - manager: login
2018-04-30 14:43:36,064 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:43:36,064 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:43:36,066 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:43:36,076 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 14:43:36,077 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 14:43:36,080 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 14:43:36,091 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 14:43:36,092 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 14:43:36,093 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 14:43:36,104 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 14:43:36,105 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 14:43:36,106 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 14:43:36,111 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 14:43:36,112 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 14:43:36,113 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 14:46:31,706 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:43:19 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:46:31,717 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 14:43:17 CST 2018]; root of context hierarchy
2018-04-30 14:53:31,657 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 14:53:31,717 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 14:53:31 CST 2018]; root of context hierarchy
2018-04-30 14:53:31,775 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 14:53:32,095 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 14:53:32,136 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 14:53:32,254 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 14:53:32,468 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 14:53:32,600 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 14:53:32,600 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:53:32,836 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:53:32,836 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:53:32,842 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:53:32,844 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:53:32,845 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:53:32,852 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:53:32,852 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:53:32,870 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:53:32,968 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1307 ms
2018-04-30 14:53:33,073 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 14:53:33,075 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:53:33 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:53:33,075 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 14:53:33,173 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 14:53:33,421 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 14:53:33,423 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:53:33,423 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:53:33,424 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 14:53:33,424 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 14:53:33,424 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 14:53:33,425 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 14:53:33,428 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 14:53:33,428 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:53:33,428 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 14:53:33,429 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 14:53:33,429 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 14:53:33,430 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 14:53:33,829 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:53:33 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:53:33,962 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:53:33 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:53:34,203 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 14:53:34,345 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1272 ms
2018-04-30 14:53:35,225 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:53:35,317 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:53:35,342 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:53:35,639 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:53:35,640 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:53:35,660 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:53:53,601 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:53:53,913 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:53:54,029 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:54:19,025 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 14:54:19,025 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: spring(String)
2018-04-30 14:54:19,312 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 14:54:19,812 INFO[com.summer.blog.controller.UserController:65] - spring: login
2018-04-30 14:54:21,783 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:54:21,783 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:54:21,785 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:54:21,945 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 14:54:21,946 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 14:54:22,920 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 14:54:23,165 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 14:54:23,166 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 14:54:23,167 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 14:54:23,290 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 14:54:23,291 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 14:54:23,672 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 14:54:23,992 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 14:54:23,993 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 14:54:24,260 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 14:55:10,413 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:53:33 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:55:10,500 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 14:53:31 CST 2018]; root of context hierarchy
2018-04-30 14:55:35,711 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 14:55:35,767 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 14:55:35 CST 2018]; root of context hierarchy
2018-04-30 14:55:35,843 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 14:55:36,215 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 14:55:36,277 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 14:55:36,413 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 14:55:36,614 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 14:55:36,757 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 14:55:36,758 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:55:37,102 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:55:37,102 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:55:37,108 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:55:37,110 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:55:37,111 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:55:37,118 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:55:37,119 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:55:37,130 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 14:55:37,220 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1507 ms
2018-04-30 14:55:37,294 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 14:55:37,296 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:55:37 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:55:37,297 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 14:55:37,412 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 14:55:37,652 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 14:55:37,654 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 14:55:37,655 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:55:37,655 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 14:55:37,655 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 14:55:37,656 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 14:55:37,656 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:55:37,660 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 14:55:37,660 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 14:55:37,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 14:55:37,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 14:55:37,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 14:55:37,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 14:55:38,052 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:55:37 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:55:38,184 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:55:37 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:55:38,449 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 14:55:38,573 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1279 ms
2018-04-30 14:55:39,064 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:55:39,096 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:55:39,121 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:55:39,412 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:55:39,412 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:55:39,415 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:55:47,527 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:55:47,528 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:55:47,530 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:56:00,660 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 14:56:00,661 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: spring(String)
2018-04-30 14:56:00,689 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 14:56:00,696 INFO[com.summer.blog.controller.UserController:65] - spring: login
2018-04-30 14:56:00,948 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 14:56:00,948 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 14:56:00,954 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 14:56:00,967 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 14:56:00,968 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 14:56:00,970 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 14:56:00,978 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 14:56:00,979 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 14:56:00,980 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 14:56:00,985 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 14:56:00,986 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 14:56:00,991 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 14:56:01,000 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 14:56:01,001 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 14:56:01,003 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 14:59:19,748 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 14:55:37 CST 2018]; parent: Root WebApplicationContext
2018-04-30 14:59:19,806 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 14:55:35 CST 2018]; root of context hierarchy
2018-04-30 15:02:27,832 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 15:02:27,903 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 15:02:27 CST 2018]; root of context hierarchy
2018-04-30 15:02:27,945 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 15:02:28,163 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 15:02:28,228 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 15:02:28,357 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 15:02:28,571 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:02:28,744 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 15:02:28,744 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:02:29,032 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:02:29,033 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:02:29,038 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:02:29,040 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:02:29,041 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:02:29,048 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:02:29,048 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:02:29,059 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:02:29,171 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1336 ms
2018-04-30 15:02:29,276 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 15:02:29,278 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:02:29 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:02:29,278 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 15:02:29,404 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:02:29,665 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:02:29,666 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:02:29,667 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 15:02:29,667 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 15:02:29,668 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 15:02:29,669 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 15:02:29,669 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 15:02:29,675 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 15:02:29,677 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:02:29,678 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 15:02:29,678 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 15:02:29,679 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 15:02:29,679 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 15:02:30,049 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:02:29 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:02:30,182 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:02:29 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:02:30,408 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 15:02:30,545 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1269 ms
2018-04-30 15:02:32,602 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:02:32,621 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:02:32,636 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:02:32,965 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:02:32,966 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:02:32,978 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:02:40,405 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:02:40,405 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:02:40,407 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:02:52,789 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 15:02:52,790 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: spring(String)
2018-04-30 15:02:52,892 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 15:02:52,946 INFO[com.summer.blog.controller.UserController:65] - spring: login
2018-04-30 15:02:53,370 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:02:53,371 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:02:53,375 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:02:53,403 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 15:02:53,403 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 15:02:53,508 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 15:02:53,584 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 15:02:53,585 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 15:02:53,586 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 15:02:53,595 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 15:02:53,595 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 15:02:53,623 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 15:02:53,641 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 15:02:53,641 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 15:02:53,647 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 15:03:13,960 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:02:29 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:03:13,980 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 15:02:27 CST 2018]; root of context hierarchy
2018-04-30 15:19:33,804 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 15:19:33,875 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 15:19:33 CST 2018]; root of context hierarchy
2018-04-30 15:19:33,937 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 15:19:34,205 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 15:19:34,274 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 15:19:34,426 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 15:19:34,693 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:19:34,901 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 15:19:34,902 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:19:35,243 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:19:35,243 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:19:35,250 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:19:35,252 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:19:35,253 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:19:35,260 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:19:35,261 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:19:35,276 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:19:35,772 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1966 ms
2018-04-30 15:19:35,872 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 15:19:35,874 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:19:35 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:19:35,874 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 15:19:35,999 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:19:36,330 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 15:19:36,331 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 15:19:36,332 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:19:36,333 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:19:36,333 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 15:19:36,333 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 15:19:36,334 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 15:19:36,337 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 15:19:36,337 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:19:36,338 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:19:36,338 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 15:19:36,338 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 15:19:36,339 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 15:19:36,339 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 15:19:36,919 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:19:35 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:19:37,059 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:19:35 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:19:37,306 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 15:19:37,565 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1693 ms
2018-04-30 15:19:38,345 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:19:38,370 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:19:38,417 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:19:38,669 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:19:38,670 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:19:38,673 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:19:46,920 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:19:46,921 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:19:46,922 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:20:05,171 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 15:20:05,172 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: spring(String)
2018-04-30 15:20:05,195 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 15:20:05,214 INFO[com.summer.blog.controller.UserController:65] - spring: login
2018-04-30 15:20:05,556 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:20:05,557 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:20:05,559 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:20:05,577 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 15:20:05,578 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 15:20:05,631 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 15:20:05,654 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 15:20:05,655 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 15:20:05,670 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 15:20:05,696 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 15:20:05,697 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 15:20:05,698 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 15:20:05,720 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 15:20:05,721 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 15:20:05,722 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 15:20:36,768 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-30 15:20:36,769 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: kan@kan.com(String)
2018-04-30 15:20:36,770 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-30 15:20:36,960 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==>  Preparing: UPDATE user_info SET email = ?, password = ? 
2018-04-30 15:20:36,961 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==> Parameters: kan@kan.com(String), 123(String)
2018-04-30 15:20:37,562 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - <==    Updates: 7
2018-04-30 15:20:41,196 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:19:35 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:20:41,460 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 15:19:33 CST 2018]; root of context hierarchy
2018-04-30 15:23:23,864 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 15:23:23,935 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 15:23:23 CST 2018]; root of context hierarchy
2018-04-30 15:23:23,973 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 15:23:24,133 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 15:23:24,202 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 15:23:24,356 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 15:23:24,607 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:23:24,910 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 15:23:24,911 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:23:26,053 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:23:26,053 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:23:26,059 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:23:26,062 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:23:26,063 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:23:26,069 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:23:26,070 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:23:26,087 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:23:26,240 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 2373 ms
2018-04-30 15:23:26,321 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 15:23:26,323 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:23:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:23:26,324 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 15:23:26,483 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:23:26,768 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 15:23:26,770 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 15:23:26,771 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:23:26,771 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:23:26,772 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 15:23:26,772 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 15:23:26,772 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 15:23:26,776 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 15:23:26,776 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 15:23:26,777 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:23:26,777 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 15:23:26,777 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 15:23:26,778 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 15:23:26,778 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 15:23:27,315 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:23:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:23:27,485 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:23:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:23:27,737 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 15:23:27,934 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1613 ms
2018-04-30 15:23:28,738 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:23:28,758 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:23:28,824 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:23:29,115 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:23:29,115 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:23:29,118 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:23:42,064 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:23:42,065 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:23:42,080 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:24:15,425 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 15:24:15,435 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: spring(String)
2018-04-30 15:24:15,569 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 15:24:15,664 INFO[com.summer.blog.controller.UserController:73] - wrong user name or password
2018-04-30 15:24:24,291 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 15:24:24,292 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: spring(String)
2018-04-30 15:24:24,294 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 15:24:24,321 INFO[com.summer.blog.controller.UserController:73] - wrong user name or password
2018-04-30 15:24:27,963 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 15:24:27,964 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: spring(String)
2018-04-30 15:24:27,965 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 15:24:27,966 INFO[com.summer.blog.controller.UserController:65] - spring: login
2018-04-30 15:24:28,125 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:24:28,125 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:24:28,149 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:24:28,206 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 15:24:28,207 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 15:24:28,308 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 15:24:28,374 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 15:24:28,374 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 15:24:28,376 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 15:24:28,400 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 15:24:28,400 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 15:24:28,402 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 15:24:28,410 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 15:24:28,410 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 15:24:28,419 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 15:25:07,623 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-30 15:25:07,624 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: spring@spring.com(String)
2018-04-30 15:25:07,625 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-30 15:25:07,773 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==>  Preparing: UPDATE user_info SET email = ?, password = ? 
2018-04-30 15:25:07,774 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==> Parameters: spring@spring.com(String), spring(String)
2018-04-30 15:25:08,775 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - <==    Updates: 7
2018-04-30 15:25:15,990 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:23:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:25:16,652 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 15:23:23 CST 2018]; root of context hierarchy
2018-04-30 15:28:53,317 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 15:28:53,356 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 15:28:53 CST 2018]; root of context hierarchy
2018-04-30 15:28:53,413 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 15:28:53,698 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 15:28:53,769 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 15:28:53,899 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 15:28:54,106 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:28:54,274 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 15:28:54,274 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:28:54,571 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:28:54,571 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:28:54,577 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:28:54,579 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:28:54,581 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:28:54,587 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:28:54,588 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:28:54,598 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:28:54,689 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1370 ms
2018-04-30 15:28:54,774 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 15:28:54,777 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:28:54 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:28:54,777 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 15:28:54,883 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:28:55,110 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 15:28:55,112 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 15:28:55,113 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:28:55,113 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:28:55,113 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 15:28:55,113 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 15:28:55,114 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 15:28:55,117 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 15:28:55,117 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:28:55,118 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 15:28:55,118 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 15:28:55,119 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 15:28:55,119 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 15:28:55,119 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 15:28:55,489 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:28:54 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:28:55,623 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:28:54 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:28:55,856 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 15:28:56,019 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1244 ms
2018-04-30 15:28:57,264 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:28:57,283 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:28:57,298 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:28:57,547 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:28:57,548 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:28:57,550 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:29:05,349 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:29:05,350 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:29:05,352 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:29:17,442 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 15:29:17,443 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 15:29:17,471 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 15:29:17,506 INFO[com.summer.blog.controller.UserController:74] - wrong user name or password
2018-04-30 15:29:26,782 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 15:29:26,783 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 15:29:26,784 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 15:29:26,785 INFO[com.summer.blog.controller.UserController:66] - admin: login
2018-04-30 15:29:26,916 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:29:26,917 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:29:26,925 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:29:26,964 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 15:29:26,965 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 15:29:27,149 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 15:29:27,191 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 15:29:27,192 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 15:29:27,212 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 15:29:55,067 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-30 15:29:55,067 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: admin@admin.com(String)
2018-04-30 15:29:55,069 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-30 15:29:55,163 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==>  Preparing: UPDATE user_info SET email = ?, password = ? WHERE username = ? 
2018-04-30 15:29:55,163 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==> Parameters: admin@admin.com(String), admin(String), admin(String)
2018-04-30 15:29:55,297 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - <==    Updates: 1
2018-04-30 15:30:07,033 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:30:07,034 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:30:07,035 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:30:07,249 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 15:30:07,250 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 15:30:07,251 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 15:30:07,278 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 15:30:07,279 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 15:30:07,316 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 15:30:15,444 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:28:54 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:30:15,510 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 15:28:53 CST 2018]; root of context hierarchy
2018-04-30 15:32:22,047 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 15:32:22,136 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 15:32:22 CST 2018]; root of context hierarchy
2018-04-30 15:32:22,183 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 15:32:22,459 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 15:32:22,521 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 15:32:22,651 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 15:32:22,866 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:32:23,015 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 15:32:23,015 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:32:23,305 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:32:23,305 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:32:23,311 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:32:23,313 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:32:23,314 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:32:23,322 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:32:23,322 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:32:23,333 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 15:32:23,425 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1376 ms
2018-04-30 15:32:23,482 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 15:32:23,484 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:32:23 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:32:23,484 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 15:32:23,597 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 15:32:23,850 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:32:23,852 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:32:23,853 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 15:32:23,853 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 15:32:23,856 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 15:32:23,856 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 15:32:23,857 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 15:32:23,860 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 15:32:23,861 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 15:32:23,861 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 15:32:23,862 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 15:32:23,863 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 15:32:23,863 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 15:32:23,863 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 15:32:24,226 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:32:23 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:32:24,353 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:32:23 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:32:24,569 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 15:32:24,688 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1206 ms
2018-04-30 15:32:26,034 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:32:26,053 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:32:26,067 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:32:26,422 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:32:26,423 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:32:26,433 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:32:33,803 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:32:33,803 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:32:33,805 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:32:55,970 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 15:32:55,971 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 15:32:55,973 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 15:32:55,979 INFO[com.summer.blog.controller.UserController:66] - admin: login
2018-04-30 15:32:56,210 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 15:32:56,211 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 15:32:56,213 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 15:32:56,226 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 15:32:56,227 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 15:32:56,247 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 15:32:56,264 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 15:32:56,264 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 15:32:56,267 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 15:33:10,340 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 15:32:23 CST 2018]; parent: Root WebApplicationContext
2018-04-30 15:33:10,354 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 15:32:22 CST 2018]; root of context hierarchy
2018-04-30 16:00:02,427 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:00:02,499 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:00:02 CST 2018]; root of context hierarchy
2018-04-30 16:00:02,570 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:00:02,814 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:00:02,877 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:00:03,057 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:00:03,314 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:00:03,489 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:00:03,490 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:00:03,863 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:00:03,864 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:00:03,870 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:00:03,872 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:00:03,873 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:00:03,880 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:00:03,881 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:00:03,892 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:00:04,027 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1598 ms
2018-04-30 16:00:04,214 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:00:04,217 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:00:04 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:00:04,217 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:00:04,334 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:00:04,574 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:00:04,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:00:04,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:00:04,576 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:00:04,576 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:00:04,576 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:00:04,577 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:00:04,580 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:00:04,580 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:00:04,581 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:00:04,581 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:00:04,581 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:00:04,582 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:00:04,582 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:00:05,022 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:00:04 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:00:05,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:00:04 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:00:05,482 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:00:05,609 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1394 ms
2018-04-30 16:00:07,078 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:00:07,105 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:00:07,121 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:00:07,428 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:00:07,429 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:00:07,432 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:00:24,374 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:00:24,374 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:00:24,376 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:00:46,652 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:00:46,653 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:00:46,804 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:01:10,877 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:01:10,910 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:01:10,933 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:01:45,460 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:00:04 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:01:45,516 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:00:02 CST 2018]; root of context hierarchy
2018-04-30 16:02:30,119 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:02:30,196 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:02:30 CST 2018]; root of context hierarchy
2018-04-30 16:02:30,243 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:02:30,478 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:02:30,545 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:02:30,680 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:02:30,921 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:02:31,097 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:02:31,097 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:02:31,408 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:02:31,408 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:02:31,414 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:02:31,416 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:02:31,417 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:02:31,424 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:02:31,424 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:02:31,436 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:02:31,535 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1413 ms
2018-04-30 16:02:31,635 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:02:31,637 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:02:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:02:31,638 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:02:31,768 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:02:32,007 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:02:32,008 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:02:32,009 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:02:32,009 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:02:32,009 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:02:32,010 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:02:32,010 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:02:32,013 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:02:32,013 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:02:32,014 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:02:32,014 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:02:32,015 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:02:32,015 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:02:32,015 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:02:32,430 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:02:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:02:32,570 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:02:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:02:32,850 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:02:33,038 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1403 ms
2018-04-30 16:02:34,377 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:02:34,396 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:02:34,569 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:02:34,862 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:02:34,863 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:02:34,865 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:02:48,724 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:02:48,725 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:02:48,732 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:03:02,294 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:03:02,295 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:03:02,387 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:03:18,977 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:03:18,978 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:03:18,979 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:04:15,239 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:02:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:04:15,346 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:02:30 CST 2018]; root of context hierarchy
2018-04-30 16:04:30,270 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:04:30,335 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:04:30 CST 2018]; root of context hierarchy
2018-04-30 16:04:30,372 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:04:30,603 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:04:30,665 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:04:30,792 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:04:31,074 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:04:31,217 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:04:31,217 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:04:31,530 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:04:31,531 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:04:31,536 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:04:31,538 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:04:31,540 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:04:31,546 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:04:31,547 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:04:31,557 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:04:31,653 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1381 ms
2018-04-30 16:04:31,727 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:04:31,730 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:04:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:04:31,730 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:04:31,868 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:04:32,117 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:04:32,119 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:04:32,119 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:04:32,120 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:04:32,120 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:04:32,121 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:04:32,122 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:04:32,129 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:04:32,131 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:04:32,131 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:04:32,132 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:04:32,132 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:04:32,132 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:04:32,133 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:04:32,530 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:04:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:04:32,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:04:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:04:32,875 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:04:33,016 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1289 ms
2018-04-30 16:04:33,636 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:04:33,655 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:04:33,682 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:04:33,963 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:04:33,964 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:04:33,966 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:04:40,184 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:04:40,635 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:04:40,637 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:05:01,509 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:05:01,510 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:05:01,539 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:05:01,546 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-04-30 16:05:01,753 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:05:01,754 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:05:01,776 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:05:01,788 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:05:01,789 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:05:01,890 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:05:01,901 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:05:01,902 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:05:01,904 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:05:06,638 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/user/tocheckUser.do] in DispatcherServlet with name 'myBlog'
2018-04-30 16:05:46,675 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:04:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:05:46,689 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:04:30 CST 2018]; root of context hierarchy
2018-04-30 16:09:29,543 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:09:29,618 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:09:29 CST 2018]; root of context hierarchy
2018-04-30 16:09:29,670 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:09:29,996 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:09:30,068 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:09:30,191 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:09:30,417 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:09:30,555 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:09:30,555 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:09:30,859 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:09:30,860 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:09:30,865 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:09:30,867 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:09:30,868 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:09:30,875 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:09:30,876 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:09:30,887 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:09:30,977 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1430 ms
2018-04-30 16:09:31,048 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:09:31,050 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:09:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:09:31,050 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:09:31,183 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:09:31,436 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:09:31,438 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:09:31,439 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:09:31,439 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:09:31,440 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:09:31,440 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:09:31,440 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:09:31,444 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:09:31,445 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:09:31,445 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:09:31,445 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:09:31,446 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:09:31,446 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:09:31,446 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:09:31,446 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:09:31,846 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:09:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:09:31,978 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:09:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:09:32,226 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:09:32,351 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1303 ms
2018-04-30 16:09:32,990 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:09:33,010 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:09:33,028 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:09:33,305 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:09:33,305 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:09:33,307 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:09:36,987 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:09:36,987 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:09:36,989 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:10:01,909 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:10:01,910 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:10:01,912 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:10:01,918 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-04-30 16:10:02,283 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:10:02,284 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:10:02,286 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:10:02,315 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:10:02,316 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:10:02,318 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:10:02,324 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:10:02,325 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:10:02,326 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:10:04,855 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/user/tocheckUser.do] in DispatcherServlet with name 'myBlog'
2018-04-30 16:12:00,964 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:09:31 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:12:00,981 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:09:29 CST 2018]; root of context hierarchy
2018-04-30 16:12:08,382 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:12:08,423 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:12:08 CST 2018]; root of context hierarchy
2018-04-30 16:12:08,456 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:12:08,587 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:12:08,625 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:12:08,715 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:12:08,886 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:12:09,032 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:12:09,033 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:12:09,185 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:12:09,185 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:12:09,191 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:12:09,193 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:12:09,194 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:12:09,200 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:12:09,201 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:12:09,212 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:12:09,310 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 926 ms
2018-04-30 16:12:09,361 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:12:09,364 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:12:09 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:12:09,364 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:12:09,506 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:12:09,747 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:12:09,750 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:12:09,750 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:12:09,751 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:12:09,751 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:12:09,753 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:12:09,753 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:12:09,763 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:12:09,764 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:12:09,766 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:12:09,766 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:12:09,767 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:12:09,769 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:12:09,769 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:12:09,769 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:12:09,770 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:12:10,187 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:12:09 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:12:10,338 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:12:09 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:12:10,560 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:12:10,665 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1303 ms
2018-04-30 16:12:11,443 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:12:11,465 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:12:11,492 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:12:11,908 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:12:11,909 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:12:11,912 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:12:13,284 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:12:13,284 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:12:13,287 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:12:23,998 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:12:23,999 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:12:24,000 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:12:24,004 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:12:24,098 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:12:24,099 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:12:24,101 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:12:24,112 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:12:24,113 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:12:24,117 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:12:24,128 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:12:24,129 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:12:24,130 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:12:26,083 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:12:26,084 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:12:26,085 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:12:26,090 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:12:26,091 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:12:26,092 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:12:33,931 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:12:33,932 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:12:33,933 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:12:34,044 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:12:34,045 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:12:34,052 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:13:21,042 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:12:09 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:13:21,057 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:12:08 CST 2018]; root of context hierarchy
2018-04-30 16:15:10,049 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:15:10,105 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:15:10 CST 2018]; root of context hierarchy
2018-04-30 16:15:10,140 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:15:10,331 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:15:10,369 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:15:10,464 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:15:10,666 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:15:10,830 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:15:10,831 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:15:11,025 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:15:11,026 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:15:11,032 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:15:11,036 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:15:11,037 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:15:11,044 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:15:11,045 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:15:11,058 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:15:11,192 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1141 ms
2018-04-30 16:15:11,245 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:15:11,247 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:15:11 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:15:11,248 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:15:11,399 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:15:11,662 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:15:11,664 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:15:11,664 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:15:11,665 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:15:11,665 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:15:11,665 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:15:11,665 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:15:11,671 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:15:11,672 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:15:11,672 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:15:11,672 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:15:11,673 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:15:11,673 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:15:11,673 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:15:11,673 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:15:11,674 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:15:12,051 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:15:11 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:15:12,191 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:15:11 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:15:12,458 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:15:12,578 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1332 ms
2018-04-30 16:15:13,294 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:15:13,312 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:15:13,329 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:15:13,524 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:15:13,524 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:15:13,526 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:15:14,463 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:15:14,464 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:15:14,465 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:15:28,528 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:15:28,529 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:15:28,531 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:15:28,537 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:15:28,601 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:15:28,602 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:15:28,603 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:15:28,639 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:15:28,640 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:15:28,642 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:15:28,660 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:15:28,660 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:15:28,662 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:15:30,731 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:15:30,732 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:15:30,734 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:15:30,741 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:15:30,742 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:15:30,743 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:15:30,850 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:15:30,850 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:15:30,852 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:16:25,114 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:16:25,115 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:16:25,122 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:16:25,133 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:16:25,133 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:16:25,192 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:16:25,374 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:16:25,375 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:16:25,376 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:17:59,607 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:15:11 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:17:59,623 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:15:10 CST 2018]; root of context hierarchy
2018-04-30 16:18:06,730 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:18:06,775 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:18:06 CST 2018]; root of context hierarchy
2018-04-30 16:18:06,811 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:18:06,970 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:18:07,008 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:18:07,106 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:18:07,310 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:18:07,455 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:18:07,456 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:18:07,629 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:18:07,629 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:18:07,637 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:18:07,639 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:18:07,641 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:18:07,648 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:18:07,649 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:18:07,661 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:18:07,758 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1026 ms
2018-04-30 16:18:07,815 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:18:07,818 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:18:07 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:18:07,818 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:18:07,953 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:18:08,186 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:18:08,188 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:18:08,189 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:18:08,189 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:18:08,190 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:18:08,190 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:18:08,190 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:18:08,196 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:18:08,197 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:18:08,197 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:18:08,198 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:18:08,198 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:18:08,198 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:18:08,199 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:18:08,199 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:18:08,200 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:18:08,584 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:18:07 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:18:08,731 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:18:07 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:18:08,970 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:18:09,097 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1282 ms
2018-04-30 16:18:09,626 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:18:09,645 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:18:09,661 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:18:09,895 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:18:09,895 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:18:09,897 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:18:14,074 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:18:14,075 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:18:14,077 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:18:37,936 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:18:37,937 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:18:37,940 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:18:37,986 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:18:38,211 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:18:38,212 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:18:38,213 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:18:38,270 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:18:38,271 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:18:38,288 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:18:38,357 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:18:38,358 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:18:38,359 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:18:40,090 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:18:40,091 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:18:40,092 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:18:40,097 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:18:40,098 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:18:40,099 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:18:40,227 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:18:40,228 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:18:40,229 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:19:22,719 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:18:07 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:19:22,730 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:18:06 CST 2018]; root of context hierarchy
2018-04-30 16:19:53,576 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:19:53,642 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:19:53 CST 2018]; root of context hierarchy
2018-04-30 16:19:53,706 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:19:53,991 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:19:54,056 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:19:54,253 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:19:54,535 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:19:54,712 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:19:54,713 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:19:55,029 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:19:55,029 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:19:55,035 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:19:55,037 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:19:55,038 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:19:55,045 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:19:55,046 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:19:55,057 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:19:55,180 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1602 ms
2018-04-30 16:19:55,308 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:19:55,310 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:19:55 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:19:55,310 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:19:55,429 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:19:55,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:19:55,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:19:55,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:19:55,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:19:55,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:19:55,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:19:55,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:19:55,640 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:19:55,641 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:19:55,641 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:19:55,641 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:19:55,641 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:19:55,642 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:19:55,642 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:19:55,642 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:19:55,643 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:19:56,001 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:19:55 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:19:56,133 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:19:55 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:19:56,377 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:19:56,513 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1205 ms
2018-04-30 16:19:57,106 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:19:57,124 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:19:57,140 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:19:57,382 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:19:57,383 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:19:57,385 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:19:58,408 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:19:58,408 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:19:58,411 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:20:32,079 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:20:32,080 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:20:32,082 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:20:32,088 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:20:32,159 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:20:32,160 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:20:32,178 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:20:32,202 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:20:32,203 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:20:32,205 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:20:32,229 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:20:32,230 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:20:32,232 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:20:35,159 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:20:35,160 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:20:35,161 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:20:49,333 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:20:49,334 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:20:49,335 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:20:49,359 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:20:49,360 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:20:49,382 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:20:49,419 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:20:49,420 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:20:49,431 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:21:49,706 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:19:55 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:21:49,723 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:19:53 CST 2018]; root of context hierarchy
2018-04-30 16:22:00,843 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:22:00,885 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:22:00 CST 2018]; root of context hierarchy
2018-04-30 16:22:00,918 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:22:00,978 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:22:01,016 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:22:01,114 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:22:01,317 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:22:01,492 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:22:01,492 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:22:01,649 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:22:01,650 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:22:01,656 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:22:01,658 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:22:01,658 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:22:01,665 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:22:01,665 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:22:01,676 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:22:01,763 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 918 ms
2018-04-30 16:22:01,919 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:22:01,922 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:22:01 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:22:01,922 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:22:02,062 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:22:02,312 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:22:02,313 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:22:02,314 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:22:02,314 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:22:02,314 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:22:02,315 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:22:02,315 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:22:02,323 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:22:02,323 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:22:02,324 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:22:02,324 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:22:02,324 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:22:02,325 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:22:02,325 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:22:02,325 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:22:02,326 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:22:02,713 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:22:01 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:22:02,857 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:22:01 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:22:03,136 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:22:03,253 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1334 ms
2018-04-30 16:22:03,629 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:22:03,647 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:22:03,662 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:22:03,880 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:22:03,881 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:22:03,883 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:22:04,357 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:22:04,357 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:22:04,359 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:22:23,166 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:22:23,166 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:22:23,168 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:22:23,173 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:22:23,233 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:22:23,234 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:22:23,236 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:22:23,246 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:22:23,246 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:22:23,248 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:22:23,253 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:22:23,254 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:22:23,255 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:22:25,460 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:22:25,461 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:22:25,463 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:22:25,473 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:22:25,474 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:22:25,475 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:22:25,593 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:22:25,593 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:22:25,596 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:24:01,295 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:22:01 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:24:01,308 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:22:00 CST 2018]; root of context hierarchy
2018-04-30 16:24:25,092 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:24:25,134 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:24:25 CST 2018]; root of context hierarchy
2018-04-30 16:24:25,168 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:24:25,230 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:24:25,276 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:24:25,396 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:24:25,617 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:24:25,803 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:24:25,804 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:24:25,957 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:24:25,958 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:24:25,965 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:24:25,967 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:24:25,968 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:24:25,974 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:24:25,975 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:24:25,987 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:24:26,122 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1027 ms
2018-04-30 16:24:26,173 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:24:26,176 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:24:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:24:26,176 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:24:26,289 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:24:26,492 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:24:26,494 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:24:26,494 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:24:26,495 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:24:26,495 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:24:26,495 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:24:26,496 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:24:26,502 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:24:26,502 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:24:26,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:24:26,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:24:26,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:24:26,504 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:24:26,504 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:24:26,504 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:24:26,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:24:26,842 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:24:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:24:26,980 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:24:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:24:27,221 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:24:27,344 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1171 ms
2018-04-30 16:24:28,025 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:24:28,044 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:24:28,059 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:24:28,264 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:24:28,265 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:24:28,266 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:24:28,768 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:24:28,769 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:24:28,770 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:24:43,778 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:24:43,779 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:24:43,781 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:24:43,786 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:24:43,840 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:24:43,840 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:24:43,842 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:24:43,850 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:24:43,850 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:24:43,852 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:24:43,858 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:24:43,859 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:24:43,861 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:24:46,577 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:24:46,577 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:24:46,578 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:24:46,611 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:24:46,611 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:24:46,613 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:24:46,761 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:24:46,762 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:24:46,763 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:25:20,703 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:24:26 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:25:20,717 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:24:25 CST 2018]; root of context hierarchy
2018-04-30 16:25:29,809 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:25:29,849 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:25:29 CST 2018]; root of context hierarchy
2018-04-30 16:25:29,882 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:25:30,035 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:25:30,089 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:25:30,185 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:25:30,368 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:25:30,500 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:25:30,501 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:25:30,638 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:25:30,638 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:25:30,644 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:25:30,646 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:25:30,647 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:25:30,653 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:25:30,653 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:25:30,664 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:25:30,756 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 945 ms
2018-04-30 16:25:30,803 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:25:30,805 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:25:30 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:25:30,805 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:25:30,912 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:25:31,143 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:25:31,144 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:25:31,144 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:25:31,144 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:25:31,145 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:25:31,145 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:25:31,145 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:25:31,153 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:25:31,153 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:25:31,154 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:25:31,154 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:25:31,155 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:25:31,155 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:25:31,155 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:25:31,156 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:25:31,156 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:25:31,500 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:25:30 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:25:31,631 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:25:30 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:25:31,859 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:25:31,968 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1165 ms
2018-04-30 16:25:32,843 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:25:32,862 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:25:32,878 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:25:33,112 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:25:33,112 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:25:33,114 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:25:34,675 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:25:34,681 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:25:34,683 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:25:56,324 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:25:56,325 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:25:56,327 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:25:56,331 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:25:56,390 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:25:56,390 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:25:56,392 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:25:56,406 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:25:56,407 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:25:56,410 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:25:56,416 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:25:56,417 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:25:56,418 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:25:59,834 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:25:59,834 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:25:59,844 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:25:59,851 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:25:59,852 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:25:59,863 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:25:59,974 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:25:59,974 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:25:59,976 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:28:13,247 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:25:30 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:28:13,261 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:25:29 CST 2018]; root of context hierarchy
2018-04-30 16:28:20,188 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:28:20,231 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:28:20 CST 2018]; root of context hierarchy
2018-04-30 16:28:20,265 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:28:20,326 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:28:20,366 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:28:20,466 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:28:20,657 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:28:20,843 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:28:20,844 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:28:21,005 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:28:21,006 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:28:21,014 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:28:21,016 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:28:21,017 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:28:21,025 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:28:21,025 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:28:21,038 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:28:21,134 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 943 ms
2018-04-30 16:28:21,244 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:28:21,247 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:28:21 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:28:21,248 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:28:21,360 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:28:21,576 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:28:21,578 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:28:21,578 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:28:21,579 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:28:21,579 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:28:21,579 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:28:21,580 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:28:21,586 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:28:21,587 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:28:21,587 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:28:21,587 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:28:21,587 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:28:21,588 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:28:21,588 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:28:21,588 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:28:21,589 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:28:21,967 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:28:21 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:28:22,116 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:28:21 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:28:22,378 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:28:22,512 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1267 ms
2018-04-30 16:28:23,216 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:28:23,235 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:28:23,253 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:28:23,561 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:28:23,562 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:28:23,565 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:28:24,023 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:28:24,023 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:28:24,026 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:28:38,610 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:28:38,611 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:28:38,612 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:28:38,618 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:28:38,677 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:28:38,678 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:28:38,680 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:28:38,688 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:28:38,689 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:28:38,691 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:28:38,697 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:28:38,698 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:28:38,699 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:28:41,891 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:28:41,892 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:28:41,893 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:28:41,905 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:28:41,905 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:28:41,907 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:28:42,084 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:28:42,085 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:28:42,086 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:28:52,307 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:28:52,308 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:28:52,310 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:29:04,355 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:28:21 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:29:04,366 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:28:20 CST 2018]; root of context hierarchy
2018-04-30 16:29:34,883 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:29:34,926 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:29:34 CST 2018]; root of context hierarchy
2018-04-30 16:29:34,959 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:29:35,019 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:29:35,065 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:29:35,172 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:29:35,377 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:29:35,569 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:29:35,570 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:29:35,747 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:29:35,748 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:29:35,754 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:29:35,756 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:29:35,757 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:29:35,765 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:29:35,766 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:29:35,778 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:29:35,879 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 993 ms
2018-04-30 16:29:36,005 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:29:36,007 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:29:36 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:29:36,007 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:29:36,109 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:29:36,330 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:29:36,332 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:29:36,333 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:29:36,333 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:29:36,334 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:29:36,334 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:29:36,334 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:29:36,340 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:29:36,341 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:29:36,341 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:29:36,341 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:29:36,341 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:29:36,342 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:29:36,342 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:29:36,343 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:29:36,343 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:29:36,710 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:29:36 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:29:36,838 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:29:36 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:29:37,078 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:29:37,203 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1198 ms
2018-04-30 16:29:37,797 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:29:37,816 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:29:37,832 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:29:38,053 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:29:38,054 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:29:38,055 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:29:39,137 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:29:39,137 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:29:39,139 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:29:54,730 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:29:54,731 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:29:54,733 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:29:54,738 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:29:54,796 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:29:54,797 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:29:54,799 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:29:54,808 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:29:54,808 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:29:54,811 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:29:54,823 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:29:54,824 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:29:54,826 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:29:57,415 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:29:57,416 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:29:57,468 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:29:57,473 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:29:57,474 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:29:57,475 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:29:57,876 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:29:57,876 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:29:57,878 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:31:21,342 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:29:36 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:31:21,355 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:29:34 CST 2018]; root of context hierarchy
2018-04-30 16:31:27,940 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:31:27,980 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:31:27 CST 2018]; root of context hierarchy
2018-04-30 16:31:28,013 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:31:28,158 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:31:28,196 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:31:28,289 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:31:28,479 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:31:28,624 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:31:28,625 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:31:28,819 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:31:28,819 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:31:28,825 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:31:28,827 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:31:28,828 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:31:28,834 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:31:28,835 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:31:28,847 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:31:28,940 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 997 ms
2018-04-30 16:31:28,987 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:31:28,989 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:31:28 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:31:28,989 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:31:29,114 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:31:29,362 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:31:29,364 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:31:29,365 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:31:29,366 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:31:29,366 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:31:29,367 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:31:29,367 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:31:29,381 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:31:29,382 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:31:29,382 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:31:29,383 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:31:29,383 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:31:29,384 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:31:29,385 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:31:29,385 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:31:29,386 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:31:29,812 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:31:28 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:31:29,953 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:31:28 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:31:30,173 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:31:30,276 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1289 ms
2018-04-30 16:31:30,912 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:31:30,930 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:31:30,946 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:31:31,153 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:31:31,154 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:31:31,156 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:31:31,812 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:31:31,812 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:31:31,877 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:31:44,477 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:31:44,478 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:31:44,480 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:31:44,485 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:31:44,539 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:31:44,539 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:31:44,541 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:31:44,548 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:31:44,548 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:31:44,550 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:31:44,555 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:31:44,556 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:31:44,557 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:31:49,079 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:31:49,079 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:31:49,080 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:31:58,950 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-30 16:31:58,951 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: admin@admin.com(String)
2018-04-30 16:31:58,952 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 1
2018-04-30 16:32:41,688 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:32:41,689 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:32:41,691 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:32:41,830 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:32:41,831 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:32:41,833 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:32:41,855 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:32:41,856 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:32:41,859 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:32:59,294 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:32:59,295 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: manager(String)
2018-04-30 16:32:59,297 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:32:59,302 INFO[com.summer.blog.controller.UserController:73] - manager: login
2018-04-30 16:32:59,327 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:32:59,327 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:32:59,328 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:32:59,336 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:32:59,337 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:32:59,338 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:32:59,343 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:32:59,344 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:32:59,346 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:32:59,358 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:32:59,359 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:32:59,360 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:32:59,383 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:32:59,384 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:32:59,385 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:33:02,448 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:33:02,448 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: manager(String)
2018-04-30 16:33:02,449 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:33:16,403 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-30 16:33:16,404 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: manager@manager.com(String)
2018-04-30 16:33:16,405 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-30 16:33:16,412 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==>  Preparing: UPDATE user_info SET email = ?, password = ? WHERE username = ? 
2018-04-30 16:33:16,413 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==> Parameters: manager@manager.com(String), manager(String), manager(String)
2018-04-30 16:33:16,692 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - <==    Updates: 1
2018-04-30 16:33:25,949 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:33:25,950 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: spring(String)
2018-04-30 16:33:25,951 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:33:25,951 INFO[com.summer.blog.controller.UserController:73] - spring: login
2018-04-30 16:33:25,972 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:33:25,973 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:33:25,974 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:33:25,984 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:33:25,985 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 16:33:25,985 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:33:25,989 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:33:25,989 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 16:33:25,990 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:33:25,995 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:33:25,995 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-04-30 16:33:25,996 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:33:25,999 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:33:26,000 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-04-30 16:33:26,001 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:33:32,249 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:33:32,250 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: spring(String)
2018-04-30 16:33:32,251 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:34:18,300 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:31:28 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:34:18,313 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:31:27 CST 2018]; root of context hierarchy
2018-04-30 16:36:03,648 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:36:03,694 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:36:03 CST 2018]; root of context hierarchy
2018-04-30 16:36:03,728 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:36:03,802 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:36:03,849 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:36:03,949 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:36:04,144 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:36:04,317 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:36:04,317 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:36:04,482 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:36:04,483 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:36:04,489 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:36:04,492 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:36:04,493 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:36:04,500 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:36:04,501 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:36:04,512 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:36:04,604 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 952 ms
2018-04-30 16:36:04,746 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:36:04,749 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:36:04 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:36:04,749 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:36:04,858 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:36:05,102 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:36:05,103 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:36:05,104 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:36:05,104 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:36:05,104 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:36:05,105 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:36:05,105 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:36:05,112 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:36:05,113 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:36:05,114 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:36:05,114 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:36:05,114 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:36:05,115 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:36:05,116 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:36:05,116 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:36:05,116 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:36:05,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:36:04 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:36:05,685 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:36:04 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:36:05,939 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:36:06,056 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1309 ms
2018-04-30 16:36:06,488 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:36:06,508 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:36:06,523 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:36:06,734 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:36:06,735 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:36:06,736 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:36:07,174 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:36:07,176 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:36:07,178 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:36:15,254 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:36:15,255 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-30 16:36:15,256 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:36:15,260 INFO[com.summer.blog.controller.UserController:73] - admin: login
2018-04-30 16:36:15,331 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:36:15,332 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:36:15,334 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:36:15,346 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:36:15,347 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:36:15,350 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:36:15,357 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:36:15,358 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:36:15,359 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:36:19,140 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:36:19,141 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:36:19,142 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:36:19,148 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:36:19,148 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:36:19,150 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:36:19,242 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:36:19,242 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:36:19,243 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:36:21,597 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:36:21,598 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:36:21,600 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:36:21,603 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:36:21,604 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:36:21,605 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:36:21,697 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:36:21,698 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:36:21,699 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:36:28,793 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:36:28,794 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-30 16:36:28,795 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-30 16:36:28,799 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:36:28,800 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-30 16:36:28,828 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-30 16:36:28,919 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:36:28,920 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-04-30 16:36:28,922 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:37:04,267 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:36:04 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:37:04,284 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:36:03 CST 2018]; root of context hierarchy
2018-04-30 16:37:10,781 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 16:37:10,826 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 16:37:10 CST 2018]; root of context hierarchy
2018-04-30 16:37:10,859 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 16:37:10,915 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 16:37:10,962 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 16:37:11,064 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 16:37:11,260 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:37:11,439 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 16:37:11,440 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:37:11,638 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:37:11,638 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:37:11,645 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:37:11,647 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:37:11,648 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:37:11,654 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:37:11,655 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:37:11,669 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 16:37:11,818 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1035 ms
2018-04-30 16:37:11,886 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 16:37:11,888 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:37:11 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:37:11,889 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 16:37:11,992 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 16:37:12,239 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 16:37:12,240 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:37:12,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:37:12,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 16:37:12,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 16:37:12,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 16:37:12,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 16:37:12,248 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 16:37:12,249 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 16:37:12,249 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 16:37:12,250 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 16:37:12,250 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 16:37:12,250 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 16:37:12,251 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 16:37:12,251 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 16:37:12,251 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 16:37:12,601 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:37:11 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:37:12,736 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:37:11 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:37:12,976 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 16:37:13,116 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1230 ms
2018-04-30 16:37:13,651 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:37:13,669 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:37:13,685 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:37:13,877 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:37:13,877 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:37:13,879 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:37:14,991 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:37:14,991 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:37:14,993 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:37:31,696 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:37:31,697 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: manager(String)
2018-04-30 16:37:31,698 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:37:31,702 INFO[com.summer.blog.controller.UserController:73] - manager: login
2018-04-30 16:37:31,757 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:37:31,757 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:37:31,759 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:37:31,769 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:37:31,770 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:37:31,772 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:37:31,776 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:37:31,777 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:37:31,778 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:37:31,783 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:37:31,783 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:37:31,784 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:37:31,788 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:37:31,789 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:37:31,790 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:37:34,764 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:37:34,765 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:37:34,783 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:37:34,788 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:37:34,789 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:37:34,790 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:37:34,794 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:37:34,795 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:37:34,796 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:37:34,800 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:37:34,801 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:37:34,802 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:37:34,866 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:37:34,867 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: manager(String)
2018-04-30 16:37:34,868 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:37:38,401 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:37:38,403 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:37:38,404 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:37:38,407 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:37:38,408 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:37:38,410 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:37:38,414 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:37:38,415 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:37:38,416 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:37:38,419 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:37:38,420 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:37:38,421 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:37:38,511 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:37:38,512 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: manager(String)
2018-04-30 16:37:38,512 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:37:44,291 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:37:44,292 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:37:44,293 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:37:44,296 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:37:44,297 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:37:44,298 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:37:44,301 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:37:44,301 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: manager(String)
2018-04-30 16:37:44,302 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 2
2018-04-30 16:37:44,306 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:37:44,306 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: manager(String)
2018-04-30 16:37:44,307 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 6
2018-04-30 16:37:44,396 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:37:44,397 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: manager(String)
2018-04-30 16:37:44,398 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:38:00,591 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:38:00,592 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: summer(String)
2018-04-30 16:38:00,593 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:38:00,598 INFO[com.summer.blog.controller.UserController:73] - summer: login
2018-04-30 16:38:00,618 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:38:00,618 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:38:00,620 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:38:00,627 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:00,627 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: summer(String)
2018-04-30 16:38:00,628 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:00,631 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:00,631 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: summer(String)
2018-04-30 16:38:00,632 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:00,635 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:00,635 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: summer(String)
2018-04-30 16:38:00,637 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:00,641 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:00,641 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: summer(String)
2018-04-30 16:38:00,642 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:04,027 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:04,028 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: summer(String)
2018-04-30 16:38:04,029 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:04,032 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:04,032 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: summer(String)
2018-04-30 16:38:04,033 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:04,037 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:04,038 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: summer(String)
2018-04-30 16:38:04,038 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:04,041 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:04,042 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: summer(String)
2018-04-30 16:38:04,043 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:04,152 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:38:04,152 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: summer(String)
2018-04-30 16:38:04,174 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:38:06,216 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:06,217 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: summer(String)
2018-04-30 16:38:06,218 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:06,222 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:06,222 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: summer(String)
2018-04-30 16:38:06,223 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:06,235 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:06,236 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: summer(String)
2018-04-30 16:38:06,237 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:06,241 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:06,241 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: summer(String)
2018-04-30 16:38:06,242 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:06,329 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:38:06,330 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: summer(String)
2018-04-30 16:38:06,331 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:38:21,947 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-30 16:38:21,948 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: summer@summer.com(String)
2018-04-30 16:38:21,948 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-30 16:38:21,954 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==>  Preparing: UPDATE user_info SET email = ?, password = ? WHERE username = ? 
2018-04-30 16:38:21,955 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==> Parameters: summer@summer.com(String), summer(String), summer(String)
2018-04-30 16:38:22,034 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - <==    Updates: 1
2018-04-30 16:38:31,693 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:38:31,694 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: fall(String)
2018-04-30 16:38:31,695 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:38:31,696 INFO[com.summer.blog.controller.UserController:73] - fall: login
2018-04-30 16:38:31,714 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:38:31,714 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:38:31,716 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:38:31,725 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:31,725 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: fall(String)
2018-04-30 16:38:31,726 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:31,730 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:31,730 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: fall(String)
2018-04-30 16:38:31,731 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:31,734 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:31,735 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: fall(String)
2018-04-30 16:38:31,735 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:31,738 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:31,738 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: fall(String)
2018-04-30 16:38:31,739 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:33,975 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:33,976 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: fall(String)
2018-04-30 16:38:33,977 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:33,981 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:33,982 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: fall(String)
2018-04-30 16:38:33,983 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:33,988 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:38:33,989 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: fall(String)
2018-04-30 16:38:33,990 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:38:33,992 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:38:33,993 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: fall(String)
2018-04-30 16:38:33,994 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:38:34,091 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:38:34,091 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: fall(String)
2018-04-30 16:38:34,092 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:39:03,391 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-30 16:39:03,391 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: fall@fall.com(String)
2018-04-30 16:39:03,392 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-30 16:39:03,396 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==>  Preparing: UPDATE user_info SET email = ?, password = ? WHERE username = ? 
2018-04-30 16:39:03,396 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==> Parameters: fall@fall.com(String), fall(String), fall(String)
2018-04-30 16:39:03,453 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - <==    Updates: 1
2018-04-30 16:39:12,256 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:39:12,256 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: winter(String)
2018-04-30 16:39:12,257 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:39:12,258 INFO[com.summer.blog.controller.UserController:73] - winter: login
2018-04-30 16:39:12,279 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:39:12,280 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:39:12,281 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:39:12,290 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:39:12,290 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: winter(String)
2018-04-30 16:39:12,291 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:39:12,294 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:39:12,294 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: winter(String)
2018-04-30 16:39:12,295 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:39:12,297 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:39:12,298 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: winter(String)
2018-04-30 16:39:12,298 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:39:12,300 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:39:12,301 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: winter(String)
2018-04-30 16:39:12,302 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:39:15,805 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:39:15,805 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: winter(String)
2018-04-30 16:39:15,806 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:39:15,810 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:39:15,810 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: winter(String)
2018-04-30 16:39:15,821 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:39:15,825 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:39:15,825 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: winter(String)
2018-04-30 16:39:15,826 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-04-30 16:39:15,829 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:39:15,829 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: winter(String)
2018-04-30 16:39:15,830 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-04-30 16:39:15,954 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:39:15,955 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: winter(String)
2018-04-30 16:39:15,956 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:39:30,193 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-30 16:39:30,194 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: winter@winter.com(String)
2018-04-30 16:39:30,195 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-30 16:39:30,198 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==>  Preparing: UPDATE user_info SET email = ?, password = ? WHERE username = ? 
2018-04-30 16:39:30,199 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==> Parameters: winter@winter.com(String), winter(String), winter(String)
2018-04-30 16:39:30,280 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - <==    Updates: 1
2018-04-30 16:39:38,226 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-30 16:39:38,227 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: test(String)
2018-04-30 16:39:38,227 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-30 16:39:38,228 INFO[com.summer.blog.controller.UserController:73] - test: login
2018-04-30 16:39:38,248 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 16:39:38,249 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 16:39:38,251 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 16:39:38,255 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:39:38,256 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: test(String)
2018-04-30 16:39:38,256 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 0
2018-04-30 16:39:38,259 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:39:38,260 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: test(String)
2018-04-30 16:39:38,263 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 0
2018-04-30 16:39:38,268 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:39:38,269 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: test(String)
2018-04-30 16:39:38,269 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 0
2018-04-30 16:39:38,272 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:39:38,272 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: test(String)
2018-04-30 16:39:38,273 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 0
2018-04-30 16:39:40,201 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:39:40,202 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: test(String)
2018-04-30 16:39:40,202 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 0
2018-04-30 16:39:40,205 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:39:40,206 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: test(String)
2018-04-30 16:39:40,206 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 0
2018-04-30 16:39:40,209 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-30 16:39:40,209 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: test(String)
2018-04-30 16:39:40,210 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 0
2018-04-30 16:39:40,212 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-30 16:39:40,213 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: test(String)
2018-04-30 16:39:40,213 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 0
2018-04-30 16:39:40,300 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-04-30 16:39:40,301 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: test(String)
2018-04-30 16:39:40,301 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-04-30 16:39:54,480 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-30 16:39:54,480 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: test@test.com(String)
2018-04-30 16:39:54,481 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-30 16:39:54,484 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==>  Preparing: UPDATE user_info SET email = ?, password = ? WHERE username = ? 
2018-04-30 16:39:54,485 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - ==> Parameters: test@test.com(String), 123(String), test(String)
2018-04-30 16:39:54,551 DEBUG[com.summer.blog.dao.UserDao.updateUser:159] - <==    Updates: 1
2018-04-30 16:40:25,277 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 16:37:11 CST 2018]; parent: Root WebApplicationContext
2018-04-30 16:40:25,289 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 16:37:10 CST 2018]; root of context hierarchy
2018-04-30 21:08:38,843 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 21:08:38,930 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 21:08:38 CST 2018]; root of context hierarchy
2018-04-30 21:08:38,977 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 21:08:39,286 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 21:08:39,346 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 21:08:39,455 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 21:08:39,727 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:08:40,266 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 21:08:40,267 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:08:40,605 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:08:40,608 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:08:40,624 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:08:40,626 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:08:40,628 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:08:40,635 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:08:40,636 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:08:40,657 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:08:40,748 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1882 ms
2018-04-30 21:08:40,800 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 21:08:40,802 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:08:40 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:08:40,803 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 21:08:40,924 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:08:41,231 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 21:08:41,232 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 21:08:41,233 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:08:41,233 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:08:41,233 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 21:08:41,234 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 21:08:41,234 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 21:08:41,240 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 21:08:41,240 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 21:08:41,240 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:08:41,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 21:08:41,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/*]}" onto public java.lang.String com.summer.blog.controller.UserController.page404()
2018-04-30 21:08:41,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 21:08:41,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 21:08:41,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 21:08:41,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 21:08:41,242 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 21:08:41,603 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:08:40 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:08:41,761 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:08:40 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:08:41,983 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 21:08:42,170 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1370 ms
2018-04-30 21:08:43,108 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:08:43,124 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:08:43,277 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:08:43,498 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:08:43,498 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:08:43,518 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:08:52,978 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:08:52,978 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:08:53,074 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:09:31,943 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:08:40 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:09:31,956 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 21:08:38 CST 2018]; root of context hierarchy
2018-04-30 21:09:47,183 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 21:09:47,230 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 21:09:47 CST 2018]; root of context hierarchy
2018-04-30 21:09:47,274 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 21:09:47,442 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 21:09:47,503 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 21:09:47,620 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 21:09:47,893 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:09:48,046 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 21:09:48,047 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:09:48,252 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:09:48,253 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:09:48,259 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:09:48,261 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:09:48,262 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:09:48,268 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:09:48,269 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:09:48,281 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:09:48,376 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1191 ms
2018-04-30 21:09:48,502 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 21:09:48,504 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:09:48 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:09:48,505 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 21:09:48,635 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:09:48,884 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 21:09:48,885 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 21:09:48,886 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:09:48,887 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:09:48,887 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 21:09:48,887 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 21:09:48,888 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 21:09:48,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:09:48,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 21:09:48,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 21:09:48,901 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 21:09:48,901 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/*]}" onto public java.lang.String com.summer.blog.controller.UserController.page404()
2018-04-30 21:09:48,901 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 21:09:48,902 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 21:09:48,902 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 21:09:48,902 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 21:09:48,903 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-30 21:09:49,287 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:09:48 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:09:49,412 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:09:48 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:09:49,673 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 21:09:49,834 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1332 ms
2018-04-30 21:09:50,589 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:09:50,609 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:09:50,638 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:09:50,899 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:09:50,900 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:09:50,921 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:09:54,310 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:09:54,311 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:09:54,476 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:17:29,676 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:09:48 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:17:29,866 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 21:09:47 CST 2018]; root of context hierarchy
2018-04-30 21:18:30,174 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 21:18:30,246 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 21:18:30 CST 2018]; root of context hierarchy
2018-04-30 21:18:30,284 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 21:18:30,468 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 21:18:30,527 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 21:18:30,640 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 21:18:30,936 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:18:31,155 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 21:18:31,156 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:18:31,858 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:18:31,859 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:18:31,865 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:18:31,867 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:18:31,868 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:18:31,875 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:18:31,876 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:18:31,928 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:18:32,039 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1863 ms
2018-04-30 21:18:32,153 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 21:18:32,155 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:18:32 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:18:32,155 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 21:18:32,275 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:18:32,524 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 21:18:32,525 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:18:32,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:18:32,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 21:18:32,527 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 21:18:32,527 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 21:18:32,528 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 21:18:32,534 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 21:18:32,535 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 21:18:32,535 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 21:18:32,536 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 21:18:32,536 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/*]}" onto public java.lang.String com.summer.blog.controller.UserController.page404()
2018-04-30 21:18:32,536 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:18:32,537 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 21:18:32,537 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 21:18:32,538 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 21:18:32,922 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:18:32 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:18:33,082 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:18:32 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:18:33,324 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 21:18:33,476 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1323 ms
2018-04-30 21:18:34,375 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:18:34,395 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:18:34,661 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:18:34,928 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:18:34,929 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:18:34,982 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:18:50,600 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:18:51,632 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:18:52,258 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:19:36,052 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:18:32 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:19:36,125 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 21:18:30 CST 2018]; root of context hierarchy
2018-04-30 21:20:55,220 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 21:20:55,293 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 21:20:55 CST 2018]; root of context hierarchy
2018-04-30 21:20:55,340 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 21:20:55,591 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 21:20:55,651 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 21:20:55,742 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 21:20:55,965 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:20:56,134 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 21:20:56,135 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:20:56,348 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:20:56,348 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:20:56,354 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:20:56,356 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:20:56,357 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:20:56,364 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:20:56,365 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:20:56,376 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:20:56,471 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1249 ms
2018-04-30 21:20:56,560 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 21:20:56,562 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:20:56 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:20:56,562 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 21:20:56,664 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:20:57,378 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 21:20:57,380 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/*]}" onto public java.lang.String com.summer.blog.controller.ArticleController.page404()
2018-04-30 21:20:57,380 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 21:20:57,381 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:20:57,381 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 21:20:57,381 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 21:20:57,381 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 21:20:57,382 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:20:57,387 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 21:20:57,387 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 21:20:57,388 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:20:57,388 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 21:20:57,388 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 21:20:57,389 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 21:20:57,389 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 21:20:57,389 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 21:20:57,780 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:20:56 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:20:57,909 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:20:56 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:20:58,106 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 21:20:58,246 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1686 ms
2018-04-30 21:20:58,950 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:20:58,969 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:20:59,085 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:20:59,362 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:20:59,362 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:20:59,371 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:21:14,894 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:21:14,894 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:21:15,100 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:21:29,271 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:21:29,272 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-04-30 21:21:29,365 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-30 21:33:34,655 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:20:56 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:33:34,805 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 21:20:55 CST 2018]; root of context hierarchy
2018-04-30 21:39:50,659 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 21:39:50,732 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 21:39:50 CST 2018]; root of context hierarchy
2018-04-30 21:39:50,770 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 21:39:51,080 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 21:39:51,144 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 21:39:51,245 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 21:39:51,520 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:39:51,664 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 21:39:51,665 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:39:52,735 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:39:52,736 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:39:52,742 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:39:52,744 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:39:52,745 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:39:52,751 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:39:52,752 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:39:52,762 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:39:52,942 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 2271 ms
2018-04-30 21:39:53,093 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 21:39:53,095 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:39:53 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:39:53,096 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 21:39:53,270 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:39:53,568 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:39:53,569 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:39:53,570 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 21:39:53,570 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 21:39:53,570 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 21:39:53,571 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 21:39:53,571 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 21:39:53,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 21:39:53,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 21:39:53,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 21:39:53,576 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 21:39:53,576 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:39:53,577 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 21:39:53,577 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 21:39:53,577 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 21:39:54,160 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:39:53 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:39:54,278 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:39:53 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:39:54,580 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 21:39:54,754 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1661 ms
2018-04-30 21:39:56,603 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:39:56,631 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:39:56,830 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:39:57,187 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:39:57,188 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:39:57,205 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:40:26,238 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:40:26,238 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:40:28,143 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:41:34,794 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:41:34,816 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:41:34,847 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:45:28,035 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:39:53 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:45:28,120 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 21:39:50 CST 2018]; root of context hierarchy
2018-04-30 21:45:50,703 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 21:45:50,773 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 21:45:50 CST 2018]; root of context hierarchy
2018-04-30 21:45:50,828 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 21:45:51,137 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 21:45:51,198 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 21:45:51,305 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 21:45:51,613 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:45:51,790 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 21:45:51,791 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:45:52,030 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:45:52,030 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:45:52,036 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:45:52,038 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:45:52,040 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:45:52,046 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:45:52,047 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:45:52,058 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:45:52,155 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1449 ms
2018-04-30 21:45:52,250 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 21:45:52,252 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:45:52 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:45:52,252 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 21:45:52,366 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:45:52,589 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 21:45:52,591 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:45:52,591 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:45:52,591 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 21:45:52,592 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 21:45:52,592 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 21:45:52,592 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 21:45:52,593 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-04-30 21:45:52,597 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 21:45:52,598 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 21:45:52,598 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 21:45:52,598 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 21:45:52,598 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:45:52,599 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 21:45:52,599 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 21:45:52,599 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 21:45:52,953 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:45:52 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:45:53,088 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:45:52 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:45:53,346 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 21:45:53,505 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1255 ms
2018-04-30 21:45:54,168 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:45:52 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:45:54,171 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 21:45:50 CST 2018]; root of context hierarchy
2018-04-30 21:47:20,758 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 21:47:20,801 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 21:47:20 CST 2018]; root of context hierarchy
2018-04-30 21:47:20,833 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 21:47:20,892 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 21:47:20,930 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 21:47:21,023 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 21:47:21,203 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:47:21,369 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 21:47:21,370 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:47:21,518 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:47:21,519 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:47:21,525 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:47:21,527 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:47:21,528 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:47:21,534 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:47:21,535 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:47:21,547 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:47:21,637 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 877 ms
2018-04-30 21:47:21,780 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 21:47:21,782 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:47:21 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:47:21,782 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 21:47:21,897 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:47:22,149 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 21:47:22,151 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:47:22,151 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:47:22,151 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 21:47:22,152 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 21:47:22,152 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 21:47:22,152 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 21:47:22,153 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-04-30 21:47:22,158 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 21:47:22,158 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 21:47:22,158 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 21:47:22,159 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 21:47:22,159 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:47:22,159 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 21:47:22,160 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 21:47:22,160 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 21:47:22,548 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:47:21 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:47:22,718 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:47:21 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:47:22,978 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 21:47:23,085 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1305 ms
2018-04-30 21:47:24,318 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:47:24,336 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:47:24,480 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:47:24,728 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:47:24,728 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:47:24,730 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:47:39,547 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:47:39,698 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:47:39,794 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:48:23,263 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:47:21 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:48:23,332 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 21:47:20 CST 2018]; root of context hierarchy
2018-04-30 21:51:19,185 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 21:51:19,255 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 21:51:19 CST 2018]; root of context hierarchy
2018-04-30 21:51:19,292 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 21:51:19,562 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 21:51:19,629 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 21:51:19,731 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 21:51:19,961 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:51:20,129 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 21:51:20,130 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:51:20,343 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:51:20,343 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:51:20,349 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:51:20,351 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:51:20,352 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:51:20,359 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:51:20,359 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:51:20,370 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:51:20,463 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1276 ms
2018-04-30 21:51:20,555 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 21:51:20,557 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:51:20 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:51:20,558 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 21:51:20,661 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:51:20,888 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:51:20,889 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:51:20,889 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 21:51:20,889 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 21:51:20,890 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 21:51:20,890 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 21:51:20,890 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 21:51:20,891 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-04-30 21:51:20,895 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 21:51:20,896 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 21:51:20,896 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:51:20,897 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 21:51:20,897 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 21:51:20,897 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 21:51:20,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 21:51:20,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 21:51:21,275 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:51:20 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:51:21,404 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:51:20 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:51:21,638 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 21:51:21,844 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1288 ms
2018-04-30 21:51:22,458 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:51:22,476 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:51:22,495 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:51:22,756 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:51:22,756 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:51:22,758 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:51:31,045 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:51:31,046 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:51:31,048 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:55:01,694 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:51:20 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:55:01,823 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 21:51:19 CST 2018]; root of context hierarchy
2018-04-30 21:55:18,811 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 21:55:18,854 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 21:55:18 CST 2018]; root of context hierarchy
2018-04-30 21:55:18,889 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 21:55:19,036 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 21:55:19,096 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 21:55:19,188 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 21:55:19,367 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:55:19,511 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 21:55:19,511 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:55:19,649 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:55:19,651 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:55:19,657 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:55:19,659 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:55:19,660 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:55:19,666 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:55:19,667 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:55:19,678 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 21:55:19,770 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 956 ms
2018-04-30 21:55:19,820 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 21:55:19,822 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:55:19 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:55:19,822 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 21:55:19,953 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 21:55:20,194 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 21:55:20,195 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:55:20,196 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:55:20,196 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 21:55:20,196 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 21:55:20,197 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 21:55:20,197 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 21:55:20,198 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-04-30 21:55:20,202 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 21:55:20,203 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 21:55:20,203 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 21:55:20,203 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 21:55:20,204 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 21:55:20,204 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 21:55:20,204 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 21:55:20,205 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 21:55:20,561 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:55:19 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:55:20,695 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:55:19 CST 2018]; parent: Root WebApplicationContext
2018-04-30 21:55:20,946 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 21:55:21,050 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1229 ms
2018-04-30 21:55:22,044 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:55:22,064 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:55:22,104 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:55:22,346 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:55:22,347 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:55:22,349 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 21:55:30,692 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 21:55:30,861 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 21:55:30,863 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 22:00:02,577 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 21:55:19 CST 2018]; parent: Root WebApplicationContext
2018-04-30 22:00:02,644 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 21:55:18 CST 2018]; root of context hierarchy
2018-04-30 22:00:19,250 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-30 22:00:19,294 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Mon Apr 30 22:00:19 CST 2018]; root of context hierarchy
2018-04-30 22:00:19,331 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-30 22:00:19,499 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-30 22:00:19,582 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-30 22:00:19,699 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-30 22:00:19,872 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 22:00:20,020 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-30 22:00:20,020 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 22:00:20,169 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 22:00:20,169 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 22:00:20,176 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 22:00:20,179 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 22:00:20,180 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 22:00:20,188 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 22:00:20,188 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 22:00:20,201 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-30 22:00:20,305 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1053 ms
2018-04-30 22:00:20,368 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-30 22:00:20,371 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 22:00:20 CST 2018]; parent: Root WebApplicationContext
2018-04-30 22:00:20,371 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-30 22:00:20,516 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-30 22:00:20,785 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-30 22:00:20,786 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 22:00:20,787 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 22:00:20,787 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-30 22:00:20,787 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-30 22:00:20,788 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-30 22:00:20,788 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-30 22:00:20,789 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-04-30 22:00:20,793 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-04-30 22:00:20,793 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-04-30 22:00:20,794 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-04-30 22:00:20,794 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-04-30 22:00:20,794 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-30 22:00:20,795 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-30 22:00:20,795 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-30 22:00:20,795 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-30 22:00:21,204 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 22:00:20 CST 2018]; parent: Root WebApplicationContext
2018-04-30 22:00:21,342 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 22:00:20 CST 2018]; parent: Root WebApplicationContext
2018-04-30 22:00:22,838 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-30 22:00:23,024 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 2655 ms
2018-04-30 22:00:23,743 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 22:00:23,763 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 22:00:23,780 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 22:00:24,083 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 22:00:24,084 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 22:00:24,085 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 22:00:30,612 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-30 22:00:30,612 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-30 22:00:30,613 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-30 22:01:23,757 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Mon Apr 30 22:00:20 CST 2018]; parent: Root WebApplicationContext
2018-04-30 22:01:31,651 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Mon Apr 30 22:00:19 CST 2018]; root of context hierarchy
