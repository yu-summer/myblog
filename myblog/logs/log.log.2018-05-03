2018-05-03 13:15:26,235 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 13:15:26,307 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 13:15:26 CST 2018]; root of context hierarchy
2018-05-03 13:15:26,353 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 13:15:26,596 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 13:15:26,657 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 13:15:26,761 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 13:15:27,044 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:15:27,193 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 13:15:27,194 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:15:27,481 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:15:27,481 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:15:27,487 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:15:27,489 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:15:27,491 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:15:27,498 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:15:27,499 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:15:27,511 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:15:27,637 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1395 ms
2018-05-03 13:15:27,726 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 13:15:27,728 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:15:27 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:15:27,728 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 13:15:27,862 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:15:28,135 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 13:15:28,136 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 13:15:28,136 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 13:15:28,137 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:15:28,137 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:15:28,137 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:15:28,138 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 13:15:28,138 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 13:15:28,138 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 13:15:28,139 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:15:28,139 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 13:15:28,140 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 13:15:28,145 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 13:15:28,145 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 13:15:28,146 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 13:15:28,146 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 13:15:28,146 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:15:28,147 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 13:15:28,147 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 13:15:28,147 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 13:15:28,515 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:15:27 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:15:28,659 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:15:27 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:15:28,952 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 13:15:29,144 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1418 ms
2018-05-03 13:15:29,908 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:15:29,927 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:15:30,008 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:15:30,267 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:15:30,267 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:15:30,269 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:15:56,934 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:15:57,085 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:15:57,145 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:16:03,527 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:16:03,528 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:16:03,581 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:16:03,586 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:16:03,586 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:16:03,590 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:17:16,209 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:17:16,349 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:17:17,118 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:17:33,534 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:17:33,535 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:17:33,603 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:17:33,609 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:17:33,651 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:17:33,656 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:30:21,584 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:15:27 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:30:21,758 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 13:15:26 CST 2018]; root of context hierarchy
2018-05-03 13:46:54,523 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 13:46:54,609 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 13:46:54 CST 2018]; root of context hierarchy
2018-05-03 13:46:54,754 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 13:46:55,088 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 13:46:55,317 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 13:46:55,954 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 13:46:56,320 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:46:56,503 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 13:46:56,503 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:46:56,991 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:46:56,991 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:46:56,998 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:46:57,001 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:46:57,002 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:46:57,039 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:46:57,039 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:46:57,051 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:46:57,238 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 2694 ms
2018-05-03 13:46:57,291 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 13:46:57,293 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:46:57 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:46:57,294 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 13:46:57,571 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:46:58,028 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:46:58,031 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 13:46:58,033 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 13:46:58,033 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 13:46:58,034 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:46:58,035 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:46:58,035 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:46:58,035 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 13:46:58,035 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 13:46:58,037 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 13:46:58,038 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 13:46:58,038 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 13:46:58,043 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 13:46:58,043 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 13:46:58,049 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 13:46:58,049 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 13:46:58,050 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:46:58,050 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 13:46:58,050 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 13:46:58,051 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 13:46:59,924 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:46:57 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:47:00,254 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:46:57 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:47:10,007 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 13:47:13,889 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 16598 ms
2018-05-03 13:47:30,728 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:47:31,219 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:47:32,558 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:47:34,327 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:47:34,328 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:47:34,332 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:48:02,141 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:48:02,141 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:48:02,326 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:48:08,589 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:48:08,786 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:48:09,144 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:48:09,197 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:48:09,198 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:48:09,206 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:48:58,705 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:48:58,775 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:48:58,781 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:48:59,180 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:48:59,180 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:48:59,190 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:48:59,219 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:48:59,220 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:48:59,226 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:54:05,980 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:46:57 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:54:06,684 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 13:46:54 CST 2018]; root of context hierarchy
2018-05-03 13:55:57,654 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 13:55:57,727 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 13:55:57 CST 2018]; root of context hierarchy
2018-05-03 13:55:57,772 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 13:55:57,982 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 13:55:58,030 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 13:55:58,129 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 13:55:58,339 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:55:58,493 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 13:55:58,493 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:55:58,802 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:55:58,802 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:55:58,809 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:55:58,811 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:55:58,812 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:55:58,819 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:55:58,819 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:55:58,831 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:55:58,934 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1277 ms
2018-05-03 13:55:59,038 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 13:55:59,044 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:55:59 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:55:59,044 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 13:55:59,216 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:55:59,432 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 13:55:59,433 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 13:55:59,433 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 13:55:59,434 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 13:55:59,434 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:55:59,435 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 13:55:59,435 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 13:55:59,435 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:55:59,436 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:55:59,436 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:55:59,437 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 13:55:59,438 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 13:55:59,443 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 13:55:59,444 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 13:55:59,444 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 13:55:59,445 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 13:55:59,445 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:55:59,445 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 13:55:59,446 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 13:55:59,448 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 13:55:59,811 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:55:59 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:55:59,946 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:55:59 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:56:00,235 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 13:56:00,444 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1406 ms
2018-05-03 13:56:01,331 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:56:01,350 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:56:01,367 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:56:01,628 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:56:01,628 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:56:01,633 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:56:09,996 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:56:10,326 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:56:10,329 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:56:16,435 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:56:16,436 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:56:16,662 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:56:16,662 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:56:16,931 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:56:16,934 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:56:17,028 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:56:17,028 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:56:17,039 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:56:18,052 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:56:18,053 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:56:18,061 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:56:18,132 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:56:18,133 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:56:18,138 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:57:03,569 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:57:03,570 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:57:03,572 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:57:03,873 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:57:03,873 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:57:03,875 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:57:03,889 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:57:03,890 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:57:03,897 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:57:24,893 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:55:59 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:57:24,932 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 13:55:57 CST 2018]; root of context hierarchy
2018-05-03 13:57:49,367 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 13:57:49,441 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 13:57:49 CST 2018]; root of context hierarchy
2018-05-03 13:57:49,485 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 13:57:49,721 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 13:57:49,759 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 13:57:49,855 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 13:57:50,119 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:57:50,280 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 13:57:50,280 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:57:50,579 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:57:50,580 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:57:50,586 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:57:50,588 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:57:50,589 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:57:50,596 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:57:50,597 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:57:50,608 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:57:50,711 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1342 ms
2018-05-03 13:57:50,798 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 13:57:50,800 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:57:50 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:57:50,800 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 13:57:50,935 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:57:51,234 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 13:57:51,236 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 13:57:51,236 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 13:57:51,236 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:57:51,237 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:57:51,237 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:57:51,237 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 13:57:51,238 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 13:57:51,238 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 13:57:51,239 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:57:51,240 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 13:57:51,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 13:57:51,245 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 13:57:51,246 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 13:57:51,246 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 13:57:51,247 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 13:57:51,247 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 13:57:51,247 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:57:51,247 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 13:57:51,248 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 13:57:51,681 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:57:50 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:57:51,816 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:57:50 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:57:52,047 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 13:57:52,237 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1439 ms
2018-05-03 13:57:53,228 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:57:53,246 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:57:53,301 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:57:53,640 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:57:53,641 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:57:53,645 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:57:59,491 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:57:59,491 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:57:59,560 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:58:00,197 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:58:00,198 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:58:00,209 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:58:00,241 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:58:00,241 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:58:00,248 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:58:34,933 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:58:34,933 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:58:34,936 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:58:35,375 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:58:35,376 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:58:35,380 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:58:35,400 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:58:35,401 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:58:35,405 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:59:00,774 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:57:50 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:59:00,787 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 13:57:49 CST 2018]; root of context hierarchy
2018-05-03 13:59:13,945 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 13:59:13,989 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 13:59:13 CST 2018]; root of context hierarchy
2018-05-03 13:59:14,049 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 13:59:14,293 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 13:59:14,332 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 13:59:14,482 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 13:59:14,700 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:59:14,866 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 13:59:14,866 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:59:15,164 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:59:15,164 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:59:15,171 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:59:15,173 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:59:15,174 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:59:15,182 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:59:15,183 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:59:15,195 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 13:59:15,296 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1349 ms
2018-05-03 13:59:15,368 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 13:59:15,371 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:59:15 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:59:15,371 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 13:59:15,500 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 13:59:15,732 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 13:59:15,733 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 13:59:15,734 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 13:59:15,734 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:59:15,735 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:59:15,735 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:59:15,735 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 13:59:15,736 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 13:59:15,736 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 13:59:15,736 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:59:15,737 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 13:59:15,737 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 13:59:15,742 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 13:59:15,743 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 13:59:15,743 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 13:59:15,743 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 13:59:15,744 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 13:59:15,744 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 13:59:15,744 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 13:59:15,745 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 13:59:16,112 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:59:15 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:59:16,251 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:59:15 CST 2018]; parent: Root WebApplicationContext
2018-05-03 13:59:16,485 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 13:59:16,680 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1311 ms
2018-05-03 13:59:17,403 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:59:17,429 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:59:17,448 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:59:17,703 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:59:17,704 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:59:17,706 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:59:19,374 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:59:19,374 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:59:19,382 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:59:19,937 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:59:19,937 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:59:19,940 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:59:19,962 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:59:19,962 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:59:19,967 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 13:59:26,416 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 13:59:26,417 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 13:59:26,423 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 13:59:26,771 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 13:59:26,771 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 13:59:26,775 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 13:59:26,788 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 13:59:26,788 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 13:59:26,791 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:02:24,036 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 13:59:15 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:02:24,047 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 13:59:13 CST 2018]; root of context hierarchy
2018-05-03 14:02:44,207 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:02:44,250 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:02:44 CST 2018]; root of context hierarchy
2018-05-03 14:02:44,281 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:02:44,335 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:02:44,373 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:02:44,467 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:02:44,654 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:02:44,821 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:02:44,824 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:02:44,972 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:02:44,972 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:02:44,978 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:02:44,980 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:02:44,981 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:02:44,987 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:02:44,988 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:02:44,999 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:02:45,103 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 894 ms
2018-05-03 14:02:45,194 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:02:45,196 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:02:45 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:02:45,197 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:02:45,303 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:02:45,530 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:02:45,531 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:02:45,531 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:02:45,531 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:02:45,532 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:02:45,532 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:02:45,533 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:02:45,533 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:02:45,534 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:02:45,534 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:02:45,535 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:02:45,535 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:02:45,540 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:02:45,541 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:02:45,541 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:02:45,541 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:02:45,542 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:02:45,542 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:02:45,542 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:02:45,543 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:02:45,888 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:02:45 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:02:46,025 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:02:45 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:02:46,257 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:02:46,410 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1216 ms
2018-05-03 14:02:47,149 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:02:47,166 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:02:47,181 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:02:47,417 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:02:47,418 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:02:47,421 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:02:51,198 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:02:51,199 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:02:51,202 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:02:51,797 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:02:51,798 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:02:51,811 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:02:51,822 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:02:51,823 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:02:51,828 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:05:46,423 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:02:45 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:05:46,457 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:02:44 CST 2018]; root of context hierarchy
2018-05-03 14:05:55,725 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:05:55,767 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:05:55 CST 2018]; root of context hierarchy
2018-05-03 14:05:55,801 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:05:55,862 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:05:55,917 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:05:56,026 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:05:56,259 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:05:56,431 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:05:56,432 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:05:56,637 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:05:56,637 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:05:56,644 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:05:56,646 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:05:56,647 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:05:56,664 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:05:56,665 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:05:56,677 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:05:56,785 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1058 ms
2018-05-03 14:05:56,904 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:05:56,906 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:05:56 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:05:56,906 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:05:57,044 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:05:57,264 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:05:57,265 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:05:57,266 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:05:57,266 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:05:57,267 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:05:57,267 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:05:57,267 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:05:57,268 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:05:57,268 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:05:57,268 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:05:57,269 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:05:57,269 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:05:57,275 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:05:57,275 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:05:57,276 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:05:57,276 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:05:57,276 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:05:57,277 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:05:57,277 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:05:57,277 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:05:57,630 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:05:56 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:05:57,762 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:05:56 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:05:57,986 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:05:58,106 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1202 ms
2018-05-03 14:05:58,728 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:05:58,746 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:05:58,763 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:05:59,023 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:05:59,023 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:05:59,026 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:06:04,615 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:06:04,616 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:06:04,666 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:06:05,313 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:06:05,314 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:06:05,322 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:06:05,351 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:06:05,352 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:06:05,357 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:06:13,040 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:06:13,040 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:06:13,044 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:06:13,243 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:06:13,244 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:06:13,247 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:06:13,268 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:06:13,269 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:06:13,272 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:06:42,614 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 14:06:42,615 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 14:06:42,929 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 14:06:42,937 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 14:06:43,164 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:06:43,165 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:06:43,167 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:06:43,203 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 14:06:43,204 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 14:06:43,443 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 14:06:43,547 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 14:06:43,547 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 14:06:43,709 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 14:06:43,946 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:06:43,946 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:06:43,948 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:06:43,970 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:06:43,971 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:06:43,974 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:06:49,454 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 14:06:49,455 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 14:06:49,547 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 14:06:49,785 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 14:06:49,786 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 14:06:49,804 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 14:06:50,564 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-05-03 14:06:50,565 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-05-03 14:06:50,567 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-05-03 14:06:55,614 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 14:06:55,614 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 14:06:55,615 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 14:06:55,631 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 14:06:55,631 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 14:06:55,633 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 14:06:55,746 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-05-03 14:06:55,747 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-05-03 14:06:55,748 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-05-03 14:07:11,297 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:05:56 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:07:11,314 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:05:55 CST 2018]; root of context hierarchy
2018-05-03 14:08:33,022 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:08:33,063 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:08:33 CST 2018]; root of context hierarchy
2018-05-03 14:08:33,125 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:08:33,261 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:08:33,296 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:08:33,405 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:08:33,587 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:08:33,756 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:08:33,757 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:08:34,027 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:08:34,027 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:08:34,033 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:08:34,035 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:08:34,037 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:08:34,044 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:08:34,045 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:08:34,056 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:08:34,160 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1136 ms
2018-05-03 14:08:34,295 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:08:34,297 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:08:34 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:08:34,298 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:08:34,419 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:08:34,636 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:08:34,637 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:08:34,637 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:08:34,638 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:08:34,638 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:08:34,638 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:08:34,639 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:08:34,639 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:08:34,639 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:08:34,639 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:08:34,640 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:08:34,640 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:08:34,646 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:08:34,646 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:08:34,646 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:08:34,647 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:08:34,647 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:08:34,647 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:08:34,648 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:08:34,648 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:08:34,993 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:08:34 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:08:35,134 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:08:34 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:08:35,395 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:08:35,534 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1238 ms
2018-05-03 14:08:35,917 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:08:35,935 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:08:35,952 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:08:36,176 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:08:36,176 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:08:36,178 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:08:40,799 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:08:40,800 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:08:40,838 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:08:41,366 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:08:41,367 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:08:41,370 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:08:41,429 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:08:41,430 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:08:41,437 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:09:40,311 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 14:09:40,312 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 14:09:40,314 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 14:09:40,320 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 14:09:40,418 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:09:40,418 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:09:40,421 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:09:40,438 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 14:09:40,438 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 14:09:40,453 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 14:09:40,459 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 14:09:40,459 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 14:09:40,461 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 14:09:40,579 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:09:40,580 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:09:40,592 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:09:40,597 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:09:40,598 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:09:40,600 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:11:34,078 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:08:34 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:11:34,173 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:08:33 CST 2018]; root of context hierarchy
2018-05-03 14:21:01,301 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:21:01,392 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:21:01 CST 2018]; root of context hierarchy
2018-05-03 14:21:01,430 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:21:01,649 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:21:01,688 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:21:01,789 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:21:02,105 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:21:02,252 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:21:02,253 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:21:02,575 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:21:02,575 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:21:02,582 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:21:02,584 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:21:02,586 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:21:02,592 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:21:02,593 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:21:02,603 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:21:02,965 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1662 ms
2018-05-03 14:21:03,318 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:21:03,320 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:21:03 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:21:03,320 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:21:03,694 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:21:03,975 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:21:03,976 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:21:03,976 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:21:03,977 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:21:03,977 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:21:03,977 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:21:03,978 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:21:03,978 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:21:03,978 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:21:03,979 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:21:03,979 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:21:03,980 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:21:03,985 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:21:03,986 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:21:03,986 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:21:03,986 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:21:03,987 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:21:03,987 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:21:03,987 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:21:03,987 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:21:04,383 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:21:03 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:21:04,530 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:21:03 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:21:04,819 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:21:04,984 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1666 ms
2018-05-03 14:21:06,213 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:21:06,233 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:21:06,331 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:21:06,743 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:21:06,743 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:21:06,747 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:21:10,926 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:21:10,927 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:21:10,929 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:21:13,917 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:21:13,918 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:21:13,945 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:21:13,975 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:21:13,976 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:21:13,983 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:21:30,980 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:21:30,980 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:21:30,985 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:21:31,410 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:21:31,411 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:21:31,414 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:21:31,438 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:21:31,439 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:21:31,442 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:21:49,157 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:21:03 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:21:49,264 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:21:01 CST 2018]; root of context hierarchy
2018-05-03 14:23:07,107 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:23:07,147 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:23:07 CST 2018]; root of context hierarchy
2018-05-03 14:23:07,201 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:23:07,445 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:23:07,511 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:23:07,610 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:23:08,004 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:23:08,284 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:23:08,285 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:23:08,705 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:23:08,705 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:23:08,711 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:23:08,713 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:23:08,714 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:23:08,721 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:23:08,722 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:23:08,733 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:23:08,949 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1840 ms
2018-05-03 14:23:09,095 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:23:09,097 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:23:09 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:23:09,097 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:23:09,275 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:23:09,494 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:23:09,495 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:23:09,495 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:23:09,495 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:23:09,496 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:23:09,496 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:23:09,496 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:23:09,497 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:23:09,497 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:23:09,497 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:23:09,498 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:23:09,498 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:23:09,504 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:23:09,504 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:23:09,504 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:23:09,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:23:09,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:23:09,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:23:09,506 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:23:09,506 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:23:09,920 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:23:09 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:23:10,055 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:23:09 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:23:10,391 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:23:10,564 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1469 ms
2018-05-03 14:23:11,544 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:23:11,564 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:23:11,771 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:23:12,131 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:23:12,132 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:23:12,134 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:23:19,281 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:23:19,282 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:23:19,285 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:27:04,277 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:23:09 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:27:04,421 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:23:07 CST 2018]; root of context hierarchy
2018-05-03 14:32:49,909 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:32:49,981 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:32:49 CST 2018]; root of context hierarchy
2018-05-03 14:32:50,019 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:32:50,254 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:32:50,304 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:32:50,419 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:32:50,712 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:32:50,885 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:32:50,886 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:32:51,213 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:32:51,213 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:32:51,219 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:32:51,223 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:32:51,224 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:32:51,232 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:32:51,233 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:32:51,244 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:32:51,348 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1437 ms
2018-05-03 14:32:51,437 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:32:51,439 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:32:51 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:32:51,439 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:32:51,591 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:32:51,833 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:32:51,835 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:32:51,835 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:32:51,836 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:32:51,836 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:32:51,836 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:32:51,837 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:32:51,837 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:32:51,837 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:32:51,838 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:32:51,838 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:32:51,839 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:32:51,844 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:32:51,844 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:32:51,845 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:32:51,845 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:32:51,845 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:32:51,846 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:32:51,846 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:32:51,846 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:32:52,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:32:51 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:32:52,380 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:32:51 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:32:52,634 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:32:52,848 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1411 ms
2018-05-03 14:32:53,653 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:32:53,687 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:32:53,705 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:32:53,943 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:32:53,944 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:32:53,947 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:33:03,402 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:33:03,403 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:33:03,424 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:33:06,664 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:33:06,665 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:33:06,667 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:33:06,685 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:33:06,686 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:33:06,708 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:33:27,958 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:32:51 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:33:28,024 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:32:49 CST 2018]; root of context hierarchy
2018-05-03 14:33:48,663 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:33:48,710 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:33:48 CST 2018]; root of context hierarchy
2018-05-03 14:33:48,743 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:33:49,051 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:33:49,102 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:33:49,221 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:33:49,450 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:33:49,625 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:33:49,625 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:33:49,911 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:33:49,911 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:33:49,917 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:33:49,919 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:33:49,920 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:33:49,929 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:33:49,930 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:33:49,942 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:33:50,078 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1412 ms
2018-05-03 14:33:50,139 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:33:50,141 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:33:50 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:33:50,141 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:33:50,259 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:33:50,562 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:33:50,563 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:33:50,564 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:33:50,564 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:33:50,565 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:33:50,565 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:33:50,565 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:33:50,565 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:33:50,566 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:33:50,566 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:33:50,567 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:33:50,567 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:33:50,573 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:33:50,573 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:33:50,574 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:33:50,574 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:33:50,574 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:33:50,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:33:50,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:33:50,576 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:33:50,995 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:33:50 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:33:51,150 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:33:50 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:33:51,379 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:33:51,588 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1449 ms
2018-05-03 14:33:52,499 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:33:52,520 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:33:52,537 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:33:52,772 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:33:52,772 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:33:52,775 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:33:56,699 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:33:56,699 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:33:56,703 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:33:58,305 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:33:58,306 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:33:58,348 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:33:58,375 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:33:58,376 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:33:58,382 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:34:10,574 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:33:50 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:34:10,660 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:33:48 CST 2018]; root of context hierarchy
2018-05-03 14:35:37,313 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:35:37,357 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:35:37 CST 2018]; root of context hierarchy
2018-05-03 14:35:37,396 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:35:37,659 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:35:37,755 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:35:37,875 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:35:38,100 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:35:38,241 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:35:38,241 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:35:38,396 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:35:38,397 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:35:38,403 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:35:38,405 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:35:38,406 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:35:38,414 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:35:38,414 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:35:38,427 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:35:38,539 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1224 ms
2018-05-03 14:35:38,591 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:35:38,593 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:35:38 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:35:38,593 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:35:38,725 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:35:38,941 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:35:38,943 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:35:38,943 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:35:38,943 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:35:38,944 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:35:38,944 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:35:38,944 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:35:38,945 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:35:38,945 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:35:38,945 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:35:38,946 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:35:38,946 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:35:38,951 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:35:38,952 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:35:38,952 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:35:38,952 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:35:38,953 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:35:38,953 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:35:38,953 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:35:38,954 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:35:39,311 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:35:38 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:35:39,450 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:35:38 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:35:39,753 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:35:39,973 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1382 ms
2018-05-03 14:35:40,704 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:35:40,726 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:35:40,743 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:35:41,044 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:35:41,044 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:35:41,059 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:35:48,239 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:35:48,347 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:35:48,794 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:35:56,313 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:35:56,313 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:35:56,331 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:35:56,351 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:35:56,352 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:35:56,371 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:43:35,048 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:35:38 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:43:35,125 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:35:37 CST 2018]; root of context hierarchy
2018-05-03 14:48:20,761 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:48:20,839 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:48:20 CST 2018]; root of context hierarchy
2018-05-03 14:48:20,878 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:48:21,072 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:48:21,108 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:48:21,202 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:48:21,496 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:48:21,674 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:48:21,675 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:48:21,982 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:48:21,983 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:48:21,989 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:48:21,991 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:48:21,992 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:48:21,999 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:48:21,999 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:48:22,011 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:48:22,145 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1348 ms
2018-05-03 14:48:22,268 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:48:22,270 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:48:22 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:48:22,271 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:48:22,397 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:48:22,599 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:48:22,600 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:48:22,600 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:48:22,601 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:48:22,601 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:48:22,601 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:48:22,602 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:48:22,602 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:48:22,602 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:48:22,603 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:48:22,603 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:48:22,604 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:48:22,610 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:48:22,610 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:48:22,610 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:48:22,611 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:48:22,611 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:48:22,612 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:48:22,612 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:48:22,612 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:48:22,977 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:48:22 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:48:23,113 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:48:22 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:48:23,359 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:48:23,546 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1278 ms
2018-05-03 14:48:25,052 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:48:25,076 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:48:25,125 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:48:25,552 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:48:25,552 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:48:25,555 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:48:34,108 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:48:34,108 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:48:34,112 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:48:36,393 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:48:36,394 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:48:36,458 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:48:36,493 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:48:36,493 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:48:36,511 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:49:38,912 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:49:38,913 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:49:39,277 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:49:40,269 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:49:40,270 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:49:40,284 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:49:40,300 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:49:40,300 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:49:40,316 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:50:37,650 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:48:22 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:50:37,723 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:48:20 CST 2018]; root of context hierarchy
2018-05-03 14:50:58,474 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:50:58,545 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:50:58 CST 2018]; root of context hierarchy
2018-05-03 14:50:58,584 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:50:58,844 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:50:58,882 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:50:58,982 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:50:59,241 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:50:59,378 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:50:59,378 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:50:59,695 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:50:59,696 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:50:59,702 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:50:59,704 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:50:59,705 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:50:59,712 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:50:59,713 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:50:59,725 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:50:59,827 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1351 ms
2018-05-03 14:50:59,924 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:50:59,926 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:50:59 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:50:59,927 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:51:00,067 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:51:00,272 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:51:00,273 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:51:00,274 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:51:00,274 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:51:00,274 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:51:00,275 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:51:00,275 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:51:00,275 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:51:00,276 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:51:00,276 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:51:00,276 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:51:00,277 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:51:00,282 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:51:00,283 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:51:00,283 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:51:00,283 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:51:00,284 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:51:00,284 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:51:00,284 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:51:00,285 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:51:00,630 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:50:59 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:51:00,760 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:50:59 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:51:01,007 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:51:01,185 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1261 ms
2018-05-03 14:51:01,976 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:51:01,999 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:51:02,038 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:51:02,681 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:51:02,682 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:51:02,693 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:51:10,881 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:51:10,882 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:51:10,919 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:51:12,335 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 14:51:12,335 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 14:51:12,352 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 14:51:12,373 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 14:51:12,373 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 14:51:12,379 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 14:57:15,546 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:50:59 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:57:15,621 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:50:58 CST 2018]; root of context hierarchy
2018-05-03 14:59:54,396 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 14:59:54,472 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 14:59:54 CST 2018]; root of context hierarchy
2018-05-03 14:59:54,511 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 14:59:54,779 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 14:59:54,820 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 14:59:54,913 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 14:59:55,169 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:59:55,332 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 14:59:55,332 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:59:55,630 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:59:55,631 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:59:55,637 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:59:55,639 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:59:55,641 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:59:55,648 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:59:55,649 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:59:55,660 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 14:59:55,763 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1365 ms
2018-05-03 14:59:55,854 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 14:59:55,856 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:59:55 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:59:55,857 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 14:59:55,999 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 14:59:56,208 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 14:59:56,209 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 14:59:56,210 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 14:59:56,210 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:59:56,210 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:59:56,211 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:59:56,211 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 14:59:56,211 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 14:59:56,212 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 14:59:56,212 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:59:56,212 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 14:59:56,213 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 14:59:56,218 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 14:59:56,218 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 14:59:56,219 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 14:59:56,219 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 14:59:56,219 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 14:59:56,220 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 14:59:56,220 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 14:59:56,220 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 14:59:56,583 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:59:55 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:59:56,717 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:59:55 CST 2018]; parent: Root WebApplicationContext
2018-05-03 14:59:56,983 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 14:59:57,173 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1318 ms
2018-05-03 14:59:58,188 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:59:58,216 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:59:58,312 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 14:59:58,570 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 14:59:58,571 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 14:59:58,574 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:00:02,434 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:00:02,434 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:00:02,544 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:00:04,231 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:00:04,231 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:00:04,246 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:00:04,264 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:00:04,264 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:00:04,270 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:00:08,576 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:00:08,577 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:00:08,582 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:00:08,863 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:00:08,864 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:00:08,868 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:00:08,892 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:00:08,893 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:00:08,897 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:02:10,119 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:02:10,119 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:02:10,131 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:02:11,801 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:02:11,802 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:02:11,804 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:02:11,830 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:02:11,831 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:02:11,842 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:02:14,530 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:02:14,531 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:02:14,533 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:02:14,722 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:02:14,723 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:02:14,725 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:02:14,739 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:02:14,740 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:02:14,743 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:02:25,581 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 14:59:55 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:02:25,655 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 14:59:54 CST 2018]; root of context hierarchy
2018-05-03 15:02:48,256 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 15:02:48,338 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 15:02:48 CST 2018]; root of context hierarchy
2018-05-03 15:02:48,382 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 15:02:48,616 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 15:02:48,668 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 15:02:48,782 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 15:02:49,081 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 15:02:49,235 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 15:02:49,236 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:02:49,551 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:02:49,552 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:02:49,561 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:02:49,563 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:02:49,564 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:02:49,570 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:02:49,571 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:02:49,582 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:02:49,693 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1435 ms
2018-05-03 15:02:49,783 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 15:02:49,785 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:02:49 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:02:49,785 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 15:02:49,938 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 15:02:50,157 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 15:02:50,158 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 15:02:50,159 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:02:50,159 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:02:50,160 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:02:50,160 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 15:02:50,160 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 15:02:50,161 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 15:02:50,161 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 15:02:50,161 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:02:50,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 15:02:50,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 15:02:50,167 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 15:02:50,168 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 15:02:50,168 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 15:02:50,169 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 15:02:50,169 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:02:50,169 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 15:02:50,169 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 15:02:50,170 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 15:02:50,533 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:02:49 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:02:50,675 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:02:49 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:02:50,950 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 15:02:51,420 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1637 ms
2018-05-03 15:02:52,063 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:02:52,103 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:02:52,121 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:02:52,430 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:02:52,431 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:02:52,434 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:03:00,970 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:03:00,970 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:03:00,972 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:03:03,477 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:03:03,478 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:03:03,481 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:03:03,530 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:03:03,531 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:03:03,535 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:03:25,303 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:03:25,304 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:03:25,311 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:03:25,839 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:03:25,840 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:03:25,991 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:03:26,028 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:03:26,029 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:03:26,050 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:03:46,477 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-05-03 15:03:46,478 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: test(String)
2018-05-03 15:03:46,546 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-05-03 15:03:46,740 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:03:46,741 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:03:46,744 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:03:46,992 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:03:46,992 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:03:47,030 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:03:52,976 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE title LIKE "%"?"%"; 
2018-05-03 15:03:52,977 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: Test(String)
2018-05-03 15:03:52,978 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - <==      Total: 1
2018-05-03 15:03:53,142 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:03:53,143 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:03:53,159 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:03:53,366 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:03:53,367 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:03:53,369 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:04:13,454 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:04:13,454 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:04:13,460 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:04:13,614 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:04:13,615 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:04:13,635 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:04:13,642 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:04:13,642 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:04:13,650 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:04:23,237 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:04:23,238 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-03 15:04:23,239 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-03 15:04:23,595 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:04:23,595 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:04:23,716 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:04:23,745 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:04:23,745 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:04:23,770 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:04:25,329 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:04:25,330 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 4(Integer)
2018-05-03 15:04:25,330 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-03 15:04:25,510 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:04:25,511 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:04:25,512 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:04:25,517 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:04:25,517 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:04:25,529 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:04:26,622 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:04:26,623 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-05-03 15:04:26,625 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-03 15:04:26,810 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:04:26,811 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:04:26,812 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:04:26,823 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:04:26,824 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:04:26,826 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:04:27,617 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:04:27,618 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-05-03 15:04:27,620 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-03 15:04:27,814 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:04:27,815 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:04:27,816 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:04:27,847 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:04:27,848 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:04:27,850 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:04:28,516 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:04:28,517 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:04:28,518 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:04:28,682 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:04:28,682 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:04:28,694 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:04:28,718 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:04:28,718 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:04:28,720 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:06:07,050 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:06:07,051 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:06:07,052 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:06:08,713 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:06:08,714 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:06:08,716 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:06:08,725 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:06:08,725 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:06:08,727 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:07:04,423 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-03 15:07:04,423 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: jdk(String)
2018-05-03 15:07:04,425 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-03 15:07:04,443 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-03 15:07:04,444 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 15(Integer)
2018-05-03 15:07:04,572 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 1
2018-05-03 15:07:06,857 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-03 15:07:06,858 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: jdk(String)
2018-05-03 15:07:06,860 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-03 15:07:06,876 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-03 15:07:06,877 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 15(Integer)
2018-05-03 15:07:06,879 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 1
2018-05-03 15:07:12,484 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-03 15:07:12,484 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: markerdown(String)
2018-05-03 15:07:12,485 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-03 15:07:12,521 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-03 15:07:12,522 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 19(Integer)
2018-05-03 15:07:12,536 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 0
2018-05-03 15:07:12,543 ERROR[freemarker.runtime:59] - Error executing FreeMarker template
FreeMarker template error:
The following has evaluated to null or missing:
==> content  [in template "article.ftl" at line 14, column 37]

----
Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)??
----

----
FTL stack trace ("~" means nesting-related):
	- Failed at: ${content}  [in template "article.ftl" at line 14, column 35]
----

Java stack trace (for programmers):
----
freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...]
	at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134)
	at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:467)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:389)
	at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:358)
	at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100)
	at freemarker.core.DollarVariable.accept(DollarVariable.java:63)
	at freemarker.core.Environment.visit(Environment.java:330)
	at freemarker.core.Environment.visit(Environment.java:336)
	at freemarker.core.Environment.process(Environment.java:309)
	at freemarker.template.Template.process(Template.java:384)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.processTemplate(FreeMarkerView.java:392)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.doRender(FreeMarkerView.java:307)
	at org.springframework.web.servlet.view.freemarker.FreeMarkerView.renderMergedTemplateModel(FreeMarkerView.java:257)
	at org.springframework.web.servlet.view.AbstractTemplateView.renderMergedOutputModel(AbstractTemplateView.java:165)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:312)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:870)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:855)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:620)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2018-05-03 15:07:17,104 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:07:17,105 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-05-03 15:07:17,120 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-03 15:07:17,353 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:07:17,354 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:07:17,368 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:07:17,381 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:07:17,381 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:07:17,390 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:07:19,372 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-03 15:07:19,372 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: markerdown例子(String)
2018-05-03 15:07:19,374 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-03 15:07:19,388 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-03 15:07:19,390 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 18(Integer)
2018-05-03 15:07:19,400 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 1
2018-05-03 15:08:29,767 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:08:29,767 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:08:29,772 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:08:30,006 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:08:30,007 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:08:30,008 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:08:30,013 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:08:30,013 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:08:30,015 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:09:49,442 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 15:09:49,443 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 15:09:49,488 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 15:09:49,495 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 15:09:49,603 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:09:49,603 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:09:49,605 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:09:49,644 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:09:49,645 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:09:49,703 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:09:49,739 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:09:49,740 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:09:49,755 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:09:49,926 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:09:49,926 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:09:49,927 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:09:49,934 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:09:49,935 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:09:49,936 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:09:52,136 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:09:52,137 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:09:52,138 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:09:52,145 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:09:52,146 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:09:52,147 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:09:52,233 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:09:52,234 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:09:52,241 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:09:52,246 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:09:52,247 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:09:52,256 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:10:01,969 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:10:01,970 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:10:02,044 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:10:02,123 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:10:02,124 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:10:02,142 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:10:02,236 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-05-03 15:10:02,236 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-05-03 15:10:02,238 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-05-03 15:10:04,623 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:10:04,624 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:10:04,648 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:10:04,669 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:10:04,669 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:10:04,683 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:10:04,791 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==>  Preparing: SELECT username, email FROM user_info WHERE username = ?; 
2018-05-03 15:10:04,792 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - ==> Parameters: admin(String)
2018-05-03 15:10:04,793 DEBUG[com.summer.blog.dao.UserDao.checkUserInfo:159] - <==      Total: 1
2018-05-03 15:10:07,660 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:10:07,661 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:10:07,675 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:10:07,688 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:10:07,688 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:10:07,762 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:10:07,812 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:10:07,813 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:10:07,814 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:10:07,826 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:10:07,827 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:10:07,828 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:10:09,283 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:10:09,284 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:10:09,285 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:10:09,291 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:10:09,291 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:10:09,312 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:10:09,317 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:10:09,318 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:10:09,319 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:10:09,485 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:10:09,486 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:10:09,487 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:10:09,492 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:10:09,492 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:10:09,494 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:10:55,942 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:02:49 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:10:55,967 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 15:02:48 CST 2018]; root of context hierarchy
2018-05-03 15:11:18,457 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 15:11:18,505 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 15:11:18 CST 2018]; root of context hierarchy
2018-05-03 15:11:18,593 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 15:11:18,785 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 15:11:18,872 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 15:11:19,016 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 15:11:19,284 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 15:11:19,520 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 15:11:19,521 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:11:19,799 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:11:19,800 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:11:19,806 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:11:19,808 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:11:19,809 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:11:19,816 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:11:19,817 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:11:19,828 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:11:19,984 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1524 ms
2018-05-03 15:11:20,065 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 15:11:20,067 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:11:20 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:11:20,067 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 15:11:20,248 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 15:11:20,547 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:11:20,548 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 15:11:20,548 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 15:11:20,549 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 15:11:20,549 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:11:20,549 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:11:20,549 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:11:20,550 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 15:11:20,550 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 15:11:20,550 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 15:11:20,551 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 15:11:20,552 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 15:11:20,557 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:11:20,558 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 15:11:20,558 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 15:11:20,558 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 15:11:20,558 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 15:11:20,559 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 15:11:20,559 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 15:11:20,559 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 15:11:20,943 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:11:20 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:11:21,124 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:11:20 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:11:21,442 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 15:11:21,634 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1569 ms
2018-05-03 15:11:22,375 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:11:22,396 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:11:22,416 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:11:22,795 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:11:22,795 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:11:22,798 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:11:28,773 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:11:28,934 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:11:28,937 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:11:32,911 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:11:32,912 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:11:32,928 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:11:32,956 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:11:32,957 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:11:32,962 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:11:45,321 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 15:11:45,322 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 15:11:45,324 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 15:11:45,646 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 15:11:46,117 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:11:46,118 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:11:46,123 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:11:46,226 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:11:46,227 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:11:46,237 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:11:46,305 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:11:46,306 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:11:46,308 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:11:46,899 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:11:46,900 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:11:46,903 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:11:46,927 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:11:46,928 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:11:46,931 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:11:57,980 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:11:57,984 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:11:58,014 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:11:58,050 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:11:58,051 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:11:58,053 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:11:58,144 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:11:58,145 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:11:58,146 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:11:58,156 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:11:58,157 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:11:58,159 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:12:07,074 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/article/login.do] in DispatcherServlet with name 'myBlog'
2018-05-03 15:12:15,376 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/article/] in DispatcherServlet with name 'myBlog'
2018-05-03 15:12:21,831 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:12:21,833 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:12:21,920 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:12:22,359 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:12:22,360 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:12:22,391 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:12:22,400 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:12:22,400 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:12:22,403 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:12:32,842 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 15:12:32,843 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 15:12:32,844 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 15:12:32,845 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 15:12:32,881 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:12:32,882 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:12:32,885 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:12:32,907 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:12:32,908 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:12:32,909 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:12:32,949 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:12:32,950 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:12:32,952 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:12:33,161 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:12:33,161 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:12:33,163 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:12:33,170 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:12:33,171 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:12:33,173 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:12:35,425 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:12:35,426 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:12:35,429 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:12:35,437 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:12:35,437 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:12:35,439 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:12:35,446 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:12:35,446 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:12:35,448 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:12:35,452 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:12:35,453 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:12:35,455 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:12:48,731 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 15:12:48,731 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: spring(String)
2018-05-03 15:12:48,732 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 15:12:48,733 INFO[com.summer.blog.controller.UserController:68] - spring: login
2018-05-03 15:12:48,773 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:12:48,773 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:12:48,775 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:12:48,786 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:12:48,786 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:12:48,787 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:12:48,791 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:12:48,792 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:12:48,793 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:12:48,796 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:12:48,797 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:12:48,797 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:12:48,800 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:12:48,800 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:12:48,801 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:12:48,952 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:12:48,953 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:12:48,954 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:12:48,957 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:12:48,957 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:12:48,960 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:12:52,005 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:12:52,006 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:12:52,007 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:12:52,011 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:12:52,012 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:12:52,013 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:12:52,173 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/article/unauthorized.do] in DispatcherServlet with name 'myBlog'
2018-05-03 15:13:28,499 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:13:28,501 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:13:28,503 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:13:28,512 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:13:28,513 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:13:28,514 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:13:28,516 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:13:28,517 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:13:28,518 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:13:28,520 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:13:28,521 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:13:28,522 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:13:28,524 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:13:28,525 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:13:28,526 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:13:28,681 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:13:28,682 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:13:28,683 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:13:28,686 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:13:28,686 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:13:28,688 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:14:05,463 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:14:05,463 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-05-03 15:14:05,464 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-03 15:14:05,474 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:05,474 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:05,475 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:05,477 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:05,478 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:05,478 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:05,481 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:05,482 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:05,482 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:05,487 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:05,488 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:05,489 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:05,652 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:14:05,653 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:14:05,678 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:14:05,682 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:14:05,683 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:14:05,684 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:14:06,650 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:14:06,651 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 4(Integer)
2018-05-03 15:14:06,651 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-03 15:14:06,657 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:06,658 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:06,702 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:06,709 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:06,709 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:06,711 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:06,716 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:06,716 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:06,719 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:06,723 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:06,723 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:06,724 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:06,869 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:14:06,869 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:14:06,870 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:14:06,873 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:14:06,873 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:14:06,875 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:14:07,409 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:14:07,410 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-05-03 15:14:07,411 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-03 15:14:07,415 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:07,415 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:07,416 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:07,419 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:07,419 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:07,420 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:07,423 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:07,424 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:07,425 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:07,428 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:07,428 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:07,434 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:07,586 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:14:07,587 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:14:07,588 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:14:07,590 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:14:07,591 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:14:07,592 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:14:08,704 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:14:08,705 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:14:08,706 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:14:08,711 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:08,711 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:08,712 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:08,714 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:08,715 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:08,739 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:08,743 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:08,743 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:08,744 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:08,747 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:08,747 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:08,748 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:08,905 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:14:08,905 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:14:08,906 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:14:08,908 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:14:08,909 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:14:08,910 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:14:09,292 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:14:09,292 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-05-03 15:14:09,293 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-03 15:14:09,298 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:09,298 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:09,299 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:09,302 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:09,302 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:09,303 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:09,305 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:14:09,306 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: spring(String)
2018-05-03 15:14:09,336 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 1
2018-05-03 15:14:09,340 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:14:09,341 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: spring(String)
2018-05-03 15:14:09,342 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 3
2018-05-03 15:14:09,496 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:14:09,497 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:14:09,498 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:14:09,502 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:14:09,503 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:14:09,504 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:23:54,627 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 15:23:54,722 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 15:23:54 CST 2018]; root of context hierarchy
2018-05-03 15:23:54,769 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 15:23:55,046 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 15:23:55,120 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 15:23:55,241 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 15:23:55,494 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 15:23:55,676 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 15:23:55,676 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:23:55,987 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:23:55,987 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:23:55,993 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:23:55,995 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:23:55,996 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:23:56,002 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:23:56,003 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:23:56,015 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 15:23:56,136 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1476 ms
2018-05-03 15:23:56,227 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 15:23:56,229 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:23:56 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:23:56,230 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 15:23:56,387 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 15:23:56,630 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 15:23:56,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:23:56,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 15:23:56,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 15:23:56,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 15:23:56,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:23:56,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:23:56,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 15:23:56,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 15:23:56,635 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:23:56,636 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 15:23:56,636 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 15:23:56,643 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 15:23:56,643 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 15:23:56,644 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 15:23:56,644 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 15:23:56,644 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 15:23:56,645 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 15:23:56,645 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 15:23:56,645 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 15:23:57,031 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:23:56 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:23:57,185 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:23:56 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:23:57,498 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 15:23:57,689 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1461 ms
2018-05-03 15:23:58,536 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:23:58,585 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:23:58,610 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:23:58,982 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:23:58,986 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:23:58,992 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:24:13,182 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:24:13,251 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:24:13,255 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:24:22,429 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:24:22,430 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:24:22,433 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:24:22,437 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:24:22,437 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:24:22,494 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:24:32,039 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 15:24:32,040 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 15:24:32,137 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 15:24:32,144 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 15:24:32,197 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 15:24:32,197 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 15:24:32,200 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 15:24:32,208 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:24:32,209 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:24:32,395 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:24:32,402 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:24:32,403 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:24:32,405 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:24:32,765 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:24:32,765 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:24:32,768 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:24:32,771 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:24:32,772 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:24:32,774 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:24:34,662 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:24:34,664 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:24:34,665 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:24:34,670 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:24:34,670 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:24:34,672 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:24:34,719 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 15:24:34,719 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 15:24:34,720 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 15:24:34,728 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 15:24:34,728 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 15:24:34,729 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 15:24:34,922 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 15:24:34,923 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 15:24:34,925 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 15:24:34,930 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 15:24:34,930 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 15:24:34,932 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 15:27:22,961 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 15:23:56 CST 2018]; parent: Root WebApplicationContext
2018-05-03 15:27:23,057 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 15:23:54 CST 2018]; root of context hierarchy
2018-05-03 18:33:17,801 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 18:33:17,879 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 18:33:17 CST 2018]; root of context hierarchy
2018-05-03 18:33:17,924 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 18:33:18,225 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 18:33:18,283 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 18:33:18,485 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 18:33:18,749 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:33:18,950 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 18:33:18,950 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:33:19,394 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:33:19,394 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:33:19,400 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:33:19,402 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:33:19,404 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:33:19,410 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:33:19,411 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:33:19,422 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:33:19,577 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1769 ms
2018-05-03 18:33:19,673 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 18:33:19,675 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:33:19 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:33:19,675 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 18:33:19,854 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:33:20,160 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 18:33:20,161 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 18:33:20,161 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:33:20,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:33:20,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:33:20,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 18:33:20,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 18:33:20,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 18:33:20,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 18:33:20,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:33:20,164 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 18:33:20,165 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 18:33:20,170 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 18:33:20,171 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 18:33:20,171 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 18:33:20,171 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 18:33:20,172 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:33:20,172 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 18:33:20,172 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 18:33:20,172 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 18:33:20,583 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:33:19 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:33:20,721 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:33:19 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:33:21,495 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 18:33:21,678 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 2005 ms
2018-05-03 18:33:28,290 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:33:28,339 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:33:28,468 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:33:29,042 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:33:29,043 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:33:29,045 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:35:21,549 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:35:21,550 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:35:21,862 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:35:21,863 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:35:22,890 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:35:22,890 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:35:40,084 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:35:40,085 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:35:40,492 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:35:40,575 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:35:40,576 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:35:40,606 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:35:45,374 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:35:45,374 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:35:45,445 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:35:45,452 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:35:45,452 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:35:45,603 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:35:51,345 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 18:35:51,346 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters:  admin(String)
2018-05-03 18:35:51,489 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 0
2018-05-03 18:35:51,491 INFO[com.summer.blog.controller.UserController:72] - Account does not exist
2018-05-03 18:36:01,116 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 18:36:01,117 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 18:36:01,148 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 18:36:01,207 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 18:36:01,295 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:36:01,295 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:36:01,317 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:36:01,433 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:36:01,433 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:36:01,539 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:36:01,577 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:36:01,577 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:36:01,623 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:36:01,892 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:36:01,893 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:36:01,895 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:36:01,900 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:36:01,901 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:36:02,012 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:36:06,290 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:36:06,291 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:36:06,377 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:36:06,385 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:36:06,386 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:36:06,398 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:36:06,483 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:36:06,483 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:36:06,560 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:36:06,565 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:36:06,565 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:36:06,567 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:36:27,044 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:36:27,044 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:36:27,045 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:36:27,049 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:36:27,050 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:36:27,098 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:36:27,113 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:36:27,113 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:36:27,114 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:36:27,117 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:36:27,118 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:36:27,119 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:36:58,743 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 18:36:58,826 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 18:36:58,827 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 18:36:58,828 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 18:36:58,919 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:36:58,919 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:36:58,920 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:36:58,930 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:36:58,931 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:36:58,931 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:36:58,934 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:36:58,935 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:36:59,085 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:37:00,069 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:37:00,069 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:37:00,071 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:37:00,114 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:37:00,114 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:37:00,127 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:37:03,390 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:37:03,391 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:37:03,437 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:37:03,447 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:37:03,447 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:37:03,486 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:37:03,497 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:37:03,497 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:37:03,498 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:37:03,501 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:37:03,502 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:37:03,503 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:38:46,788 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:33:19 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:39:10,570 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 18:39:10,652 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 18:39:10 CST 2018]; root of context hierarchy
2018-05-03 18:39:10,696 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 18:39:10,964 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 18:39:10,999 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 18:39:11,095 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 18:39:11,338 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:39:11,511 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 18:39:11,512 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:39:11,833 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:39:11,833 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:39:11,839 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:39:11,841 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:39:11,842 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:39:11,848 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:39:11,848 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:39:11,859 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:39:11,969 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1397 ms
2018-05-03 18:39:12,064 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 18:39:12,067 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:39:12 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:39:12,067 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 18:39:12,214 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:39:12,421 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 18:39:12,422 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 18:39:12,422 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:39:12,423 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:39:12,423 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:39:12,423 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 18:39:12,424 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 18:39:12,424 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 18:39:12,424 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 18:39:12,425 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:39:12,425 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 18:39:12,426 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 18:39:12,431 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 18:39:12,431 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 18:39:12,432 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 18:39:12,432 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 18:39:12,432 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:39:12,433 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 18:39:12,433 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 18:39:12,433 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 18:39:12,794 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:39:12 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:39:12,935 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:39:12 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:39:13,209 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 18:39:13,370 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1305 ms
2018-05-03 18:39:14,481 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:39:14,502 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:39:14,518 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:39:14,913 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:39:14,914 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:39:14,916 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:39:31,029 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:39:31,030 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:39:31,032 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:39:36,366 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:39:36,366 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:39:36,368 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:39:36,393 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:39:36,394 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:39:36,481 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:39:53,535 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 18:39:53,536 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 18:39:53,866 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 18:39:53,999 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 18:39:54,212 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:39:54,212 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:39:54,219 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:39:54,377 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:39:54,378 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:39:54,449 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:39:54,487 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:39:54,488 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:39:54,490 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:39:55,217 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:39:55,218 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:39:55,290 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:39:55,295 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:39:55,295 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:39:55,298 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:39:57,971 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:39:57,972 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:39:57,974 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:39:57,979 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:39:57,980 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:39:58,014 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:39:58,048 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:39:58,049 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:39:58,181 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:39:58,186 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:39:58,186 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:39:58,188 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:40:13,877 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:39:12 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:40:14,003 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 18:39:10 CST 2018]; root of context hierarchy
2018-05-03 18:45:25,415 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 18:45:25,474 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 18:45:25 CST 2018]; root of context hierarchy
2018-05-03 18:45:25,518 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 18:45:25,762 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 18:45:25,802 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 18:45:25,895 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 18:45:26,153 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:45:26,322 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 18:45:26,322 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:45:26,630 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:45:26,630 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:45:26,636 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:45:26,638 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:45:26,639 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:45:26,645 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:45:26,646 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:45:26,658 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:45:26,764 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1347 ms
2018-05-03 18:45:26,861 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 18:45:26,863 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:45:26 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:45:26,863 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 18:45:27,018 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:45:27,228 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 18:45:27,229 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:45:27,230 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:45:27,230 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 18:45:27,230 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 18:45:27,231 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 18:45:27,231 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:45:27,231 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 18:45:27,232 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 18:45:27,232 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:45:27,233 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 18:45:27,233 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 18:45:27,238 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 18:45:27,239 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 18:45:27,239 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 18:45:27,239 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 18:45:27,240 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:45:27,240 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 18:45:27,240 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 18:45:27,241 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 18:45:27,610 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:45:26 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:45:27,747 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:45:26 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:45:28,009 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 18:45:28,194 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1333 ms
2018-05-03 18:45:28,628 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:45:28,646 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:45:28,661 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:45:28,852 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:45:28,852 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:45:28,855 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:45:36,312 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:45:36,313 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:45:36,315 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:45:37,513 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:45:37,514 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:45:37,515 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:45:37,519 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:45:37,519 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:45:37,523 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:46:03,228 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 18:46:03,229 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 18:46:03,230 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 18:46:03,235 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 18:46:03,278 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:46:03,278 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:46:03,320 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:46:03,328 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:46:03,328 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:46:03,330 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:46:03,335 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:46:03,335 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:46:03,337 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:46:03,832 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:46:03,832 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:46:03,913 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:46:03,920 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:46:03,920 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:46:03,934 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:46:05,768 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:46:05,769 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:46:05,770 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:46:05,774 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:46:05,774 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:46:05,776 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:46:05,799 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:46:05,800 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:46:05,801 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:46:05,805 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:46:05,806 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:46:05,807 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:46:06,148 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:46:06,149 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:46:06,152 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:46:06,157 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:46:06,157 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:46:06,160 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:47:42,637 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:45:26 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:47:42,700 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 18:45:25 CST 2018]; root of context hierarchy
2018-05-03 18:47:53,574 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 18:47:53,620 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 18:47:53 CST 2018]; root of context hierarchy
2018-05-03 18:47:53,681 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 18:47:53,974 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 18:47:54,039 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 18:47:54,153 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 18:47:54,348 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:47:54,491 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 18:47:54,492 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:47:54,795 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:47:54,795 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:47:54,801 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:47:54,803 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:47:54,804 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:47:54,810 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:47:54,811 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:47:54,822 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:47:54,946 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1369 ms
2018-05-03 18:47:54,998 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 18:47:55,001 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:47:55 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:47:55,001 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 18:47:55,169 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:47:55,415 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 18:47:55,417 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 18:47:55,417 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 18:47:55,418 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:47:55,418 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:47:55,418 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:47:55,419 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 18:47:55,419 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 18:47:55,419 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 18:47:55,420 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:47:55,420 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 18:47:55,421 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 18:47:55,426 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 18:47:55,427 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 18:47:55,427 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 18:47:55,428 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 18:47:55,428 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:47:55,428 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 18:47:55,429 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 18:47:55,429 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 18:47:55,781 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:47:55 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:47:55,912 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:47:55 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:47:56,143 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 18:47:56,303 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1304 ms
2018-05-03 18:47:56,745 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:47:56,763 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:47:56,780 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:47:56,969 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:47:56,970 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:47:56,972 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:48:00,447 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:48:00,448 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:48:00,450 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:48:00,917 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:48:00,918 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:48:00,919 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:48:00,923 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:48:00,923 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:48:00,928 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:48:49,022 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 18:48:49,023 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 18:48:49,040 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 18:48:49,045 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 18:48:49,087 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:48:49,088 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:48:49,091 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:48:49,099 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:48:49,100 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:48:49,101 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:48:49,107 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:48:49,107 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:48:49,109 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:48:49,284 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:48:49,288 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:48:49,291 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:48:49,295 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:48:49,296 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:48:49,298 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:48:51,766 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:48:51,767 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:48:51,768 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:48:51,771 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:48:51,772 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:48:51,773 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:48:51,812 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:48:51,812 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:48:51,813 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:48:51,816 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:48:51,817 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:48:51,818 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:48:51,975 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:48:51,976 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:48:52,004 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:48:52,009 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:48:52,009 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:48:52,011 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:49:28,309 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:49:28,309 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:49:28,311 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:49:28,319 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:49:28,320 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:49:28,321 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:49:28,327 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:49:28,328 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:49:28,391 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:49:28,562 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:49:28,562 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:49:28,569 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:49:28,572 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:49:28,573 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:49:28,575 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:50:34,857 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:47:55 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:50:34,874 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 18:47:53 CST 2018]; root of context hierarchy
2018-05-03 18:50:41,995 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 18:50:42,038 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 18:50:42 CST 2018]; root of context hierarchy
2018-05-03 18:50:42,075 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 18:50:42,174 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 18:50:42,215 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 18:50:42,314 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 18:50:42,484 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:50:42,632 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 18:50:42,632 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:50:42,787 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:50:42,787 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:50:42,794 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:50:42,796 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:50:42,797 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:50:42,804 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:50:42,804 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:50:42,817 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:50:42,924 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 927 ms
2018-05-03 18:50:42,997 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 18:50:42,999 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:50:42 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:50:42,999 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 18:50:43,119 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:50:43,348 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 18:50:43,350 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 18:50:43,350 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 18:50:43,351 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:50:43,351 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:50:43,351 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:50:43,352 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 18:50:43,352 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 18:50:43,352 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 18:50:43,353 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:50:43,353 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 18:50:43,354 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 18:50:43,359 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 18:50:43,359 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 18:50:43,360 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 18:50:43,360 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 18:50:43,360 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:50:43,361 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 18:50:43,361 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 18:50:43,361 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 18:50:43,743 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:50:42 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:50:43,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:50:42 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:50:44,140 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 18:50:44,347 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1350 ms
2018-05-03 18:50:44,870 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:50:44,890 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:50:44,909 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:50:45,125 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:50:45,125 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:50:45,128 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:50:46,406 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:50:46,407 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:50:46,494 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:50:46,666 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:50:46,666 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:50:46,668 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:50:46,672 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:50:46,673 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:50:46,677 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:51:21,249 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 18:51:21,250 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 18:51:21,251 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 18:51:21,256 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 18:51:21,301 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:51:21,301 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:51:21,338 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:51:21,350 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:51:21,351 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:51:21,352 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:51:21,357 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:51:21,358 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:51:21,366 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:51:21,489 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:51:21,490 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:51:21,492 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:51:21,496 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:51:21,496 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:51:21,499 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:51:24,137 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:51:24,137 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:51:24,143 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:51:24,148 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:51:24,148 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:51:24,150 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:51:24,177 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:51:24,177 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:51:24,178 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:51:24,182 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:51:24,182 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:51:24,183 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:51:48,724 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:50:42 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:51:48,740 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 18:50:42 CST 2018]; root of context hierarchy
2018-05-03 18:52:52,249 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 18:52:52,292 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 18:52:52 CST 2018]; root of context hierarchy
2018-05-03 18:52:52,325 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 18:52:52,389 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 18:52:52,427 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 18:52:52,528 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 18:52:52,712 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:52:52,899 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 18:52:52,899 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:52:53,098 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:52:53,098 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:52:53,106 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:52:53,109 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:52:53,110 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:52:53,117 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:52:53,117 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:52:53,129 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:52:53,240 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 988 ms
2018-05-03 18:52:53,327 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 18:52:53,329 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:52:53 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:52:53,329 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 18:52:53,436 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:52:53,657 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 18:52:53,659 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 18:52:53,659 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 18:52:53,659 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:52:53,660 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:52:53,660 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:52:53,660 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 18:52:53,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 18:52:53,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 18:52:53,662 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:52:53,662 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 18:52:53,663 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 18:52:53,668 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 18:52:53,668 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 18:52:53,669 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 18:52:53,669 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 18:52:53,669 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:52:53,670 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 18:52:53,670 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 18:52:53,670 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 18:52:54,035 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:52:53 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:52:54,166 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:52:53 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:52:54,385 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 18:52:54,512 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1185 ms
2018-05-03 18:52:55,301 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:52:55,319 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:52:55,342 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:52:55,545 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:52:55,545 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:52:55,547 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:52:56,052 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:52:56,052 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:52:56,062 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:52:56,367 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:52:56,367 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:52:56,371 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:52:56,377 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:52:56,378 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:52:56,382 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:53:09,052 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 18:53:09,053 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 18:53:09,054 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 18:53:09,057 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 18:53:09,098 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:53:09,098 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:53:09,101 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:53:09,109 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:53:09,110 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:53:09,111 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:53:09,116 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:53:09,116 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:53:09,117 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:53:09,269 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:53:09,276 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:53:09,279 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:53:09,282 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:53:09,283 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:53:09,285 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:53:11,450 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:53:11,451 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:53:11,453 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:53:11,461 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:53:11,462 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:53:11,463 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:53:11,488 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:53:11,489 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:53:11,491 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:53:11,506 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:53:11,506 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:53:11,507 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:53:43,045 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:52:53 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:53:43,058 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 18:52:52 CST 2018]; root of context hierarchy
2018-05-03 18:54:41,338 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 18:54:41,387 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 18:54:41 CST 2018]; root of context hierarchy
2018-05-03 18:54:41,425 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 18:54:41,602 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 18:54:41,642 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 18:54:41,746 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 18:54:41,937 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:54:42,133 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 18:54:42,134 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:54:42,309 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:54:42,309 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:54:42,315 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:54:42,318 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:54:42,319 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:54:42,325 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:54:42,326 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:54:42,338 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 18:54:42,449 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1107 ms
2018-05-03 18:54:42,505 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 18:54:42,507 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:54:42 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:54:42,507 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 18:54:42,624 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 18:54:42,885 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 18:54:42,887 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 18:54:42,887 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:54:42,887 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:54:42,888 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:54:42,888 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 18:54:42,888 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 18:54:42,889 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 18:54:42,889 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 18:54:42,889 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:54:42,890 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 18:54:42,891 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 18:54:42,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 18:54:42,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 18:54:42,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 18:54:42,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 18:54:42,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 18:54:42,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 18:54:42,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 18:54:42,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 18:54:43,251 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:54:42 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:54:43,384 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:54:42 CST 2018]; parent: Root WebApplicationContext
2018-05-03 18:54:43,617 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 18:54:43,819 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1313 ms
2018-05-03 18:54:44,613 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:54:44,632 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:54:44,652 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:54:44,857 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:54:44,858 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:54:44,859 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:54:46,245 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:54:46,246 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:54:46,249 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:54:46,851 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:54:46,852 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:54:46,853 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:54:46,858 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:54:46,858 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:54:46,863 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:54:58,857 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 18:54:58,858 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 18:54:58,859 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 18:54:58,862 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 18:54:58,917 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 18:54:58,918 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 18:54:58,921 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 18:54:58,928 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:54:58,929 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:54:58,930 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:54:58,935 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:54:58,935 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:54:58,937 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:54:59,053 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 18:54:59,053 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 18:54:59,056 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 18:54:59,061 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 18:54:59,061 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 18:54:59,065 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 18:55:02,380 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:55:02,381 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:55:02,382 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:55:02,386 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:55:02,387 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:55:02,410 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 18:55:02,446 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 18:55:02,447 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 18:55:02,448 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 18:55:02,454 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 18:55:02,455 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 18:55:02,456 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 19:12:46,646 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 18:54:42 CST 2018]; parent: Root WebApplicationContext
2018-05-03 19:12:46,694 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 18:54:41 CST 2018]; root of context hierarchy
2018-05-03 19:13:48,116 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 19:13:48,186 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 19:13:48 CST 2018]; root of context hierarchy
2018-05-03 19:13:48,225 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 19:13:48,461 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 19:13:48,498 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 19:13:48,632 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 19:13:48,867 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 19:13:49,022 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 19:13:49,022 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 19:13:49,330 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 19:13:49,330 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 19:13:49,336 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 19:13:49,338 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 19:13:49,339 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 19:13:49,346 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 19:13:49,347 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 19:13:49,358 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 19:13:49,495 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1377 ms
2018-05-03 19:13:49,546 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 19:13:49,548 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 19:13:49 CST 2018]; parent: Root WebApplicationContext
2018-05-03 19:13:49,548 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 19:13:49,665 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 19:13:49,896 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 19:13:49,897 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 19:13:49,897 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 19:13:49,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 19:13:49,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 19:13:49,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 19:13:49,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 19:13:49,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 19:13:49,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 19:13:49,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 19:13:49,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 19:13:49,901 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 19:13:49,906 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 19:13:49,906 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 19:13:49,906 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 19:13:49,907 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 19:13:49,907 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 19:13:49,907 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 19:13:49,908 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 19:13:49,908 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 19:13:50,265 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 19:13:49 CST 2018]; parent: Root WebApplicationContext
2018-05-03 19:13:50,395 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 19:13:49 CST 2018]; parent: Root WebApplicationContext
2018-05-03 19:13:50,618 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 19:13:50,781 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1235 ms
2018-05-03 19:13:51,204 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 19:13:51,230 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 19:13:51,273 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 19:13:51,523 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 19:13:51,523 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 19:13:51,526 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 19:13:53,850 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 19:13:53,851 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 19:13:53,853 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 19:13:55,466 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 19:13:55,466 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 19:13:55,974 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 19:13:55,980 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 19:13:55,981 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 19:13:55,986 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 19:14:07,137 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 19:14:07,137 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 19:14:07,254 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 19:14:07,260 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 19:14:07,340 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 19:14:07,341 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 19:14:07,344 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 19:14:07,353 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 19:14:07,354 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 19:14:07,603 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 19:14:07,609 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 19:14:07,609 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 19:14:07,611 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 19:14:07,974 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 19:14:07,975 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 19:14:07,977 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 19:14:07,981 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 19:14:07,982 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 19:14:07,985 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 19:14:10,517 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 19:14:10,518 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 19:14:10,525 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 19:14:10,530 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 19:14:10,530 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 19:14:10,532 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 19:14:10,554 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 19:14:10,555 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 19:14:10,556 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 19:14:10,560 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 19:14:10,561 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 19:14:10,562 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 19:14:19,989 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 19:14:19,990 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 19:14:19,992 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 19:14:19,997 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 19:14:19,997 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 19:14:19,998 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 19:14:20,008 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 19:14:20,009 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 19:14:20,009 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 19:14:20,013 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 19:14:20,013 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 19:14:20,015 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 19:14:47,571 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 19:14:47,573 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 19:14:47,575 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 19:14:47,579 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 19:14:47,579 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 19:14:47,580 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 19:14:47,591 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 19:14:47,592 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 19:14:47,593 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 19:14:47,596 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 19:14:47,596 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 19:14:47,597 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 19:46:33,869 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 19:13:49 CST 2018]; parent: Root WebApplicationContext
2018-05-03 19:46:33,962 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 19:13:48 CST 2018]; root of context hierarchy
2018-05-03 20:26:45,294 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 20:26:45,365 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 20:26:45 CST 2018]; root of context hierarchy
2018-05-03 20:26:45,424 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 20:26:45,675 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 20:26:45,751 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 20:26:45,895 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 20:26:46,190 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:26:46,357 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 20:26:46,358 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:26:46,781 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:26:46,782 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:26:46,792 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:26:46,793 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:26:46,794 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:26:46,801 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:26:46,802 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:26:46,814 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:26:46,980 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1666 ms
2018-05-03 20:26:47,113 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 20:26:47,116 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:26:47 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:26:47,116 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 20:26:47,284 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:26:47,522 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 20:26:47,524 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 20:26:47,524 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:26:47,524 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:26:47,525 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:26:47,525 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 20:26:47,525 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 20:26:47,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 20:26:47,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 20:26:47,526 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:26:47,527 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 20:26:47,527 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 20:26:47,532 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 20:26:47,533 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 20:26:47,533 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 20:26:47,533 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 20:26:47,533 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:26:47,534 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 20:26:47,534 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 20:26:47,534 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 20:26:48,094 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:26:47 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:26:48,240 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:26:47 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:26:48,604 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 20:26:48,788 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1674 ms
2018-05-03 20:26:52,241 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:26:52,259 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:26:53,038 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:26:53,414 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:26:53,415 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:26:53,431 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:27:29,456 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:27:29,529 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:27:30,729 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:27:36,473 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:27:36,473 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:27:36,475 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:27:36,480 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:27:36,480 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:27:36,484 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:28:46,629 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 20:28:46,694 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 20:28:46,851 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 20:28:47,299 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 20:28:48,389 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:28:48,390 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:28:48,434 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:28:48,510 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:28:48,510 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:28:48,581 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:28:48,649 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:28:48,649 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:28:48,650 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:28:49,200 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:28:49,201 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:28:49,214 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:28:49,314 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:28:49,314 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:28:49,317 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:28:54,290 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:28:54,291 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:28:54,316 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:28:54,335 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:28:54,336 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:28:54,406 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:28:54,499 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:28:54,500 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:28:54,501 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:28:54,515 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:28:54,516 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:28:54,528 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:31:26,916 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 20:31:27,001 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 20:31:27 CST 2018]; root of context hierarchy
2018-05-03 20:31:27,107 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 20:31:27,458 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 20:31:27,522 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 20:31:27,625 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 20:31:27,915 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:31:28,117 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 20:31:28,117 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:31:28,456 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:31:28,457 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:31:28,463 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:31:28,465 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:31:28,466 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:31:28,473 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:31:28,474 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:31:28,486 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:31:28,651 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1711 ms
2018-05-03 20:31:28,733 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 20:31:28,735 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:31:28 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:31:28,735 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 20:31:28,873 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:31:29,160 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 20:31:29,161 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 20:31:29,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:31:29,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:31:29,164 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:31:29,164 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 20:31:29,165 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 20:31:29,166 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 20:31:29,166 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 20:31:29,167 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:31:29,167 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 20:31:29,168 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 20:31:29,182 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 20:31:29,182 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 20:31:29,183 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 20:31:29,183 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 20:31:29,183 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:31:29,183 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 20:31:29,184 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 20:31:29,185 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 20:31:29,676 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:31:28 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:31:29,834 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:31:28 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:31:30,211 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 20:31:30,410 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1676 ms
2018-05-03 20:31:32,455 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:31:32,498 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:31:32,644 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:31:33,130 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:31:33,130 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:31:33,132 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:32:06,208 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:32:06,226 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:32:07,387 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:32:21,550 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:32:21,550 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:32:21,904 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:32:21,975 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:32:22,000 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:32:22,099 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:32:59,783 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 20:32:59,783 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 20:32:59,808 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 20:32:59,858 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 20:33:00,159 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:33:00,159 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:33:00,162 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:33:00,184 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:33:00,185 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:33:00,258 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:33:00,293 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:33:00,294 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:33:00,321 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:33:00,727 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:33:00,728 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:33:00,741 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:33:00,746 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:33:00,746 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:33:00,749 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:33:02,915 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:33:02,915 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:33:02,930 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:33:02,941 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:33:02,941 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:33:02,953 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:33:03,042 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:33:03,043 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:33:03,044 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:33:03,061 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:33:03,061 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:33:03,062 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:34:01,684 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:31:28 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:34:01,779 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 20:31:27 CST 2018]; root of context hierarchy
2018-05-03 20:34:24,007 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 20:34:24,080 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 20:34:24 CST 2018]; root of context hierarchy
2018-05-03 20:34:24,119 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 20:34:24,386 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 20:34:24,477 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 20:34:24,637 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 20:34:24,902 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:34:25,057 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 20:34:25,058 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:34:25,362 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:34:25,364 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:34:25,369 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:34:25,371 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:34:25,373 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:34:25,379 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:34:25,379 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:34:25,390 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:34:25,495 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1485 ms
2018-05-03 20:34:25,587 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 20:34:25,589 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:34:25 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:34:25,590 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 20:34:25,754 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:34:25,972 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 20:34:25,973 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 20:34:25,974 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 20:34:25,974 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:34:25,975 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 20:34:25,975 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 20:34:25,975 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:34:25,975 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:34:25,976 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 20:34:25,976 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:34:25,977 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 20:34:25,977 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 20:34:25,982 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 20:34:25,983 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 20:34:25,983 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 20:34:25,983 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 20:34:25,983 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:34:25,984 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 20:34:25,984 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 20:34:25,984 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 20:34:26,415 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:34:25 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:34:26,571 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:34:25 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:34:26,855 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 20:34:27,268 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1680 ms
2018-05-03 20:34:28,155 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:34:28,191 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:34:28,255 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:34:28,553 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:34:28,553 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:34:28,556 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:34:44,649 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:34:44,650 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:34:44,651 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:34:54,013 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:34:54,014 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:34:54,046 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:34:54,078 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:34:54,079 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:34:54,099 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:36:30,574 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 20:36:30,590 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 20:36:30,676 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 20:36:30,722 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 20:36:31,023 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:36:31,024 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:36:31,044 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:36:31,072 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:36:31,072 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:36:31,160 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:36:31,233 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:36:31,233 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:36:31,331 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:36:31,983 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:36:31,984 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:36:32,055 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:36:32,065 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:36:32,067 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:36:32,070 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:36:34,667 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:36:34,667 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:36:34,678 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:36:34,699 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:36:34,700 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:36:34,701 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:36:34,792 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:36:34,793 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:36:34,794 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:36:34,809 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:36:34,810 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:36:34,811 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:37:41,761 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:34:25 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:37:41,859 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 20:34:24 CST 2018]; root of context hierarchy
2018-05-03 20:38:03,773 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 20:38:03,842 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 20:38:03 CST 2018]; root of context hierarchy
2018-05-03 20:38:03,881 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 20:38:04,156 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 20:38:04,218 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 20:38:04,339 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 20:38:04,646 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:38:04,816 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 20:38:04,817 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:38:05,125 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:38:05,126 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:38:05,132 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:38:05,134 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:38:05,139 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:38:05,147 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:38:05,147 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:38:05,159 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:38:05,264 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1489 ms
2018-05-03 20:38:05,351 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 20:38:05,353 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:38:05 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:38:05,353 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 20:38:05,489 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:38:06,078 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 20:38:06,079 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:38:06,080 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:38:06,080 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:38:06,082 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 20:38:06,082 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 20:38:06,084 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 20:38:06,084 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 20:38:06,085 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 20:38:06,085 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:38:06,086 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 20:38:06,087 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 20:38:06,102 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 20:38:06,103 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 20:38:06,103 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 20:38:06,104 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 20:38:06,105 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:38:06,105 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 20:38:06,106 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 20:38:06,107 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 20:38:06,705 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:38:05 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:38:06,852 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:38:05 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:38:07,065 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 20:38:07,318 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1967 ms
2018-05-03 20:38:08,131 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:38:08,150 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:38:08,167 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:38:08,462 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:38:08,462 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:38:08,465 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:38:24,796 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:38:24,797 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:38:24,799 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:38:34,492 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:38:34,492 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:38:34,494 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:38:34,511 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:38:34,511 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:38:34,541 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:39:28,838 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 20:39:28,838 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 20:39:29,023 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 20:39:29,075 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 20:39:29,679 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:39:29,680 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:39:29,936 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:39:30,016 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:39:30,017 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:39:30,182 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:39:30,398 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:39:30,398 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:39:30,440 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:39:31,291 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:39:31,292 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:39:31,305 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:39:31,309 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:39:31,316 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:39:31,355 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:39:33,731 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:39:33,732 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:39:33,733 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:39:33,746 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:39:33,747 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:39:33,757 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:39:33,863 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:39:33,863 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:39:33,866 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:39:33,877 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:39:33,879 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:39:33,880 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:40:52,301 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:38:05 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:40:52,378 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 20:38:03 CST 2018]; root of context hierarchy
2018-05-03 20:41:41,503 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 20:41:41,597 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 20:41:41 CST 2018]; root of context hierarchy
2018-05-03 20:41:41,655 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 20:41:41,971 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 20:41:42,071 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 20:41:42,194 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 20:41:42,461 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:41:42,622 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 20:41:42,623 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:41:42,932 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:41:42,933 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:41:42,939 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:41:42,941 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:41:42,942 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:41:42,949 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:41:42,950 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:41:42,962 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:41:43,066 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1559 ms
2018-05-03 20:41:43,158 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 20:41:43,160 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:41:43 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:41:43,161 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 20:41:43,293 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:41:43,610 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:41:43,611 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 20:41:43,612 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 20:41:43,612 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 20:41:43,612 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:41:43,613 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 20:41:43,613 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 20:41:43,613 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:41:43,614 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:41:43,614 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 20:41:43,615 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 20:41:43,615 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 20:41:43,620 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 20:41:43,620 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 20:41:43,620 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 20:41:43,621 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 20:41:43,621 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:41:43,621 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 20:41:43,622 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 20:41:43,622 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 20:41:44,099 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:41:43 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:41:44,250 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:41:43 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:41:44,453 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 20:41:44,741 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1583 ms
2018-05-03 20:41:45,448 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:41:45,482 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:41:45,511 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:41:45,841 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:41:45,842 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:41:45,844 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:41:56,817 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:41:56,869 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:41:56,871 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:42:01,467 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:42:01,468 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:42:01,482 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:42:01,488 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:42:01,488 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:42:01,493 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:42:45,760 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 20:42:45,760 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 20:42:45,786 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 20:42:45,831 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 20:42:46,038 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:42:46,039 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:42:46,042 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:42:46,148 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:42:46,148 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:42:46,179 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:42:46,232 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:42:46,232 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:42:46,233 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:42:46,856 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:42:46,856 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:42:46,880 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:42:46,893 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:42:46,894 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:42:46,906 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:42:52,241 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:42:52,241 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:42:52,247 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:42:52,272 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:42:52,273 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:42:52,274 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:42:52,359 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:42:52,359 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:42:52,360 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:42:52,364 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:42:52,365 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:42:52,366 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:51:43,122 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:41:43 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:51:43,291 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 20:41:41 CST 2018]; root of context hierarchy
2018-05-03 20:52:02,978 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 20:52:03,066 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 20:52:03 CST 2018]; root of context hierarchy
2018-05-03 20:52:03,117 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 20:52:03,376 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 20:52:03,466 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 20:52:03,609 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 20:52:03,891 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:52:04,062 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 20:52:04,062 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:52:04,398 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:52:04,399 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:52:04,405 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:52:04,407 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:52:04,409 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:52:04,416 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:52:04,417 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:52:04,429 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:52:04,535 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1554 ms
2018-05-03 20:52:04,634 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 20:52:04,636 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:52:04 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:52:04,636 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 20:52:04,808 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:52:05,065 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 20:52:05,066 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 20:52:05,067 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 20:52:05,067 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 20:52:05,068 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 20:52:05,069 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:52:05,070 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:52:05,071 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:52:05,071 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:52:05,071 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 20:52:05,072 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 20:52:05,073 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 20:52:05,087 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 20:52:05,087 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 20:52:05,088 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 20:52:05,088 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 20:52:05,088 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:52:05,088 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 20:52:05,089 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 20:52:05,090 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 20:52:05,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:52:04 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:52:05,660 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:52:04 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:52:06,163 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 20:52:06,527 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1893 ms
2018-05-03 20:52:07,763 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:52:07,790 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:52:07,911 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:52:08,165 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:52:08,165 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:52:08,170 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:52:29,712 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:52:29,713 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:52:29,716 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:52:37,295 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:52:37,324 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:52:37,331 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:52:37,354 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:52:37,354 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:52:37,383 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:53:06,772 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 20:53:06,772 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 20:53:06,859 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 20:53:06,902 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 20:53:07,452 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:53:07,453 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:53:07,455 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:53:07,571 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:53:07,572 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:53:07,643 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:53:07,676 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:53:07,677 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:53:07,742 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:53:08,982 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:53:08,983 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:53:08,986 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:53:08,990 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:53:08,991 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:53:08,994 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:53:13,164 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:53:13,190 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:53:13,191 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:53:13,249 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:53:13,250 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:53:13,251 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:53:13,350 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:53:13,351 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:53:13,352 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:53:13,373 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:53:13,374 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:53:13,375 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:53:31,420 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:52:04 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:53:31,493 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 20:52:03 CST 2018]; root of context hierarchy
2018-05-03 20:54:36,389 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 20:54:36,466 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 20:54:36 CST 2018]; root of context hierarchy
2018-05-03 20:54:36,512 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 20:54:36,698 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 20:54:36,738 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 20:54:36,862 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 20:54:37,133 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:54:37,309 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 20:54:37,309 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:54:37,628 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:54:37,628 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:54:37,634 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:54:37,636 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:54:37,638 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:54:37,644 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:54:37,645 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:54:37,656 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 20:54:37,759 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1366 ms
2018-05-03 20:54:37,864 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 20:54:37,866 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:54:37 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:54:37,867 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 20:54:37,981 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 20:54:38,305 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 20:54:38,306 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:54:38,307 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 20:54:38,307 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:54:38,309 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:54:38,309 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:54:38,310 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 20:54:38,310 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 20:54:38,311 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 20:54:38,311 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 20:54:38,312 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 20:54:38,312 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 20:54:38,325 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 20:54:38,325 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 20:54:38,326 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 20:54:38,326 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 20:54:38,326 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 20:54:38,327 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 20:54:38,328 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 20:54:38,328 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 20:54:38,742 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:54:37 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:54:38,897 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:54:37 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:54:39,121 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 20:54:39,361 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1497 ms
2018-05-03 20:54:40,023 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:54:40,063 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:54:40,080 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:54:40,428 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:54:40,429 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:54:40,431 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:54:53,656 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:54:53,656 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:54:53,658 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:54:59,604 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:54:59,605 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:54:59,632 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:54:59,650 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:54:59,650 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:54:59,695 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:55:09,367 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 20:55:09,367 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 20:55:09,448 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 20:55:09,452 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 20:55:09,700 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 20:55:09,701 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 20:55:09,704 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 20:55:09,711 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:55:09,712 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:55:09,782 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:55:09,794 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:55:09,795 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:55:09,797 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:55:10,302 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 20:55:10,303 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 20:55:10,349 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 20:55:10,352 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 20:55:10,353 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 20:55:10,356 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 20:55:12,327 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:55:12,328 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:55:12,329 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:55:12,332 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:55:12,333 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:55:12,334 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:55:12,445 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 20:55:12,445 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 20:55:12,453 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 20:55:12,520 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 20:55:12,521 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 20:55:12,522 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 20:59:48,595 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 20:54:37 CST 2018]; parent: Root WebApplicationContext
2018-05-03 20:59:48,706 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 20:54:36 CST 2018]; root of context hierarchy
2018-05-03 21:00:27,953 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:00:28,025 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:00:28 CST 2018]; root of context hierarchy
2018-05-03 21:00:28,071 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:00:28,273 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:00:28,316 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:00:28,427 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:00:28,710 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:00:28,938 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:00:28,938 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:00:29,274 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:00:29,275 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:00:29,281 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:00:29,283 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:00:29,284 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:00:29,291 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:00:29,292 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:00:29,304 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:00:29,489 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1534 ms
2018-05-03 21:00:29,558 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:00:29,561 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:00:29 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:00:29,561 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:00:29,715 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:00:29,960 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:00:29,961 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:00:29,961 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:00:29,962 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:00:29,962 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:00:29,962 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:00:29,963 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:00:29,963 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:00:29,963 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:00:29,963 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 21:00:29,964 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:00:29,965 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:00:29,970 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:00:29,970 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:00:29,971 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:00:29,971 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:00:29,971 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:00:29,972 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:00:29,972 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:00:29,972 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:00:30,372 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:00:29 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:00:30,522 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:00:29 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:00:30,772 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:00:31,047 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1487 ms
2018-05-03 21:00:32,091 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:00:32,140 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:00:32,221 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:00:32,513 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:00:32,513 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:00:32,518 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:00:45,882 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:00:45,883 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:00:45,891 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:00:50,623 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:00:50,624 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:00:50,626 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:00:50,710 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:00:50,711 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:00:50,795 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:01:16,592 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:01:16,593 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:01:16,673 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:01:16,716 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:01:16,960 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:01:16,960 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:01:16,963 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:01:16,973 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:01:16,973 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:01:17,090 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:01:17,125 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:01:17,126 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:01:17,127 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:01:17,546 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:01:17,547 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:01:17,556 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:01:17,559 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:01:17,560 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:01:17,562 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:01:19,275 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:01:19,276 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:01:19,282 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:01:19,331 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:01:19,331 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:01:19,333 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:01:19,385 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:01:19,385 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:01:19,422 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:01:19,448 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:01:19,449 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:01:19,450 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:01:58,209 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:00:29 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:01:58,369 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:00:28 CST 2018]; root of context hierarchy
2018-05-03 21:06:04,707 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:06:04,748 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:06:04 CST 2018]; root of context hierarchy
2018-05-03 21:06:04,788 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:06:05,090 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:06:05,178 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:06:05,320 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:06:05,597 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:06:05,743 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:06:05,743 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:06:06,051 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:06:06,052 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:06:06,058 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:06:06,062 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:06:06,064 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:06:06,071 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:06:06,071 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:06:06,083 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:06:06,189 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1480 ms
2018-05-03 21:06:06,278 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:06:06,280 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:06:06 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:06:06,281 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:06:06,391 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:06:06,629 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:06:06,630 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:06:06,631 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:06:06,631 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:06:06,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:06:06,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:06:06,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:06:06,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:06:06,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:06:06,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 21:06:06,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:06:06,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:06:06,640 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:06:06,640 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:06:06,641 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:06:06,641 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:06:06,642 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:06:06,642 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:06:06,642 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:06:06,643 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:06:07,065 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:06:06 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:06:07,217 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:06:06 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:06:07,453 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:06:07,649 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1371 ms
2018-05-03 21:06:08,051 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:06:08,088 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:06:08,114 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:06:08,349 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:06:08,350 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:06:08,352 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:06:13,432 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:06:13,433 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:06:13,435 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:06:13,916 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:06:13,916 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:06:13,918 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:06:13,922 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:06:13,923 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:06:13,927 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:07:10,167 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:07:10,168 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:07:10,169 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:07:10,172 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:07:10,209 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:07:10,210 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:07:10,213 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:07:10,220 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:07:10,221 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:07:10,278 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:07:10,283 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:07:10,283 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:07:10,287 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:07:10,424 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:07:10,424 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:07:10,437 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:07:10,441 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:07:10,441 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:07:10,444 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:07:15,414 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:07:15,415 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:07:15,420 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:07:15,428 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:07:15,430 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:07:15,431 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:07:15,468 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:07:15,469 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:07:15,470 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:07:15,475 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:07:15,475 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:07:15,477 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:23:53,874 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:06:06 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:23:54,012 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:06:04 CST 2018]; root of context hierarchy
2018-05-03 21:24:33,628 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:24:33,696 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:24:33 CST 2018]; root of context hierarchy
2018-05-03 21:24:33,733 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:24:33,976 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:24:34,041 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:24:34,156 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:24:34,442 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:24:34,605 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:24:34,605 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:24:34,920 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:24:34,920 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:24:34,926 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:24:34,928 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:24:34,929 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:24:34,935 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:24:34,936 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:24:34,947 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:24:35,054 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1423 ms
2018-05-03 21:24:35,142 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:24:35,145 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:24:35 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:24:35,145 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:24:35,270 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:24:35,567 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:24:35,568 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:24:35,569 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:24:35,569 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:24:35,571 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:24:35,571 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:24:35,572 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:24:35,572 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,int[],java.lang.String)
2018-05-03 21:24:35,573 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:24:35,573 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:24:35,574 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:24:35,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:24:35,589 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:24:35,589 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:24:35,590 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:24:35,590 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:24:35,590 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:24:35,591 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:24:35,591 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:24:35,592 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:24:36,021 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:24:35 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:24:36,171 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:24:35 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:24:36,408 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:24:36,623 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1480 ms
2018-05-03 21:24:38,193 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:24:38,212 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:24:38,237 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:24:38,491 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:24:38,492 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:24:38,494 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:24:52,531 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:24:52,532 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:24:52,534 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:25:02,394 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:25:02,394 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:25:02,396 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:25:02,399 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:25:02,400 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:25:02,448 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:25:28,398 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:25:28,433 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:25:28,533 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:25:28,586 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:25:28,747 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:25:28,748 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:25:28,790 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:25:28,864 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:25:28,865 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:25:28,961 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:25:28,997 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:25:28,998 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:25:29,023 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:25:29,572 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:25:29,575 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:25:29,580 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:25:29,584 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:25:29,585 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:25:29,588 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:25:32,551 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:25:32,551 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:25:32,552 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:25:32,555 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:25:32,556 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:25:32,557 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:25:32,596 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:25:32,597 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:25:32,598 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:25:32,605 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:25:32,606 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:25:32,607 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:25:40,770 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-03 21:25:51,303 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-03 21:26:20,346 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-03 21:26:38,203 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:24:35 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:26:38,272 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:24:33 CST 2018]; root of context hierarchy
2018-05-03 21:27:25,210 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:27:25,275 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:27:25 CST 2018]; root of context hierarchy
2018-05-03 21:27:25,338 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:27:25,680 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:27:25,715 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:27:25,823 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:27:26,138 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:27:26,309 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:27:26,310 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:27:26,782 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:27:26,783 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:27:26,790 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:27:26,792 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:27:26,793 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:27:26,802 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:27:26,803 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:27:26,815 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:27:26,931 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1716 ms
2018-05-03 21:27:27,011 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:27:27,013 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:27:27 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:27:27,013 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:27:27,126 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:27:27,499 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:27:27,500 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:27:27,501 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:27:27,501 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:27:27,502 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:27:27,502 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:27:27,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:27:27,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String[],java.lang.String)
2018-05-03 21:27:27,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:27:27,504 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:27:27,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:27:27,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:27:27,511 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:27:27,512 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:27:27,512 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:27:27,512 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:27:27,513 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:27:27,513 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:27:27,514 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:27:27,514 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:27:28,094 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:27:27 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:27:28,232 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:27:27 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:27:28,448 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:27:28,852 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1841 ms
2018-05-03 21:27:29,983 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:27:30,016 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:27:30,031 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:27:30,520 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:27:30,520 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:27:30,523 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:27:41,624 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:27:41,625 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:27:41,628 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:27:44,408 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:27:44,409 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:27:44,411 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:27:44,415 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:27:44,415 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:27:44,420 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:28:22,813 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:28:22,841 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:28:22,855 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:28:22,899 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:28:23,032 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:28:23,037 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:28:23,040 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:28:23,119 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:28:23,120 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:28:23,164 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:28:23,191 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:28:23,191 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:28:23,193 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:28:23,566 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:28:23,569 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:28:23,572 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:28:23,575 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:28:23,576 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:28:23,578 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:28:25,380 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:28:25,381 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:28:25,381 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:28:25,385 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:28:25,386 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:28:25,387 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:28:25,416 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:28:25,417 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:28:25,418 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:28:25,422 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:28:25,423 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:28:25,424 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:28:27,957 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-03 21:28:41,232 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-03 21:29:20,982 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:27:27 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:29:21,046 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:27:25 CST 2018]; root of context hierarchy
2018-05-03 21:30:16,087 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:30:16,157 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:30:16 CST 2018]; root of context hierarchy
2018-05-03 21:30:16,200 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:30:16,476 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:30:16,512 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:30:16,607 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:30:16,875 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:30:17,059 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:30:17,059 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:30:17,369 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:30:17,370 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:30:17,387 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:30:17,389 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:30:17,390 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:30:17,396 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:30:17,397 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:30:17,408 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:30:17,508 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1418 ms
2018-05-03 21:30:17,597 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:30:17,599 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:30:17 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:30:17,599 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:30:17,711 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:30:17,988 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:30:17,989 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:30:17,989 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:30:17,989 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:30:17,990 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:30:17,990 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:30:17,990 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:30:17,991 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:30:17,991 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:30:17,991 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-03 21:30:17,992 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:30:17,992 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:30:17,997 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:30:17,997 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:30:17,998 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:30:17,998 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:30:17,998 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:30:17,999 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:30:17,999 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:30:17,999 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:30:18,430 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:30:17 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:30:18,584 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:30:17 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:30:18,835 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:30:19,053 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1456 ms
2018-05-03 21:30:19,669 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:30:19,724 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:30:19,744 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:30:19,976 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:30:19,977 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:30:19,980 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:30:28,212 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:30:28,212 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:30:28,214 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:30:29,605 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:30:29,605 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:30:29,643 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:30:29,647 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:30:29,647 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:30:29,651 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:30:57,692 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:30:57,693 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:30:58,295 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:30:58,353 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:30:58,538 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:30:58,539 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:30:58,542 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:30:58,567 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:30:58,568 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:30:58,651 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:30:58,678 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:30:58,679 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:30:58,706 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:30:59,256 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:30:59,257 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:30:59,260 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:30:59,264 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:30:59,265 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:30:59,268 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:31:01,485 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:31:01,486 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:31:01,492 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:31:01,532 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:31:01,533 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:31:01,534 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:31:01,576 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:31:01,582 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:31:01,583 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:31:01,616 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:31:01,616 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:31:01,618 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:31:14,619 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-03 21:31:26,774 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-03 21:31:46,303 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:30:17 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:31:46,399 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:30:16 CST 2018]; root of context hierarchy
2018-05-03 21:36:56,481 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:36:56,547 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:36:56 CST 2018]; root of context hierarchy
2018-05-03 21:36:56,585 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:36:56,824 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:36:56,894 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:36:57,055 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:36:57,347 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:36:57,692 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:36:57,692 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:36:58,009 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:36:58,010 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:36:58,016 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:36:58,018 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:36:58,019 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:36:58,026 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:36:58,026 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:36:58,038 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:36:58,191 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1708 ms
2018-05-03 21:36:58,257 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:36:58,260 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:36:58 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:36:58,261 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:36:58,388 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:36:58,631 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:36:58,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:36:58,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:36:58,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:36:58,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:36:58,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:36:58,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:36:58,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:36:58,635 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:36:58,635 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 21:36:58,636 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:36:58,637 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:36:58,642 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:36:58,643 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:36:58,643 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:36:58,643 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:36:58,644 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:36:58,644 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:36:58,645 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:36:58,645 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:36:59,065 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:36:58 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:36:59,248 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:36:58 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:36:59,573 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:36:59,720 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1463 ms
2018-05-03 21:37:00,438 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:37:00,482 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:37:00,509 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:37:01,338 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:37:01,340 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:37:01,343 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:37:07,551 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:37:07,551 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:37:07,554 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:37:08,472 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:37:08,473 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:37:08,482 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:37:08,488 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:37:08,489 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:37:08,493 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:37:18,329 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:37:18,330 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:37:18,358 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:37:18,401 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:37:18,549 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:37:18,549 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:37:18,552 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:37:18,583 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:37:18,584 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:37:18,609 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:37:18,636 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:37:18,637 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:37:18,638 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:37:18,913 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:37:18,914 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:37:18,918 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:37:18,921 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:37:18,922 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:37:18,924 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:37:21,018 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:37:21,019 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:37:21,022 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:37:21,025 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:37:21,026 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:37:21,027 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:37:21,109 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:37:21,109 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:37:21,110 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:37:21,113 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:37:21,114 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:37:21,115 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:37:27,810 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-03 21:37:46,780 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:36:58 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:37:46,866 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:36:56 CST 2018]; root of context hierarchy
2018-05-03 21:38:13,786 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:38:13,847 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:38:13 CST 2018]; root of context hierarchy
2018-05-03 21:38:13,904 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:38:14,188 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:38:14,231 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:38:14,329 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:38:14,537 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:38:14,689 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:38:14,690 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:38:14,925 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:38:14,925 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:38:14,931 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:38:14,933 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:38:14,934 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:38:14,941 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:38:14,941 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:38:14,952 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:38:15,057 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1268 ms
2018-05-03 21:38:15,122 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:38:15,124 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:38:15 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:38:15,124 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:38:15,269 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:38:15,516 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:38:15,518 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:38:15,518 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:38:15,518 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:38:15,519 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:38:15,519 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:38:15,519 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:38:15,520 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:38:15,520 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:38:15,520 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:38:15,521 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:38:15,522 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:38:15,527 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:38:15,527 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:38:15,528 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:38:15,528 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:38:15,529 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:38:15,529 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:38:15,530 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:38:15,530 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:38:15,971 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:38:15 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:38:16,217 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:38:15 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:38:16,439 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:38:16,674 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1552 ms
2018-05-03 21:38:17,526 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:38:17,567 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:38:17,599 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:38:17,941 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:38:17,942 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:38:17,961 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:38:24,626 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:38:24,869 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:38:24,872 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:38:26,570 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:38:26,571 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:38:26,573 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:38:26,579 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:38:26,579 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:38:26,583 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:38:55,292 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:38:55,293 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:38:55,329 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:38:55,374 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:38:55,512 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:38:55,513 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:38:55,517 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:38:55,561 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:38:55,561 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:38:55,590 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:38:55,656 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:38:55,656 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:38:55,658 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:38:56,132 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:38:56,133 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:38:56,135 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:38:56,138 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:38:56,139 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:38:56,153 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:38:59,706 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:38:59,707 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:38:59,708 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:38:59,712 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:38:59,715 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:38:59,718 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:38:59,762 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:38:59,763 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:38:59,766 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:38:59,777 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:38:59,778 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:38:59,779 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:39:19,864 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:38:15 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:39:19,919 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:38:13 CST 2018]; root of context hierarchy
2018-05-03 21:39:37,894 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:39:37,940 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:39:37 CST 2018]; root of context hierarchy
2018-05-03 21:39:37,993 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:39:38,304 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:39:38,381 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:39:38,557 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:39:38,812 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:39:38,975 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:39:38,976 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:39:39,246 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:39:39,247 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:39:39,262 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:39:39,265 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:39:39,266 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:39:39,273 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:39:39,273 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:39:39,285 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:39:39,386 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1489 ms
2018-05-03 21:39:39,462 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:39:39,464 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:39:39 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:39:39,464 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:39:39,627 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:39:39,914 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:39:39,915 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:39:39,916 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:39:39,917 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:39:39,918 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:39:39,919 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:39:39,919 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:39:39,920 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-05-03 21:39:39,920 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:39:39,920 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:39:39,921 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:39:39,922 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:39:39,932 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:39:39,933 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:39:39,933 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:39:39,933 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:39:39,934 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:39:39,934 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:39:39,936 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:39:39,936 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:39:40,395 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:39:39 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:39:40,558 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:39:39 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:39:40,820 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:39:41,034 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1572 ms
2018-05-03 21:39:41,849 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:39:41,868 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:39:41,891 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:39:42,112 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:39:42,112 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:39:42,115 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:39:44,278 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:39:44,279 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:39:44,281 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:39:44,496 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:39:44,496 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:39:44,498 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:39:44,502 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:39:44,502 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:39:44,507 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:40:06,168 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:40:06,168 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:40:06,169 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:40:06,173 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:40:06,242 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:40:06,242 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:40:06,245 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:40:06,252 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:40:06,253 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:40:06,254 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:40:06,259 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:40:06,260 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:40:06,261 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:40:06,420 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:40:06,421 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:40:06,423 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:40:06,428 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:40:06,429 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:40:06,432 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:40:11,033 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:40:11,035 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:40:11,038 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:40:11,072 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:40:11,073 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:40:11,078 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:40:11,127 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:40:11,128 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:40:11,129 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:40:11,132 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:40:11,133 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:40:11,134 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:40:34,531 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:39:39 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:40:34,545 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:39:37 CST 2018]; root of context hierarchy
2018-05-03 21:41:43,454 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:41:43,498 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:41:43 CST 2018]; root of context hierarchy
2018-05-03 21:41:43,532 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:41:43,663 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:41:43,737 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:41:43,909 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:41:44,168 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:41:44,304 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:41:44,304 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:41:44,467 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:41:44,468 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:41:44,473 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:41:44,475 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:41:44,476 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:41:44,483 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:41:44,484 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:41:44,494 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:41:44,600 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1142 ms
2018-05-03 21:41:44,678 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:41:44,680 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:41:44 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:41:44,680 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:41:44,793 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:41:45,044 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:41:45,046 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:41:45,046 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:41:45,046 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:41:45,047 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:41:45,047 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:41:45,047 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,int[],java.lang.String)
2018-05-03 21:41:45,048 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:41:45,048 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:41:45,048 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:41:45,049 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:41:45,049 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:41:45,055 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:41:45,055 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:41:45,056 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:41:45,056 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:41:45,056 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:41:45,057 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:41:45,057 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:41:45,057 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:41:45,478 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:41:44 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:41:45,630 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:41:44 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:41:45,904 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:41:46,101 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1422 ms
2018-05-03 21:41:46,692 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:41:46,710 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:41:46,726 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:41:46,987 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:41:46,988 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:41:46,990 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:41:47,949 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:41:47,950 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:41:47,952 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:41:49,342 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:41:49,342 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:41:49,356 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:41:49,497 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:41:49,498 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:41:49,502 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:42:41,917 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:42:41,918 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:42:41,971 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:42:41,976 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:42:42,020 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:42:42,020 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:42:42,025 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:42:42,032 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:42:42,033 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:42:42,249 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:42:42,395 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:42:42,395 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:42:42,397 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:42:42,608 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:42:42,611 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:42:42,613 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:42:42,618 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:42:42,618 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:42:42,621 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:42:49,903 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:42:49,904 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:42:49,909 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:42:49,915 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:42:49,916 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:42:49,917 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:42:49,945 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:42:49,946 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:42:49,947 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:42:49,950 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:42:49,951 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:42:49,955 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:43:46,260 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:41:44 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:43:46,338 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:41:43 CST 2018]; root of context hierarchy
2018-05-03 21:44:21,873 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:44:21,916 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:44:21 CST 2018]; root of context hierarchy
2018-05-03 21:44:21,955 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:44:22,107 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:44:22,144 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:44:22,241 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:44:22,476 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:44:22,742 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:44:22,743 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:44:23,011 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:44:23,012 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:44:23,018 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:44:23,021 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:44:23,022 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:44:23,034 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:44:23,035 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:44:23,057 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:44:23,194 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1319 ms
2018-05-03 21:44:23,266 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:44:23,271 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:44:23 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:44:23,272 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:44:23,440 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:44:23,821 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:44:23,822 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:44:23,823 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:44:23,823 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:44:23,823 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:44:23,824 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:44:23,824 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:44:23,824 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,int[],java.lang.String)
2018-05-03 21:44:23,825 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:44:23,825 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:44:23,826 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:44:23,827 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:44:23,832 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:44:23,833 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:44:23,833 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:44:23,833 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:44:23,834 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:44:23,834 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:44:23,834 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:44:23,835 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:44:24,234 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:44:23 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:44:24,366 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:44:23 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:44:24,609 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:44:24,849 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1582 ms
2018-05-03 21:44:25,344 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:44:25,385 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:44:25,409 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:44:25,631 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:44:25,631 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:44:25,638 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:44:27,058 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:44:28,497 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:44:28,502 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:44:29,844 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:44:29,844 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:44:29,846 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:44:29,850 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:44:29,850 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:44:29,855 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:44:48,825 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:44:48,825 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:44:48,846 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:44:48,850 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:44:48,901 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:44:48,902 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:44:48,906 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:44:48,914 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:44:48,914 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:44:48,934 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:44:48,950 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:44:48,951 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:44:48,957 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:44:49,232 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:44:49,233 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:44:49,236 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:44:49,240 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:44:49,241 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:44:49,244 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:44:51,215 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:44:51,216 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:44:51,222 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:44:51,226 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:44:51,227 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:44:51,228 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:44:51,281 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:44:51,282 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:44:51,283 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:44:51,287 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:44:51,287 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:44:51,289 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:45:02,581 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:44:23 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:45:02,593 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:44:21 CST 2018]; root of context hierarchy
2018-05-03 21:45:28,563 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-03 21:45:28,621 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Thu May 03 21:45:28 CST 2018]; root of context hierarchy
2018-05-03 21:45:28,655 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-03 21:45:28,713 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-03 21:45:28,754 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-03 21:45:28,882 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-03 21:45:29,146 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:45:29,423 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-03 21:45:29,424 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:45:29,643 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:45:29,643 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:45:29,650 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:45:29,652 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:45:29,654 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:45:29,661 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:45:29,661 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:45:29,675 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-03 21:45:29,858 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1292 ms
2018-05-03 21:45:29,942 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-03 21:45:29,946 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:45:29 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:45:29,946 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-03 21:45:30,126 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-03 21:45:30,447 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:45:30,449 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-03 21:45:30,450 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-03 21:45:30,450 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-03 21:45:30,452 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:45:30,453 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:45:30,454 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:45:30,454 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-03 21:45:30,454 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-03 21:45:30,456 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-03 21:45:30,457 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-03 21:45:30,458 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-03 21:45:30,472 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-03 21:45:30,472 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-03 21:45:30,473 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-03 21:45:30,473 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-03 21:45:30,474 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-03 21:45:30,474 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-03 21:45:30,475 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-03 21:45:30,475 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-03 21:45:30,843 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:45:29 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:45:30,982 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:45:29 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:45:31,258 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-03 21:45:31,424 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1482 ms
2018-05-03 21:45:31,786 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:45:31,864 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:45:31,883 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:45:32,073 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:45:32,080 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:45:32,083 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:45:35,942 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:45:35,943 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:45:35,945 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:45:36,330 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:45:36,330 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:45:36,332 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:45:36,336 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:45:36,336 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:45:36,340 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:46:07,340 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-03 21:46:07,347 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-03 21:46:07,349 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-03 21:46:07,353 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-03 21:46:07,393 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-03 21:46:07,394 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-03 21:46:07,396 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-03 21:46:07,404 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:46:07,405 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:46:07,406 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:46:07,812 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:46:07,812 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:46:07,814 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:46:08,095 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-03 21:46:08,096 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-03 21:46:08,099 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-03 21:46:08,104 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-03 21:46:08,105 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-03 21:46:08,109 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-03 21:46:13,301 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:46:13,302 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:46:13,309 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:46:13,314 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:46:13,314 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:46:13,315 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:46:13,339 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-03 21:46:13,340 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-03 21:46:13,341 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-03 21:46:13,345 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-03 21:46:13,346 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-03 21:46:13,347 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-03 21:52:18,694 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Thu May 03 21:45:29 CST 2018]; parent: Root WebApplicationContext
2018-05-03 21:52:20,988 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Thu May 03 21:45:28 CST 2018]; root of context hierarchy
