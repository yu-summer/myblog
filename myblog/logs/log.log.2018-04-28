2018-04-28 13:06:06,496 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 13:06:06,577 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 13:06:06 CST 2018]; root of context hierarchy
2018-04-28 13:06:06,625 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 13:06:06,894 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 13:06:06,957 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 13:06:07,089 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 13:06:07,376 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 13:06:07,528 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 13:06:07,528 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:06:07,827 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:06:07,827 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:06:07,833 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:06:07,836 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:06:07,837 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:06:07,844 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:06:07,845 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:06:07,857 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:06:08,019 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1520 ms
2018-04-28 13:06:08,098 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 13:06:08,103 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:06:08 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:06:08,103 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 13:06:08,233 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 13:06:08,476 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 13:06:08,478 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 13:06:08,478 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 13:06:08,479 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 13:06:08,479 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 13:06:08,479 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 13:06:08,480 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getRoles.do],methods=[POST]}" onto public void com.summer.blog.controller.TestController.getRole(java.lang.String)
2018-04-28 13:06:08,484 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 13:06:08,484 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 13:06:08,485 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 13:06:08,485 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 13:06:08,909 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:06:08 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:06:09,048 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:06:08 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:06:09,319 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 13:06:09,441 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1343 ms
2018-04-28 13:06:10,495 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:10,526 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:06:10,621 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 4
2018-04-28 13:06:10,851 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:10,852 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:06:10,855 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 4
2018-04-28 13:06:25,955 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:25,955 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:06:25,957 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 4
2018-04-28 13:06:48,947 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:48,948 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-28 13:06:48,950 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:06:50,011 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:50,012 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:06:50,015 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 4
2018-04-28 13:06:50,872 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:50,872 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-28 13:06:50,874 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:06:51,520 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:51,521 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-04-28 13:06:51,522 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:06:52,193 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:52,194 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-28 13:06:52,195 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:06:52,832 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:52,832 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-28 13:06:52,834 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:06:54,511 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:54,512 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-28 13:06:54,513 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:06:55,455 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:06:55,455 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:06:55,457 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 4
2018-04-28 13:08:39,752 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:08:39,753 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:08:39,754 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:08:40,913 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:08:40,913 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-28 13:08:40,914 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:08:41,534 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:08:41,535 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-04-28 13:08:41,536 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:08:42,236 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:08:42,237 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 4(Integer)
2018-04-28 13:08:42,238 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:08:43,058 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:08:43,059 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-04-28 13:08:43,061 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:08:43,927 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:08:43,927 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:08:43,928 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:08:58,638 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 13:08:58,639 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 13:08:58,678 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 13:08:58,684 INFO[com.summer.blog.controller.UserController:54] - admin: login
2018-04-28 13:08:58,862 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:08:58,863 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:08:58,864 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:08:58,870 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 13:08:58,870 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 13:08:58,914 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 13:08:58,921 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 13:08:58,922 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 13:08:59,019 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 13:09:01,221 WARN[org.springframework.web.servlet.PageNotFound:188] - Request method 'GET' not supported
2018-04-28 13:09:45,511 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:06:08 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:09:45,566 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 13:06:06 CST 2018]; root of context hierarchy
2018-04-28 13:10:02,941 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 13:10:02,989 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 13:10:02 CST 2018]; root of context hierarchy
2018-04-28 13:10:03,050 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 13:10:03,334 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 13:10:03,406 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 13:10:03,529 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 13:10:03,784 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 13:10:03,916 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 13:10:03,916 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:10:04,114 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:10:04,115 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:10:04,122 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:10:04,124 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:10:04,125 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:10:04,132 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:10:04,133 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:10:04,145 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:10:04,262 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1318 ms
2018-04-28 13:10:04,322 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 13:10:04,325 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:10:04 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:10:04,325 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 13:10:04,458 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 13:10:04,733 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 13:10:04,734 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 13:10:04,735 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 13:10:04,735 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 13:10:04,736 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 13:10:04,736 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 13:10:04,737 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getRoles.do],methods=[POST]}" onto public void com.summer.blog.controller.TestController.getRole(java.lang.String)
2018-04-28 13:10:04,741 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 13:10:04,741 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 13:10:04,741 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 13:10:04,742 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 13:10:05,157 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:10:04 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:10:05,296 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:10:04 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:10:05,528 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 13:10:05,669 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1346 ms
2018-04-28 13:10:06,247 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:10:06,301 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:10:06,313 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:10:06,532 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:10:06,534 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:10:06,534 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:10:08,465 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:10:08,466 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:10:08,466 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:10:21,876 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 13:10:21,876 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 13:10:21,880 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 13:10:21,884 INFO[com.summer.blog.controller.UserController:54] - admin: login
2018-04-28 13:10:22,009 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:10:22,010 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:10:22,011 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:10:22,018 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 13:10:22,019 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 13:10:22,021 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 13:10:22,027 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 13:10:22,027 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 13:10:22,031 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 13:13:56,411 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-28 13:13:56,500 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: jdk9(String), summer(String), 2018-04-28 13-13-55(String), 1(Integer), Java 9起初的代号就叫Jigsaw，最近被更改为Modularity，Modularity提供了类似于OSGI框架的功能，模块之间存在相互的依赖关系，可以导出一个公共的API，并且隐藏实现的细节，Java提供该功能的主要的动机在于，减少内存的开销，(String)
2018-04-28 13:13:57,166 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-28 13:13:58,732 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-28 13:13:58,733 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: jdk9(String)
2018-04-28 13:13:58,831 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-28 13:14:08,840 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:14:08,841 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:14:08,886 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:14:09,136 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 13:14:09,137 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 13:14:09,235 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 13:14:10,191 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 13:14:10,192 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 13:14:10,241 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 13:17:53,380 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:10:04 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:17:53,449 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 13:10:02 CST 2018]; root of context hierarchy
2018-04-28 13:23:30,907 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 13:23:30,985 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 13:23:30 CST 2018]; root of context hierarchy
2018-04-28 13:23:31,031 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 13:23:31,308 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 13:23:31,378 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 13:23:31,549 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 13:23:31,807 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 13:23:31,959 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 13:23:31,960 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:23:32,241 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:23:32,242 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:23:32,247 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:23:32,249 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:23:32,250 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:23:32,256 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:23:32,257 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:23:32,269 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:23:32,359 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1448 ms
2018-04-28 13:23:32,454 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 13:23:32,456 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:23:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:23:32,457 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 13:23:32,604 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 13:23:33,063 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 13:23:33,064 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 13:23:33,065 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 13:23:33,065 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 13:23:33,065 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 13:23:33,066 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 13:23:33,066 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getRoles.do],methods=[POST]}" onto public void com.summer.blog.controller.TestController.getRole(java.lang.String)
2018-04-28 13:23:33,070 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 13:23:33,070 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 13:23:33,071 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 13:23:33,071 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 13:23:33,491 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:23:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:23:33,619 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:23:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:23:33,861 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 13:23:34,200 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1746 ms
2018-04-28 13:23:35,043 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:23:35,079 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:23:35,100 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:23:35,463 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:23:35,464 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:23:35,465 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:23:46,115 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:23:46,116 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:23:46,131 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:24:02,312 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 13:24:02,313 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 13:24:02,364 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 13:24:02,369 INFO[com.summer.blog.controller.UserController:54] - admin: login
2018-04-28 13:24:02,725 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:24:02,725 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:24:02,726 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:24:02,755 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 13:24:02,756 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 13:24:02,892 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 13:24:02,902 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 13:24:02,903 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 13:24:02,930 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 13:24:35,505 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-28 13:24:35,507 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: FreeMarker中文问题的解决(String), summer(String), 2018-04-28 13-24-35(String), 1(Integer), (String)
2018-04-28 13:24:35,829 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-28 13:39:22,983 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:23:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:39:23,025 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 13:23:30 CST 2018]; root of context hierarchy
2018-04-28 13:44:29,661 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 13:44:29,727 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 13:44:29 CST 2018]; root of context hierarchy
2018-04-28 13:44:29,783 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 13:44:30,132 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 13:44:30,198 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 13:44:30,324 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 13:44:30,631 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 13:44:30,791 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 13:44:30,792 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:44:31,063 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:44:31,063 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:44:31,069 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:44:31,071 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:44:31,072 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:44:31,078 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:44:31,079 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:44:31,090 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 13:44:31,183 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1520 ms
2018-04-28 13:44:31,286 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 13:44:31,288 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:44:31 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:44:31,289 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 13:44:31,699 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 13:44:32,014 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 13:44:32,015 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 13:44:32,017 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 13:44:32,017 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 13:44:32,019 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 13:44:32,020 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 13:44:32,020 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getRoles.do],methods=[POST]}" onto public void com.summer.blog.controller.TestController.getRole(java.lang.String)
2018-04-28 13:44:32,028 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 13:44:32,028 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 13:44:32,029 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 13:44:32,030 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 13:44:32,452 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:44:31 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:44:32,585 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:44:31 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:44:32,824 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 13:44:32,934 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1647 ms
2018-04-28 13:44:33,530 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:44:33,549 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:44:33,560 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:44:33,868 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:44:33,869 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:44:33,869 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:44:38,807 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:44:38,808 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:44:38,817 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:46:51,266 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:46:51,290 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:46:51,292 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:47:02,115 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 13:47:02,116 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 13:47:02,157 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 13:47:02,162 INFO[com.summer.blog.controller.UserController:54] - admin: login
2018-04-28 13:47:02,366 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:47:02,367 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:47:02,371 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 13:47:02,400 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 13:47:02,401 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 13:47:02,455 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 13:47:02,490 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 13:47:02,491 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 13:47:02,494 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 13:47:26,151 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-28 13:47:26,153 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: Ubuntu 18.04将放弃Unity，采用Gnome(String), summer(String), 2018-04-28 13-47-26(String), 1(Integer), Ubuntu 18.04 LTS长期支持版本将使用GNOME作为其默认桌面环境，而不是Unity 8，甚至Unity 7。马克·沙特尔沃思（Mark Shuttleworth）在一篇非常博客文章中已经宣布，Canonical将在Unity 8，Mir，Ubuntu的手机和平板电脑上结束投资，不再追求“融合”的目标。进一步补充说明Ubuntu，Ubuntu桌面将在Ubuntu 18.04LTS转移使用GNOME。(String)
2018-04-28 13:47:26,274 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-28 13:47:26,831 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-28 13:47:26,831 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: Ubuntu 18.04将放弃Unity，采用Gnome(String)
2018-04-28 13:47:26,839 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-28 13:47:32,494 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 13:47:32,495 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 13:47:32,497 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 13:47:32,508 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 13:47:32,514 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 13:47:32,516 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 13:47:32,540 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 13:47:32,541 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 13:47:32,543 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 13:52:43,200 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 13:44:31 CST 2018]; parent: Root WebApplicationContext
2018-04-28 13:52:43,260 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 13:44:29 CST 2018]; root of context hierarchy
2018-04-28 16:18:04,559 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 16:18:04,628 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 16:18:04 CST 2018]; root of context hierarchy
2018-04-28 16:18:04,668 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 16:18:04,929 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 16:18:04,991 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 16:18:05,152 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 16:18:05,488 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:18:05,655 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 16:18:05,656 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:18:06,043 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:18:06,043 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:18:06,049 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:18:06,051 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:18:06,052 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:18:06,059 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:18:06,060 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:18:06,072 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:18:06,175 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1614 ms
2018-04-28 16:18:06,251 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 16:18:06,253 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:18:06 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:18:06,254 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 16:18:06,398 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:18:06,657 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 16:18:06,659 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:18:06,659 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 16:18:06,660 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 16:18:06,660 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 16:18:06,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 16:18:06,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getRoles.do],methods=[POST]}" onto public void com.summer.blog.controller.TestController.getRole(java.lang.String)
2018-04-28 16:18:06,665 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:18:06,666 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 16:18:06,666 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 16:18:06,667 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 16:18:07,025 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:18:06 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:18:07,171 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:18:06 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:18:07,628 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 16:18:07,774 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1522 ms
2018-04-28 16:18:09,069 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:18:09,091 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:18:09,201 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:18:09,884 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:18:09,885 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:18:09,887 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:18:18,354 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:18:18,354 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:18:18,497 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:18:38,344 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:18:38,386 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:18:38,751 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:18:54,661 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 16:18:54,662 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 16:18:55,097 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 16:18:55,168 INFO[com.summer.blog.controller.UserController:54] - admin: login
2018-04-28 16:18:55,910 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:18:55,911 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:18:55,940 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:18:56,007 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 16:18:56,021 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 16:18:56,245 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 16:18:56,321 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 16:18:56,322 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 16:18:56,366 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 16:19:41,101 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-28 16:19:41,143 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: Ubuntu 18.04将放弃Unity，采用Gnome(String), summer(String), 2018-04-28 16-19-41(String), 2(Integer), Ubuntu 18.04 LTS长期支持版本将使用GNOME作为其默认桌面环境，而不是Unity 8，甚至Unity 7。马克·沙特尔沃思（Mark Shuttleworth）在一篇非常博客文章中已经宣布，Canonical将在Unity 8，Mir，Ubuntu的手机和平板电脑上结束投资，不再追求“融合”的目标。进一步补充说明Ubuntu，Ubuntu桌面将在Ubuntu 18.04LTS转移使用GNOME。(String)
2018-04-28 16:19:41,340 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-28 16:19:42,081 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-28 16:19:42,082 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: Ubuntu 18.04将放弃Unity，采用Gnome(String)
2018-04-28 16:19:42,149 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-28 16:19:46,636 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:19:46,637 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:19:46,668 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:19:46,778 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 16:19:46,779 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 16:19:46,780 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 16:19:46,811 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 16:19:46,812 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 16:19:46,815 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 16:19:47,815 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:19:47,815 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-28 16:19:47,817 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 16:19:47,826 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 16:19:47,827 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 16:19:47,827 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 16:19:47,832 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 16:19:47,833 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 16:19:47,835 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 16:20:17,788 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:18:06 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:20:17,851 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 16:18:04 CST 2018]; root of context hierarchy
2018-04-28 16:25:20,632 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 16:25:20,726 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 16:25:20 CST 2018]; root of context hierarchy
2018-04-28 16:25:20,772 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 16:25:21,007 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 16:25:21,075 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 16:25:21,207 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 16:25:21,480 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:25:21,625 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 16:25:21,626 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:25:21,854 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:25:21,855 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:25:21,861 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:25:21,863 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:25:21,864 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:25:21,871 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:25:21,872 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:25:21,884 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:25:22,016 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1381 ms
2018-04-28 16:25:22,135 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 16:25:22,138 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:25:22 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:25:22,138 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 16:25:22,250 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:25:22,527 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 16:25:22,528 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:25:22,529 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 16:25:22,529 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 16:25:22,530 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 16:25:22,530 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 16:25:22,531 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getRoles.do],methods=[POST]}" onto public void com.summer.blog.controller.TestController.getRole(java.lang.String)
2018-04-28 16:25:22,535 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:25:22,535 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 16:25:22,536 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 16:25:22,536 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 16:25:23,372 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:25:22 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:25:23,502 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:25:22 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:25:23,798 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 16:25:23,922 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1786 ms
2018-04-28 16:25:24,904 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:25:24,925 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:25:24,936 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:25:25,209 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:25:25,210 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:25:25,211 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:25:39,974 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:25:39,975 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:25:39,976 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:26:17,686 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:26:17,855 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-28 16:26:18,177 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 16:26:41,910 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:25:22 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:26:41,999 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 16:25:20 CST 2018]; root of context hierarchy
2018-04-28 16:28:11,346 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 16:28:11,420 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 16:28:11 CST 2018]; root of context hierarchy
2018-04-28 16:28:11,515 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 16:28:12,638 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 16:28:12,697 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 16:28:12,962 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 16:28:13,283 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:28:13,427 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 16:28:13,427 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:28:13,881 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:28:13,882 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:28:13,888 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:28:13,890 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:28:13,892 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:28:13,899 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:28:13,900 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:28:13,911 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:28:14,054 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 2706 ms
2018-04-28 16:28:14,142 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 16:28:14,144 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:28:14 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:28:14,144 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 16:28:14,272 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:28:14,513 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 16:28:14,515 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:28:14,516 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 16:28:14,516 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 16:28:14,516 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 16:28:14,517 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 16:28:14,520 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:28:14,520 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 16:28:14,521 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 16:28:14,521 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 16:28:14,915 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:28:14 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:28:15,045 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:28:14 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:28:15,273 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 16:28:15,399 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1257 ms
2018-04-28 16:28:17,208 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:28:17,227 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:28:17,741 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:28:18,870 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:28:18,871 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:28:18,878 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:28:37,994 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:28:37,995 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:28:38,110 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:28:54,654 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:28:54,684 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-04-28 16:28:55,055 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 16:29:06,887 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 16:29:06,888 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 16:29:06,977 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 16:29:07,008 INFO[com.summer.blog.controller.UserController:54] - admin: login
2018-04-28 16:29:07,486 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:29:07,487 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:29:07,574 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 16:29:07,644 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 16:29:07,645 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 16:29:07,810 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 16:29:07,871 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 16:29:07,872 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 16:29:07,899 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 16:29:30,771 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-28 16:29:30,772 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: jdk(String), summer(String), 2018-04-28 16-29-30(String), 1(Integer), Ubuntu 18.04 LTS长期支持版本将使用GNOME作为其默认桌面环境，而不是Unity 8，甚至Unity 7。马克·沙特尔沃思（Mark Shuttleworth）在一篇非常博客文章中已经宣布，Canonical将在Unity 8，Mir，Ubuntu的手机和平板电脑上结束投资，不再追求“融合”的目标。进一步补充说明Ubuntu，Ubuntu桌面将在Ubuntu 18.04LTS转移使用GNOME。(String)
2018-04-28 16:29:30,922 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-28 16:29:31,592 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-28 16:29:31,592 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: jdk(String)
2018-04-28 16:29:31,594 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-28 16:30:36,735 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:28:14 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:30:36,924 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 16:28:11 CST 2018]; root of context hierarchy
2018-04-28 16:30:57,504 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 16:30:57,615 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 16:30:57 CST 2018]; root of context hierarchy
2018-04-28 16:30:57,653 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 16:30:57,872 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 16:30:57,941 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 16:30:58,102 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 16:30:58,371 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:30:58,581 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 16:30:58,582 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:30:58,881 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:30:58,881 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:30:58,888 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:30:58,890 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:30:58,892 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:30:58,900 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:30:58,901 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:30:58,918 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:30:59,233 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1726 ms
2018-04-28 16:30:59,349 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 16:30:59,352 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:30:59 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:30:59,352 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 16:30:59,506 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:30:59,805 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 16:30:59,806 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 16:30:59,807 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 16:30:59,807 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:30:59,808 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 16:30:59,808 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 16:30:59,812 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:30:59,813 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 16:30:59,813 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 16:30:59,814 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 16:31:00,553 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:30:59 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:31:00,710 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:30:59 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:31:00,998 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 16:31:01,226 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1877 ms
2018-04-28 16:31:03,097 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:31:03,122 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:31:03,164 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 16:31:04,385 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:31:04,386 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:31:04,387 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 16:31:23,892 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:31:23,893 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:31:23,895 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 16:31:57,515 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 16:31:57,570 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 16:31:57,655 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 16:31:57,794 INFO[com.summer.blog.controller.UserController:54] - admin: login
2018-04-28 16:31:58,289 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:31:58,289 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:31:58,291 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-04-28 16:31:58,586 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 16:31:58,586 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 16:31:58,757 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 16:31:59,157 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 16:31:59,158 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 16:31:59,160 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 16:33:32,934 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-28 16:33:32,935 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: xssf(String), summer(String), 2018-04-28 16-32-15(String), 1(Integer), Ubuntu 18.04 LTS长期支持版本将使用GNOME作为其默认桌面环境，而不是Unity 8，甚至Unity 7。马克·沙特尔沃思（Mark Shuttleworth）在一篇非常博客文章中已经宣布，Canonical将在Unity 8，Mir，Ubuntu的手机和平板电脑上结束投资，不再追求“融合”的目标。进一步补充说明Ubuntu，Ubuntu桌面将在Ubuntu 18.04LTS转移使用GNOME。(String)
2018-04-28 16:33:34,064 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-28 16:33:40,097 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-28 16:33:40,098 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: xssf(String)
2018-04-28 16:33:40,100 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-28 16:33:43,891 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:30:59 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:33:43,924 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 16:30:57 CST 2018]; root of context hierarchy
2018-04-28 16:34:42,233 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 16:34:42,306 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 16:34:42 CST 2018]; root of context hierarchy
2018-04-28 16:34:42,351 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 16:34:42,586 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 16:34:42,652 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 16:34:42,777 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 16:34:43,050 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:34:43,194 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 16:34:43,195 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:34:43,420 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:34:43,421 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:34:43,427 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:34:43,429 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:34:43,430 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:34:43,437 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:34:43,438 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:34:43,451 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:34:43,543 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1308 ms
2018-04-28 16:34:43,623 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 16:34:43,625 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:34:43 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:34:43,625 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 16:34:43,763 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:34:43,984 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:34:43,985 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 16:34:43,985 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 16:34:43,985 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 16:34:43,986 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 16:34:43,986 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 16:34:43,989 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:34:43,990 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 16:34:43,990 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 16:34:43,990 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 16:34:44,361 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:34:43 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:34:44,494 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:34:43 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:34:44,743 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 16:34:44,866 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1243 ms
2018-04-28 16:34:45,710 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:34:45,729 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:34:45,745 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-28 16:34:46,066 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:34:46,067 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:34:46,183 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-28 16:35:02,157 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:35:02,211 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:35:02,314 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-28 16:35:42,355 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 16:35:42,382 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 16:35:42,576 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 16:35:42,618 INFO[com.summer.blog.controller.UserController:54] - admin: login
2018-04-28 16:35:43,093 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:35:43,094 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:35:43,128 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-04-28 16:35:43,173 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 16:35:43,174 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 16:35:43,388 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 16:35:43,447 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 16:35:43,448 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 16:35:43,479 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 16:36:15,752 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-28 16:36:15,754 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: fsd(String), summer(String), 2018-04-28 16-36-15(String), 1(Integer), Ubuntu 18.04 LTS长期支持版本将使用GNOME作为其默认桌面环境，而不是Unity 8，甚至Unity 7。马克·沙特尔沃思（Mark Shuttleworth）在一篇非常博客文章中已经宣布，Canonical将在Unity 8，Mir，Ubuntu的手机和平板电脑上结束投资，不再追求“融合”的目标。进一步补充说明Ubuntu，Ubuntu桌面将在Ubuntu 18.04LTS转移使用GNOME。(String)
2018-04-28 16:36:15,967 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-28 16:36:16,414 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-28 16:36:16,415 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: fsd(String)
2018-04-28 16:36:16,417 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-28 16:38:18,514 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-28 16:38:18,516 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: FreeMarker中文问题的解决(String), summer(String), 2018-04-28 16-38-18(String), 1(Integer), FreeMarker中文问题的解决(String)
2018-04-28 16:38:18,575 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-28 16:38:18,666 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-28 16:38:18,668 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: FreeMarker中文问题的解决(String)
2018-04-28 16:38:18,669 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-28 16:40:59,804 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:34:43 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:40:59,878 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 16:34:42 CST 2018]; root of context hierarchy
2018-04-28 16:41:18,375 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 16:41:18,442 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 16:41:18 CST 2018]; root of context hierarchy
2018-04-28 16:41:18,479 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 16:41:18,723 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 16:41:18,795 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 16:41:18,951 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 16:41:19,166 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:41:19,354 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 16:41:19,354 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:41:19,669 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:41:19,669 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:41:19,675 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:41:19,678 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:41:19,679 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:41:19,687 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:41:19,687 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:41:19,699 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 16:41:19,795 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1418 ms
2018-04-28 16:41:19,883 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 16:41:19,885 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:41:19 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:41:19,885 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 16:41:20,028 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 16:41:20,294 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 16:41:20,295 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 16:41:20,296 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 16:41:20,296 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 16:41:20,297 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:41:20,297 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 16:41:20,301 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 16:41:20,302 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 16:41:20,302 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 16:41:20,302 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 16:41:20,689 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:41:19 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:41:20,820 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:41:19 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:41:21,028 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 16:41:21,132 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1249 ms
2018-04-28 16:41:21,874 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:41:21,894 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:41:21,912 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 4
2018-04-28 16:41:22,223 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:41:22,224 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:41:22,226 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 4
2018-04-28 16:41:32,904 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:41:33,440 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:41:33,443 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 4
2018-04-28 16:41:49,017 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 16:41:49,017 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 16:41:49,074 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 16:41:49,121 INFO[com.summer.blog.controller.UserController:54] - admin: login
2018-04-28 16:41:49,473 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:41:49,474 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:41:49,478 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 4
2018-04-28 16:41:49,551 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 16:41:49,552 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 16:41:49,591 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 16:41:49,665 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 16:41:49,665 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 16:41:49,670 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 16:42:10,070 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-04-28 16:42:10,071 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: FreeMarker中文问题的解决(String), summer(String), 2018-04-28 16-42-10(String), 1(Integer), FreeMarker中文问题的解决(String)
2018-04-28 16:42:10,133 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-04-28 16:42:10,501 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-04-28 16:42:10,502 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: FreeMarker中文问题的解决(String)
2018-04-28 16:42:10,504 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-04-28 16:42:24,205 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 16:42:24,206 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 16:42:24,208 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-04-28 16:42:24,278 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 16:42:24,279 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 16:42:24,283 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 16:42:24,298 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 16:42:24,299 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 16:42:24,300 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 16:43:50,442 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 16:41:19 CST 2018]; parent: Root WebApplicationContext
2018-04-28 16:43:50,521 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 16:41:18 CST 2018]; root of context hierarchy
2018-04-28 17:03:17,137 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:03:17,201 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:03:17 CST 2018]; root of context hierarchy
2018-04-28 17:03:17,240 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:03:17,476 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:03:17,545 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:03:17,689 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:03:17,917 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:03:18,089 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:03:18,090 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:03:18,414 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:03:18,415 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:03:18,421 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:03:18,423 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:03:18,424 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:03:18,432 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:03:18,433 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:03:18,445 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:03:18,560 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1421 ms
2018-04-28 17:03:18,632 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:03:18,634 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:03:18 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:03:18,634 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:03:18,770 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:03:19,008 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:03:19,009 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:03:19,010 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:03:19,010 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:03:19,011 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:03:19,011 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:03:19,015 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:03:19,016 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:03:19,016 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:03:19,016 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:03:19,395 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:03:18 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:03:19,528 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:03:18 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:03:19,767 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:03:19,876 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1244 ms
2018-04-28 17:03:20,750 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:03:20,770 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:03:20,781 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:03:21,141 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:03:21,142 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:03:21,150 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:03:33,449 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:03:33,450 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:03:33,451 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:06:27,151 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:03:18 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:06:27,206 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:03:17 CST 2018]; root of context hierarchy
2018-04-28 17:06:52,439 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:06:52,514 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:06:52 CST 2018]; root of context hierarchy
2018-04-28 17:06:52,560 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:06:52,877 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:06:52,945 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:06:53,068 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:06:53,318 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:06:53,479 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:06:53,479 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:06:53,872 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:06:53,872 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:06:53,878 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:06:53,880 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:06:53,881 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:06:53,887 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:06:53,888 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:06:53,899 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:06:53,991 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1549 ms
2018-04-28 17:06:54,080 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:06:54,082 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:06:54 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:06:54,083 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:06:54,216 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:06:54,441 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:06:54,443 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:06:54,443 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:06:54,444 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:06:54,444 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:06:54,444 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:06:54,448 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:06:54,449 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:06:54,449 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:06:54,449 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:06:54,836 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:06:54 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:06:54,967 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:06:54 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:06:55,252 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:06:55,379 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1299 ms
2018-04-28 17:06:57,262 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:06:57,325 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:06:57,723 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:06:58,200 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:06:58,201 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:06:58,202 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:07:10,963 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:07:10,964 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:07:11,416 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:08:03,517 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/user/doRegister.do] in DispatcherServlet with name 'myBlog'
2018-04-28 17:08:16,022 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:06:54 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:08:16,087 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:06:52 CST 2018]; root of context hierarchy
2018-04-28 17:09:03,398 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:09:03,466 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:09:03 CST 2018]; root of context hierarchy
2018-04-28 17:09:03,504 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:09:03,764 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:09:03,829 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:09:03,962 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:09:04,188 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:09:04,349 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:09:04,350 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:04,677 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:04,677 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:04,684 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:04,686 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:04,687 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:04,695 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:04,696 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:04,709 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:04,805 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1405 ms
2018-04-28 17:09:04,891 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:09:04,893 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:09:04 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:09:04,893 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:09:05,017 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:09:05,253 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:09:05,254 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:09:05,255 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:09:05,255 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:09:05,256 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:09:05,256 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:09:05,259 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:09:05,260 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:09:05,260 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:09:05,260 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:09:05,626 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:09:04 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:09:05,758 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:09:04 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:09:05,973 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:09:06,086 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1195 ms
2018-04-28 17:09:06,489 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:09:04 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:09:06,493 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:09:03 CST 2018]; root of context hierarchy
2018-04-28 17:09:31,329 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:09:31,371 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:09:31 CST 2018]; root of context hierarchy
2018-04-28 17:09:31,402 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:09:31,458 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:09:31,506 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:09:31,616 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:09:31,845 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:09:31,998 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:09:31,999 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:32,200 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:32,200 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:32,209 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:32,212 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:32,214 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:32,221 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:32,221 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:32,232 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:09:32,319 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 988 ms
2018-04-28 17:09:32,435 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:09:32,439 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:09:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:09:32,439 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:09:32,560 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:09:32,811 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:09:32,813 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:09:32,813 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:09:32,813 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:09:32,814 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:09:32,814 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:09:32,818 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:09:32,818 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:09:32,819 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:09:32,819 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:09:33,227 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:09:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:09:33,376 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:09:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:09:33,641 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:09:33,756 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1321 ms
2018-04-28 17:09:34,628 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:09:34,669 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:09:34,814 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:09:35,086 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:09:35,087 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:09:35,094 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:09:48,014 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:09:48,056 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:09:48,057 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:10:16,702 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/user/doRegister.do] in DispatcherServlet with name 'myBlog'
2018-04-28 17:10:59,407 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:09:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:10:59,454 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:09:31 CST 2018]; root of context hierarchy
2018-04-28 17:11:20,880 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:11:20,990 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:11:20 CST 2018]; root of context hierarchy
2018-04-28 17:11:21,033 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:11:21,193 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:11:21,261 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:11:21,419 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:11:21,677 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:11:21,855 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:11:21,856 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:11:22,155 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:11:22,156 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:11:22,162 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:11:22,164 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:11:22,166 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:11:22,173 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:11:22,174 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:11:22,186 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:11:22,281 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1398 ms
2018-04-28 17:11:22,436 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:11:22,438 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:11:22 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:11:22,438 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:11:22,561 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:11:22,775 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:11:22,777 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:11:22,777 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:11:22,778 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:11:22,778 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:11:22,779 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:11:22,783 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:11:22,783 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:11:22,784 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:11:22,784 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:11:23,173 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:11:22 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:11:23,304 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:11:22 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:11:23,538 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:11:24,021 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1585 ms
2018-04-28 17:11:24,964 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:11:24,983 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:11:25,031 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:11:25,275 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:11:25,276 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:11:25,277 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:11:35,140 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:11:35,141 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:11:35,143 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:14:09,092 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:11:22 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:14:09,147 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:11:20 CST 2018]; root of context hierarchy
2018-04-28 17:16:54,523 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:16:54,598 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:16:54 CST 2018]; root of context hierarchy
2018-04-28 17:16:54,637 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:16:54,907 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:16:54,977 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:16:55,128 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:16:55,347 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:16:55,507 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:16:55,507 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:16:55,819 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:16:55,820 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:16:55,826 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:16:55,828 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:16:55,829 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:16:55,836 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:16:55,836 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:16:55,848 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:16:55,944 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1419 ms
2018-04-28 17:16:56,039 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:16:56,043 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:16:56 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:16:56,043 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:16:56,193 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:16:56,424 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:16:56,425 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:16:56,426 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:16:56,426 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:16:56,427 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:16:56,427 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:16:56,431 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:16:56,431 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:16:56,431 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:16:56,432 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:16:56,802 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:16:56 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:16:56,941 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:16:56 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:16:57,195 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:16:57,569 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1529 ms
2018-04-28 17:16:59,632 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:16:59,651 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:16:59,789 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:17:00,058 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:17:00,059 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:17:00,062 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:17:12,923 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:17:12,924 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:17:13,079 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:18:45,507 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:18:45,587 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:18:45 CST 2018]; root of context hierarchy
2018-04-28 17:18:45,626 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:18:45,861 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:18:45,926 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:18:46,063 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:18:46,294 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:18:46,446 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:18:46,446 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:18:46,765 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:18:46,765 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:18:46,771 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:18:46,773 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:18:46,775 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:18:46,781 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:18:46,782 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:18:46,794 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:18:46,902 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1382 ms
2018-04-28 17:18:46,972 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:18:46,975 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:18:46 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:18:46,975 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:18:47,106 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:18:47,343 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:18:47,344 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:18:47,345 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:18:47,345 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:18:47,345 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:18:47,346 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:18:47,350 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:18:47,351 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:18:47,351 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:18:47,351 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:18:47,829 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:18:46 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:18:47,970 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:18:46 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:18:48,218 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:18:48,675 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1702 ms
2018-04-28 17:18:49,761 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:18:49,780 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:18:49,791 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:18:50,180 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:18:50,180 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:18:50,182 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:18:57,927 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:18:57,928 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:18:58,003 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:21:00,895 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:18:46 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:21:01,033 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:18:45 CST 2018]; root of context hierarchy
2018-04-28 17:21:19,690 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:21:19,766 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:21:19 CST 2018]; root of context hierarchy
2018-04-28 17:21:19,804 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:21:20,048 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:21:20,111 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:21:20,244 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:21:20,455 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:21:20,614 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:21:20,615 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:21:21,028 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:21:21,028 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:21:21,034 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:21:21,036 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:21:21,037 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:21:21,044 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:21:21,045 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:21:21,055 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:21:21,144 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1452 ms
2018-04-28 17:21:21,234 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:21:21,236 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:21:21 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:21:21,237 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:21:21,373 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:21:21,607 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:21:21,608 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:21:21,608 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:21:21,608 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:21:21,609 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:21:21,609 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:21:21,612 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:21:21,613 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:21:21,613 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:21:21,613 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:21:21,955 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:21:21 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:21:22,088 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:21:21 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:21:22,338 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:21:22,440 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1206 ms
2018-04-28 17:21:23,131 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:21:23,150 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:21:23,161 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:21:23,363 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:21:23,364 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:21:23,365 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:21:31,254 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:21:31,255 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:21:31,256 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:23:50,057 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:21:21 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:23:50,069 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:21:19 CST 2018]; root of context hierarchy
2018-04-28 17:23:59,597 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:23:59,643 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:23:59 CST 2018]; root of context hierarchy
2018-04-28 17:23:59,708 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:23:59,992 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:24:00,065 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:24:00,187 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:24:00,430 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:24:00,596 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:24:00,597 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:00,940 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:00,940 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:00,946 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:00,948 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:00,949 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:00,956 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:00,956 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:00,967 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:01,081 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1482 ms
2018-04-28 17:24:01,170 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:24:01,172 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:24:01 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:24:01,172 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:24:01,342 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:24:01,633 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:24:01,634 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:24:01,635 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:24:01,635 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:24:01,635 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:24:01,636 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:24:01,639 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:24:01,640 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:24:01,640 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:24:01,640 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:24:02,006 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:24:01 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:24:02,135 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:24:01 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:24:02,363 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:24:02,512 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1342 ms
2018-04-28 17:24:03,231 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:24:03,251 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:24:03,262 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:24:03,543 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:24:03,544 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:24:03,546 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:24:06,497 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:24:06,497 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:24:06,532 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:24:43,883 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:24:01 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:24:43,894 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:23:59 CST 2018]; root of context hierarchy
2018-04-28 17:24:51,179 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:24:51,221 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:24:51 CST 2018]; root of context hierarchy
2018-04-28 17:24:51,253 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:24:51,311 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:24:51,365 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:24:51,461 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:24:51,653 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:24:51,815 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:24:51,815 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:51,976 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:51,977 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:51,983 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:51,985 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:51,986 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:51,993 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:51,994 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:52,006 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:24:52,101 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 919 ms
2018-04-28 17:24:52,246 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:24:52,248 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:24:52 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:24:52,248 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:24:52,351 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:24:52,568 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:24:52,569 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:24:52,570 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:24:52,570 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:24:52,571 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:24:52,571 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:24:52,574 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:24:52,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:24:52,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:24:52,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:24:52,960 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:24:52 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:24:53,107 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:24:52 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:24:53,351 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:24:53,478 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1232 ms
2018-04-28 17:24:53,931 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:24:53,950 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:24:53,962 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:24:54,183 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:24:54,184 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:24:54,185 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:24:56,097 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:24:56,097 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:24:56,098 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:25:36,926 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:24:52 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:25:36,935 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:24:51 CST 2018]; root of context hierarchy
2018-04-28 17:27:19,637 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:27:19,683 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:27:19 CST 2018]; root of context hierarchy
2018-04-28 17:27:19,716 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:27:19,866 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:27:19,906 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:27:19,996 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:27:20,191 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:27:20,322 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:27:20,323 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:27:20,463 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:27:20,463 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:27:20,469 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:27:20,471 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:27:20,472 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:27:20,479 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:27:20,479 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:27:20,490 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:27:20,583 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 944 ms
2018-04-28 17:27:20,629 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:27:20,631 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:27:20 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:27:20,631 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:27:20,736 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:27:20,972 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:27:20,973 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:27:20,974 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:27:20,974 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:27:20,977 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:27:20,978 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:27:20,987 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:27:20,987 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:27:20,988 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:27:20,989 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:27:21,341 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:27:20 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:27:21,474 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:27:20 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:27:21,703 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:27:21,819 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1190 ms
2018-04-28 17:27:22,367 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:27:22,386 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:27:22,406 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:27:22,592 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:27:22,593 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:27:22,593 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:27:23,231 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:27:23,231 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:27:23,303 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:29:09,861 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:27:20 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:29:09,874 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:27:19 CST 2018]; root of context hierarchy
2018-04-28 17:29:16,574 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:29:16,616 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:29:16 CST 2018]; root of context hierarchy
2018-04-28 17:29:16,647 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:29:16,703 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:29:16,751 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:29:16,850 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:29:17,062 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:29:17,219 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:29:17,219 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:29:17,406 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:29:17,407 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:29:17,413 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:29:17,415 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:29:17,416 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:29:17,422 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:29:17,423 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:29:17,434 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:29:17,522 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 946 ms
2018-04-28 17:29:17,668 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:29:17,671 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:29:17 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:29:17,672 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:29:17,782 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:29:18,013 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:29:18,015 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:29:18,015 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:29:18,016 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:29:18,016 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:29:18,017 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:29:18,021 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:29:18,021 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:29:18,021 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:29:18,022 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:29:18,437 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:29:17 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:29:18,583 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:29:17 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:29:18,835 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:29:18,937 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1268 ms
2018-04-28 17:29:19,383 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:29:19,403 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:29:19,415 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:29:19,621 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:29:19,621 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:29:19,622 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:29:20,207 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:29:20,208 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:29:20,209 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:30:09,607 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:29:17 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:30:09,617 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:29:16 CST 2018]; root of context hierarchy
2018-04-28 17:30:17,458 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:30:17,501 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:30:17 CST 2018]; root of context hierarchy
2018-04-28 17:30:17,537 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:30:17,690 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:30:17,731 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:30:17,841 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:30:18,011 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:30:18,169 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:30:18,170 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:30:18,323 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:30:18,323 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:30:18,330 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:30:18,332 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:30:18,334 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:30:18,341 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:30:18,342 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:30:18,354 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:30:18,457 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 997 ms
2018-04-28 17:30:18,519 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:30:18,522 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:30:18 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:30:18,522 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:30:18,624 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:30:18,858 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:30:18,859 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:30:18,859 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:30:18,860 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:30:18,860 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:30:18,860 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:30:18,864 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:30:18,865 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:30:18,865 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:30:18,865 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:30:19,202 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:30:18 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:30:19,333 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:30:18 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:30:19,560 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:30:19,698 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1178 ms
2018-04-28 17:30:20,670 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:30:20,689 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:30:20,701 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:30:20,909 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:30:20,910 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:30:20,911 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:30:24,073 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:30:24,073 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:30:24,074 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:32:44,122 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:30:18 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:32:44,146 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:30:17 CST 2018]; root of context hierarchy
2018-04-28 17:32:53,829 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:32:53,873 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:32:53 CST 2018]; root of context hierarchy
2018-04-28 17:32:53,906 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:32:54,062 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:32:54,100 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:32:54,197 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:32:54,383 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:32:54,551 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:32:54,552 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:32:54,728 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:32:54,728 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:32:54,735 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:32:54,737 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:32:54,738 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:32:54,746 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:32:54,747 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:32:54,760 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:32:54,858 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1026 ms
2018-04-28 17:32:54,916 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:32:54,918 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:32:54 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:32:54,918 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:32:55,048 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:32:55,291 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:32:55,292 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:32:55,292 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:32:55,293 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:32:55,293 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:32:55,293 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:32:55,298 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:32:55,298 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:32:55,298 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:32:55,299 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:32:55,666 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:32:54 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:32:55,796 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:32:54 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:32:56,025 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:32:56,142 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1226 ms
2018-04-28 17:32:56,733 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:32:56,751 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:32:56,772 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:32:56,971 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:32:56,972 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:32:56,973 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:32:59,758 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:32:59,758 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:32:59,759 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:33:53,976 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:32:54 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:33:53,987 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:32:53 CST 2018]; root of context hierarchy
2018-04-28 17:48:16,993 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:48:17,036 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:48:17 CST 2018]; root of context hierarchy
2018-04-28 17:48:17,074 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:48:17,140 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:48:17,275 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:48:17,442 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:48:17,688 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:48:17,875 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:48:17,875 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:48:18,804 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:48:18,804 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:48:18,810 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:48:18,812 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:48:18,813 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:48:18,819 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:48:18,820 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:48:18,831 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:48:19,071 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 2076 ms
2018-04-28 17:48:19,834 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:48:19,836 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:48:19 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:48:19,836 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:48:19,997 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:48:20,243 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:48:20,245 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:48:20,246 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:48:20,247 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:48:20,249 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:48:20,249 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:48:20,256 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:48:20,257 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-28 17:48:20,258 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:48:20,258 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:48:20,259 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:48:20,640 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:48:19 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:48:20,770 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:48:19 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:48:21,008 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:48:21,131 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1297 ms
2018-04-28 17:48:21,991 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:48:22,031 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:48:22,043 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:48:22,263 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:48:22,264 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:48:22,274 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:48:26,698 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:48:26,698 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:48:26,700 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:48:44,321 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:48:19 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:48:44,380 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:48:17 CST 2018]; root of context hierarchy
2018-04-28 17:51:51,864 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:51:51,914 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:51:51 CST 2018]; root of context hierarchy
2018-04-28 17:51:51,986 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:51:52,247 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:51:52,287 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:51:52,406 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:51:52,616 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:51:52,773 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:51:52,774 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:51:52,950 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:51:52,950 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:51:52,956 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:51:52,959 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:51:52,960 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:51:52,966 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:51:52,967 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:51:52,978 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:51:53,076 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1210 ms
2018-04-28 17:51:53,123 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:51:53,125 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:51:53 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:51:53,126 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:51:53,231 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:51:53,484 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:51:53,486 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:51:53,487 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:51:53,487 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:51:53,489 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:51:53,490 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:51:53,497 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:51:53,498 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-28 17:51:53,499 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:51:53,499 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:51:53,500 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:51:53,856 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:51:53 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:51:53,986 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:51:53 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:51:54,212 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:51:54,369 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1246 ms
2018-04-28 17:51:54,944 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:51:54,967 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:51:54,978 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:51:55,215 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:51:55,215 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:51:55,216 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:52:00,173 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:52:00,174 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:52:00,175 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:53:33,398 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:51:53 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:53:33,480 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:51:51 CST 2018]; root of context hierarchy
2018-04-28 17:53:42,855 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 17:53:42,894 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 17:53:42 CST 2018]; root of context hierarchy
2018-04-28 17:53:42,951 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 17:53:43,179 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 17:53:43,244 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 17:53:43,366 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 17:53:43,553 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:53:43,776 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 17:53:43,777 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:53:43,943 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:53:43,944 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:53:43,951 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:53:43,953 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:53:43,955 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:53:43,962 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:53:43,962 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:53:43,976 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 17:53:44,118 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1261 ms
2018-04-28 17:53:44,206 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 17:53:44,210 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:53:44 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:53:44,211 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 17:53:44,309 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 17:53:44,546 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 17:53:44,547 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 17:53:44,548 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:53:44,548 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 17:53:44,549 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 17:53:44,549 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 17:53:44,554 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 17:53:44,554 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-28 17:53:44,555 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 17:53:44,555 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 17:53:44,556 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 17:53:44,919 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:53:44 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:53:45,049 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:53:44 CST 2018]; parent: Root WebApplicationContext
2018-04-28 17:53:45,301 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 17:53:45,462 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1255 ms
2018-04-28 17:53:46,017 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:53:46,061 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:53:46,079 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:53:46,573 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:53:46,574 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:53:46,575 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:53:50,202 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 17:53:50,202 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 17:53:50,273 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 17:54:52,315 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 17:54:52,316 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: null
2018-04-28 17:54:52,551 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 0
2018-04-28 17:54:52,579 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-28 17:54:52,580 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: test@test.com(String)
2018-04-28 17:54:53,001 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-28 20:05:16,109 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 17:53:44 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:05:16,113 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 17:53:42 CST 2018]; root of context hierarchy
2018-04-28 20:05:36,400 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 20:05:36,467 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 20:05:36 CST 2018]; root of context hierarchy
2018-04-28 20:05:36,505 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 20:05:36,724 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 20:05:36,785 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 20:05:36,916 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 20:05:37,131 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 20:05:37,299 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 20:05:37,299 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:05:37,617 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:05:37,618 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:05:37,624 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:05:37,626 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:05:37,627 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:05:37,634 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:05:37,634 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:05:37,645 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:05:37,734 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1332 ms
2018-04-28 20:05:37,820 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 20:05:37,822 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:05:37 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:05:37,823 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 20:05:37,924 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 20:05:38,132 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 20:05:38,133 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 20:05:38,134 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 20:05:38,134 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 20:05:38,134 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 20:05:38,135 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 20:05:38,138 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 20:05:38,139 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-28 20:05:38,139 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 20:05:38,140 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 20:05:38,140 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 20:05:38,484 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:05:37 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:05:38,611 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:05:37 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:05:38,849 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 20:05:38,948 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1128 ms
2018-04-28 20:05:39,829 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:05:39,862 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:05:39,973 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:05:40,318 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:05:40,319 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:05:40,321 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:05:49,134 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:05:49,134 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:05:49,166 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:06:17,737 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 20:06:17,738 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-04-28 20:06:17,967 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-04-28 20:06:17,974 INFO[com.summer.blog.controller.UserController:61] - admin: login
2018-04-28 20:06:18,401 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:06:18,402 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:06:18,403 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:06:18,489 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-04-28 20:06:18,489 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-04-28 20:06:19,232 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-04-28 20:06:19,321 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-04-28 20:06:19,322 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-04-28 20:06:19,593 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-04-28 20:06:33,885 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:06:33,886 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:06:33,887 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:06:51,668 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 20:06:51,669 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: test(String)
2018-04-28 20:06:51,683 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 0
2018-04-28 20:06:51,726 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-28 20:06:51,727 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: test@test.com(String)
2018-04-28 20:06:51,728 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-28 20:11:10,405 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:05:37 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:11:10,477 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 20:05:36 CST 2018]; root of context hierarchy
2018-04-28 20:11:30,742 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 20:11:30,832 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 20:11:30 CST 2018]; root of context hierarchy
2018-04-28 20:11:30,882 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 20:11:31,191 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 20:11:31,255 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 20:11:31,384 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 20:11:31,581 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 20:11:31,740 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 20:11:31,741 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:11:32,075 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:11:32,076 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:11:32,082 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:11:32,084 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:11:32,085 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:11:32,091 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:11:32,092 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:11:32,103 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:11:32,191 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1447 ms
2018-04-28 20:11:32,275 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 20:11:32,277 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:11:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:11:32,278 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 20:11:32,409 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 20:11:32,628 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 20:11:32,630 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 20:11:32,631 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 20:11:32,631 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 20:11:32,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 20:11:32,632 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 20:11:32,637 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 20:11:32,638 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-28 20:11:32,638 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 20:11:32,638 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 20:11:32,639 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 20:11:33,022 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:11:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:11:33,152 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:11:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:11:33,408 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 20:11:33,896 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1620 ms
2018-04-28 20:11:35,339 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:11:35,377 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:11:35,388 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:11:35,661 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:11:35,662 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:11:35,664 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:11:51,035 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:11:51,036 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:11:51,037 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:12:39,907 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 20:12:39,908 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: test(String)
2018-04-28 20:12:40,257 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 0
2018-04-28 20:12:40,321 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-28 20:12:40,322 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: test@test.com(String)
2018-04-28 20:12:40,361 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-28 20:14:44,441 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:11:32 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:14:44,469 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 20:11:30 CST 2018]; root of context hierarchy
2018-04-28 20:15:28,846 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 20:15:28,910 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 20:15:28 CST 2018]; root of context hierarchy
2018-04-28 20:15:28,982 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 20:15:29,275 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 20:15:29,338 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 20:15:29,475 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 20:15:29,682 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 20:15:29,844 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 20:15:29,845 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:15:30,157 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:15:30,158 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:15:30,164 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:15:30,166 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:15:30,168 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:15:30,174 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:15:30,175 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:15:30,188 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:15:30,284 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1436 ms
2018-04-28 20:15:30,368 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 20:15:30,370 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:15:30 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:15:30,371 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 20:15:30,519 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 20:15:30,754 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 20:15:30,755 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 20:15:30,755 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 20:15:30,756 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 20:15:30,756 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 20:15:30,756 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 20:15:30,760 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 20:15:30,761 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-28 20:15:30,761 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 20:15:30,762 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 20:15:30,762 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 20:15:31,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:15:30 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:15:31,292 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:15:30 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:15:31,516 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 20:15:31,711 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1343 ms
2018-04-28 20:15:32,596 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:15:32,621 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:15:32,642 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:15:33,323 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:15:33,325 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:15:33,326 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:15:45,691 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:15:45,691 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:15:45,715 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:16:13,887 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 20:16:13,888 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: test(String)
2018-04-28 20:16:14,022 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 0
2018-04-28 20:16:14,056 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-28 20:16:14,057 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: test@test.com(String)
2018-04-28 20:16:14,057 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-28 20:16:14,101 DEBUG[com.summer.blog.dao.UserDao.createUser:159] - ==>  Preparing: INSERT INTO user_info(username, password, email) VALUES (?, ?, ?) 
2018-04-28 20:16:43,744 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 20:16:43,745 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: test(String)
2018-04-28 20:16:43,821 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 0
2018-04-28 20:16:43,856 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-28 20:16:43,857 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: test@test.com(String)
2018-04-28 20:16:43,858 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-28 20:16:43,879 DEBUG[com.summer.blog.dao.UserDao.createUser:159] - ==>  Preparing: INSERT INTO user_info(username, password, email) VALUES (?, ?, ?) 
2018-04-28 20:17:04,028 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:15:30 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:17:04,056 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 20:15:28 CST 2018]; root of context hierarchy
2018-04-28 20:17:24,975 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-04-28 20:17:25,040 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Sat Apr 28 20:17:25 CST 2018]; root of context hierarchy
2018-04-28 20:17:25,079 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-04-28 20:17:25,315 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-04-28 20:17:25,379 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-04-28 20:17:25,506 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-04-28 20:17:25,730 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 20:17:25,899 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-04-28 20:17:25,899 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:17:26,211 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:17:26,212 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:17:26,217 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:17:26,219 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:17:26,220 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:17:26,227 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:17:26,227 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:17:26,239 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-04-28 20:17:26,333 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1356 ms
2018-04-28 20:17:26,429 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-04-28 20:17:26,432 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:17:26 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:17:26,432 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-04-28 20:17:26,574 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-04-28 20:17:26,789 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-04-28 20:17:26,790 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-04-28 20:17:26,791 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String)
2018-04-28 20:17:26,791 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 20:17:26,792 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-04-28 20:17:26,792 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/write.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite()
2018-04-28 20:17:26,797 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-04-28 20:17:26,797 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-04-28 20:17:26,797 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-04-28 20:17:26,798 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-04-28 20:17:26,798 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/test.do]}" onto public java.lang.String com.summer.blog.controller.UserController.test()
2018-04-28 20:17:27,182 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:17:26 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:17:27,309 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:17:26 CST 2018]; parent: Root WebApplicationContext
2018-04-28 20:17:27,573 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-04-28 20:17:27,782 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1353 ms
2018-04-28 20:17:28,468 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:17:28,486 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:17:28,496 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:17:28,755 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:17:28,756 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:17:28,756 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:17:38,561 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-04-28 20:17:38,635 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-04-28 20:17:38,637 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-04-28 20:18:05,130 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-04-28 20:18:05,131 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: test(String)
2018-04-28 20:18:05,180 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 0
2018-04-28 20:18:05,327 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==>  Preparing: SELECT * FROM user_info WHERE email = ? 
2018-04-28 20:18:05,328 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - ==> Parameters: test@test.com(String)
2018-04-28 20:18:05,358 DEBUG[com.summer.blog.dao.UserDao.getUserByEmail:159] - <==      Total: 0
2018-04-28 20:18:05,382 DEBUG[com.summer.blog.dao.UserDao.createUser:159] - ==>  Preparing: INSERT INTO user_info(username, password, email) VALUES (?, ?, ?) 
2018-04-28 20:18:05,383 DEBUG[com.summer.blog.dao.UserDao.createUser:159] - ==> Parameters: test(String), test@test.com(String), 123(String)
2018-04-28 20:18:05,908 DEBUG[com.summer.blog.dao.UserDao.createUser:159] - <==    Updates: 1
2018-04-28 21:55:27,614 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Sat Apr 28 20:17:26 CST 2018]; parent: Root WebApplicationContext
2018-04-28 21:55:31,151 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Sat Apr 28 20:17:25 CST 2018]; root of context hierarchy
