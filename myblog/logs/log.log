2018-05-04 13:58:15,127 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 13:58:15,172 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 13:58:15 CST 2018]; root of context hierarchy
2018-05-04 13:58:15,233 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 13:58:15,459 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 13:58:15,498 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 13:58:15,592 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 13:58:15,842 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 13:58:15,995 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 13:58:15,996 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 13:58:16,311 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 13:58:16,311 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 13:58:16,317 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 13:58:16,319 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 13:58:16,320 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 13:58:16,327 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 13:58:16,327 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 13:58:16,339 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 13:58:16,439 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1310 ms
2018-05-04 13:58:16,523 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 13:58:16,526 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 13:58:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 13:58:16,526 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 13:58:16,645 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 13:58:16,858 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 13:58:16,860 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 13:58:16,860 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 13:58:16,860 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 13:58:16,861 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 13:58:16,861 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 13:58:16,861 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 13:58:16,862 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 13:58:16,862 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 13:58:16,862 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 13:58:16,863 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 13:58:16,863 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 13:58:16,869 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 13:58:16,869 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 13:58:16,870 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 13:58:16,870 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 13:58:16,870 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 13:58:16,871 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 13:58:16,871 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 13:58:16,871 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 13:58:17,237 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 13:58:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 13:58:17,373 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 13:58:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 13:58:17,743 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 13:58:17,912 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1387 ms
2018-05-04 13:58:19,508 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 13:58:19,579 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 13:58:19,983 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-04 13:58:20,220 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 13:58:20,220 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 13:58:20,223 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-04 13:58:44,671 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 13:58:44,672 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 13:58:44,674 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-04 13:58:56,339 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 13:58:56,339 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 13:58:56,377 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 13:58:56,383 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 13:58:56,383 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 13:58:56,458 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 13:59:51,605 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 13:59:51,876 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 13:59:52,073 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 13:59:55,774 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:00:04,880 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:00:04,881 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:00:04,914 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-04 14:00:06,076 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:00:06,076 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:00:06,250 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:00:06,303 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:00:06,304 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:00:06,402 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:00:22,409 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:00:22,441 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:00:22,509 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:00:22,535 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:00:22,536 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:00:22,579 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:00:56,907 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:00:56,907 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:00:57,159 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:00:57,233 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:00:57,234 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:00:57,255 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:00:57,547 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:00:57,548 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:00:57,550 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:00:57,574 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:00:57,575 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:00:57,577 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:14:39,981 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 13:58:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:14:40,169 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 13:58:15 CST 2018]; root of context hierarchy
2018-05-04 14:29:54,852 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:29:54,938 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:29:54 CST 2018]; root of context hierarchy
2018-05-04 14:29:54,990 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:29:55,225 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:29:55,284 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:29:55,383 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:29:55,606 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:29:55,795 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:29:55,795 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:29:56,152 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:29:56,152 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:29:56,159 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:29:56,161 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:29:56,162 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:29:56,169 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:29:56,170 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:29:56,181 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:29:56,335 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1468 ms
2018-05-04 14:29:56,431 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:29:56,433 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:29:56 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:29:56,433 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:29:56,606 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:29:56,885 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:29:56,887 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:29:56,887 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:29:56,888 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:29:56,888 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:29:56,889 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:29:56,889 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:29:56,890 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:29:56,891 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:29:56,891 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:29:56,892 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:29:56,892 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:29:56,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:29:56,898 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:29:56,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:29:56,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:29:56,899 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:29:56,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:29:56,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:29:56,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:29:57,364 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:29:56 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:29:57,513 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:29:56 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:29:57,789 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:29:57,983 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1552 ms
2018-05-04 14:30:00,093 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:30:00,134 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:30:00,245 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-04 14:30:00,645 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:30:00,646 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:30:00,652 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-04 14:30:43,418 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:30:43,479 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:30:43,638 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-04 14:30:52,941 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:30:52,942 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:30:52,946 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:30:53,093 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:30:53,094 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:30:53,125 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:31:19,229 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:31:19,245 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:31:19,284 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:31:19,338 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:31:20,381 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:31:20,381 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:31:20,430 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 5
2018-05-04 14:31:20,727 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:31:20,728 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:31:20,866 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:31:20,965 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:31:20,966 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:31:20,968 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:31:23,736 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:31:23,737 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:31:23,742 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:31:23,750 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:31:23,751 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:31:23,771 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:31:25,034 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:31:25,035 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:31:25,036 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:31:25,052 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:31:25,052 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:31:25,054 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:31:25,157 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:31:25,157 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:31:25,158 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:31:25,194 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:31:25,195 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:31:25,196 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:32:00,114 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-05-04 14:32:00,258 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: 1111111111111111111111(String), 2222(String), 2018-05-04 14-31-59(String), 1(Integer), fsdfsdfsdfds(String)
2018-05-04 14:32:00,960 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-05-04 14:33:25,067 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:29:56 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:33:25,139 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:29:54 CST 2018]; root of context hierarchy
2018-05-04 14:33:46,611 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:33:46,682 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:33:46 CST 2018]; root of context hierarchy
2018-05-04 14:33:46,726 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:33:46,969 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:33:47,027 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:33:47,134 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:33:47,350 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:33:47,508 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:33:47,508 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:33:47,827 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:33:47,828 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:33:47,834 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:33:47,836 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:33:47,837 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:33:47,843 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:33:47,844 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:33:47,855 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:33:47,961 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1348 ms
2018-05-04 14:33:48,038 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:33:48,040 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:33:48 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:33:48,041 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:33:48,171 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:33:48,425 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:33:48,427 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:33:48,427 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:33:48,427 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:33:48,428 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:33:48,428 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:33:48,428 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:33:48,429 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:33:48,429 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:33:48,429 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:33:48,430 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:33:48,431 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:33:48,436 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:33:48,436 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:33:48,437 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:33:48,437 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:33:48,437 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:33:48,438 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:33:48,438 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:33:48,438 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:33:48,795 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:33:48 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:33:48,929 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:33:48 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:33:49,178 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:33:49,653 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1615 ms
2018-05-04 14:33:51,094 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:33:51,114 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:33:51,251 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:33:51,597 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:33:51,597 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:33:51,604 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:34:01,889 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:34:01,890 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:34:01,894 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:34:08,037 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:34:08,037 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:34:08,039 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:34:08,052 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:34:08,052 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:34:08,076 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:34:20,428 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:34:20,429 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:34:20,602 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:34:20,645 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:34:20,927 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:34:20,928 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:34:20,930 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:34:20,969 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:34:20,970 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:34:21,053 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:34:21,063 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:34:21,064 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:34:21,066 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:34:21,450 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:34:21,451 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:34:21,463 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:34:21,481 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:34:21,482 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:34:21,486 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:34:23,497 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:34:23,498 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:34:23,500 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:34:23,518 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:34:23,519 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:34:23,521 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:34:23,604 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:34:23,605 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:34:23,606 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:34:23,620 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:34:23,620 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:34:23,622 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:34:31,788 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-04 14:35:07,625 WARN[org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver:334] - Failed to bind request element: org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'int'; nested exception is java.lang.NumberFormatException: For input string: ""
2018-05-04 14:35:14,078 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values ( (?, ?), (?, ?), (?, ?), (?, ?), ) 
2018-05-04 14:35:40,138 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:33:48 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:35:40,214 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:33:46 CST 2018]; root of context hierarchy
2018-05-04 14:35:57,197 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:35:57,271 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:35:57 CST 2018]; root of context hierarchy
2018-05-04 14:35:57,314 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:35:57,523 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:35:57,564 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:35:57,672 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:35:57,939 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:35:58,124 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:35:58,124 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:35:58,475 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:35:58,476 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:35:58,482 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:35:58,484 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:35:58,485 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:35:58,492 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:35:58,492 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:35:58,504 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:35:58,608 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1408 ms
2018-05-04 14:35:58,710 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:35:58,712 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:35:58 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:35:58,713 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:35:58,877 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:35:59,187 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:35:59,189 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:35:59,189 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:35:59,190 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:35:59,190 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:35:59,190 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:35:59,191 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:35:59,191 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:35:59,192 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:35:59,192 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:35:59,193 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:35:59,193 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:35:59,199 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:35:59,199 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:35:59,200 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:35:59,200 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:35:59,200 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:35:59,201 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:35:59,201 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:35:59,201 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:35:59,564 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:35:58 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:35:59,696 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:35:58 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:36:00,044 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:36:00,236 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1526 ms
2018-05-04 14:36:01,853 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:36:01,903 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:36:01,919 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:36:02,261 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:36:02,262 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:36:02,268 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:36:12,395 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:36:12,396 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:36:12,402 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:36:54,743 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:36:54,743 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:36:55,006 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:36:55,475 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:36:55,476 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:36:55,501 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:36:55,547 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:36:55,548 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:36:55,554 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:37:14,240 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:37:14,241 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:37:14,314 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:37:14,366 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:37:14,521 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:37:14,521 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:37:14,526 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:37:14,555 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:37:14,555 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:37:14,640 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:37:14,704 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:37:14,705 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:37:14,781 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:37:15,161 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:37:15,162 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:37:15,165 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:37:15,177 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:37:15,177 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:37:15,181 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:37:20,222 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:37:20,223 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:37:20,240 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:37:20,268 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:37:20,269 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:37:20,271 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:37:20,368 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:37:20,369 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:37:20,370 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:37:20,384 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:37:20,385 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:37:20,389 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:37:29,133 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values ( (?, ?), (?, ?), ) 
2018-05-04 14:38:12,267 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:35:58 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:38:12,336 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:35:57 CST 2018]; root of context hierarchy
2018-05-04 14:38:36,316 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:38:36,420 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:38:36 CST 2018]; root of context hierarchy
2018-05-04 14:38:36,501 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:38:36,810 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:38:36,847 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:38:36,938 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:38:37,218 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:38:37,364 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:38:37,364 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:38:37,666 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:38:37,666 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:38:37,673 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:38:37,675 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:38:37,676 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:38:37,683 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:38:37,684 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:38:37,696 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:38:37,802 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1484 ms
2018-05-04 14:38:37,886 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:38:37,888 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:38:37 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:38:37,888 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:38:38,040 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:38:38,249 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:38:38,250 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:38:38,251 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:38:38,251 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:38:38,252 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:38:38,252 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:38:38,253 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:38:38,253 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:38:38,253 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:38:38,254 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:38:38,254 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:38:38,255 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:38:38,260 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:38:38,261 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:38:38,261 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:38:38,262 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:38:38,262 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:38:38,262 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:38:38,263 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:38:38,263 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:38:38,628 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:38:37 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:38:38,763 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:38:37 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:38:39,024 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:38:39,201 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1315 ms
2018-05-04 14:38:39,951 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:38:39,980 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:38:39,999 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:38:40,293 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:38:40,294 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:38:40,296 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:38:49,165 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:38:49,166 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:38:49,171 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:38:51,056 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:38:51,108 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:38:51,110 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:38:51,195 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:38:51,196 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:38:51,202 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:39:18,088 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:39:18,089 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:39:18,111 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:39:18,117 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:39:18,286 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:39:18,286 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:39:18,288 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:39:18,298 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:39:18,299 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:39:18,300 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:39:18,308 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:39:18,309 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:39:18,310 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:39:18,697 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:39:18,698 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:39:18,701 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:39:18,734 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:39:18,735 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:39:18,739 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:39:21,047 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:39:21,048 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:39:21,049 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:39:21,166 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:39:21,167 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:39:21,168 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:39:21,240 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:39:21,241 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:39:21,242 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:39:21,249 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:39:21,249 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:39:21,251 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:39:28,190 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values ( (?, ?), (?, ?), ) 
2018-05-04 14:39:28,192 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==> Parameters: 20(Integer), 1(Integer), 20(Integer), 2(Integer)
2018-05-04 14:39:28,697 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-05-04 14:39:28,736 INFO[org.springframework.jdbc.support.SQLErrorCodesFactory:128] - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-05-04 14:40:11,489 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:38:37 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:40:11,574 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:38:36 CST 2018]; root of context hierarchy
2018-05-04 14:40:22,189 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:40:22,236 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:40:22 CST 2018]; root of context hierarchy
2018-05-04 14:40:22,272 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:40:22,550 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:40:22,614 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:40:22,727 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:40:22,929 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:40:23,073 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:40:23,073 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:40:23,311 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:40:23,312 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:40:23,318 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:40:23,320 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:40:23,321 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:40:23,327 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:40:23,328 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:40:23,340 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:40:23,443 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1252 ms
2018-05-04 14:40:23,499 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:40:23,501 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:40:23 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:40:23,501 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:40:23,654 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:40:23,889 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:40:23,890 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:40:23,891 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:40:23,891 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:40:23,892 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:40:23,892 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:40:23,892 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:40:23,892 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:40:23,893 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:40:23,893 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:40:23,894 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:40:23,894 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:40:23,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:40:23,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:40:23,900 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:40:23,901 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:40:23,901 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:40:23,901 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:40:23,901 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:40:23,902 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:40:24,262 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:40:23 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:40:24,392 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:40:23 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:40:24,617 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:40:24,779 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1280 ms
2018-05-04 14:40:25,890 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:40:25,909 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:40:25,926 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:40:26,148 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:40:26,149 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:40:26,152 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:40:29,847 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:40:29,847 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:40:30,219 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:40:30,713 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:40:30,714 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:40:30,716 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:40:30,746 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:40:30,747 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:40:30,754 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:40:52,603 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:40:52,604 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:40:52,614 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:40:52,621 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:40:52,694 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:40:52,695 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:40:52,697 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:40:52,706 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:40:52,707 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:40:52,713 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:40:52,727 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:40:52,728 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:40:52,729 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:40:52,900 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:40:52,901 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:40:52,903 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:40:52,910 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:40:52,911 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:40:52,931 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:40:56,202 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:40:56,203 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:40:56,204 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:40:56,209 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:40:56,210 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:40:56,212 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:40:56,283 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:40:56,284 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:40:56,285 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:40:56,291 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:40:56,291 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:40:56,293 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:41:03,761 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values (?, ?), (?, ?), 
2018-05-04 14:41:03,762 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==> Parameters: 20(Integer), 2(Integer), 20(Integer), 3(Integer)
2018-05-04 14:41:03,790 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-05-04 14:41:03,811 INFO[org.springframework.jdbc.support.SQLErrorCodesFactory:128] - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-05-04 14:43:23,226 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values (?, ?), (?, ?), 
2018-05-04 14:43:23,227 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==> Parameters: 20(Integer), 2(Integer), 20(Integer), 3(Integer)
2018-05-04 14:44:15,874 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:40:23 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:44:15,889 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:40:22 CST 2018]; root of context hierarchy
2018-05-04 14:46:42,049 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:46:42,091 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:46:42 CST 2018]; root of context hierarchy
2018-05-04 14:46:42,124 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:46:42,184 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:46:42,223 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:46:42,323 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:46:42,504 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:46:42,708 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:46:42,708 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:46:42,875 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:46:42,876 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:46:42,882 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:46:42,885 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:46:42,887 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:46:42,894 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:46:42,895 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:46:42,906 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:46:43,075 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1024 ms
2018-05-04 14:46:43,142 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:46:43,144 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:46:43 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:46:43,145 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:46:43,254 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:46:43,477 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:46:43,478 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:46:43,479 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:46:43,479 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:46:43,479 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:46:43,480 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:46:43,480 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:46:43,481 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:46:43,481 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:46:43,481 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:46:43,482 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:46:43,482 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:46:43,487 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:46:43,488 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:46:43,488 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:46:43,489 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:46:43,489 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:46:43,489 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:46:43,490 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:46:43,490 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:46:43,853 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:46:43 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:46:43,982 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:46:43 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:46:44,205 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:46:44,334 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1191 ms
2018-05-04 14:46:45,182 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:46:45,201 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:46:45,218 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:46:45,471 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:46:45,472 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:46:45,475 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:46:48,806 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:46:48,807 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:46:48,826 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:46:49,251 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:46:49,251 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:46:49,253 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:46:49,277 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:46:49,277 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:46:49,294 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:47:23,951 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:47:23,952 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:47:23,954 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:47:23,961 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:47:24,022 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:47:24,022 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:47:24,027 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:47:24,044 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:47:24,044 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:47:24,047 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:47:24,058 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:47:24,059 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:47:24,061 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:47:24,241 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:47:24,242 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:47:24,244 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:47:24,249 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:47:24,249 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:47:24,252 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:47:26,152 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:47:26,153 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:47:26,155 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:47:26,160 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:47:26,160 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:47:26,162 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:47:26,207 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:47:26,208 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:47:26,209 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:47:26,222 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:47:26,223 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:47:26,224 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:47:32,336 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values ( ? ? , ? ? ) 
2018-05-04 14:47:32,338 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==> Parameters: 20(Integer), 2(Integer), 20(Integer), 3(Integer)
2018-05-04 14:47:32,483 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-05-04 14:47:32,509 INFO[org.springframework.jdbc.support.SQLErrorCodesFactory:128] - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-05-04 14:48:01,837 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:46:43 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:48:01,854 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:46:42 CST 2018]; root of context hierarchy
2018-05-04 14:48:18,719 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:48:18,799 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:48:18 CST 2018]; root of context hierarchy
2018-05-04 14:48:18,844 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:48:19,129 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:48:19,167 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:48:19,258 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:48:19,510 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:48:19,665 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:48:19,665 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:48:19,967 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:48:19,968 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:48:19,974 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:48:19,976 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:48:19,977 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:48:19,985 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:48:19,985 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:48:19,997 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:48:20,129 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1407 ms
2018-05-04 14:48:20,177 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:48:20,179 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:48:20 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:48:20,180 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:48:20,291 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:48:20,542 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:48:20,543 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:48:20,543 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:48:20,544 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:48:20,544 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:48:20,544 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:48:20,545 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:48:20,545 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:48:20,545 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:48:20,546 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:48:20,546 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:48:20,547 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:48:20,552 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:48:20,553 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:48:20,553 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:48:20,553 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:48:20,554 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:48:20,554 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:48:20,555 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:48:20,555 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:48:20,907 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:48:20 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:48:21,044 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:48:20 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:48:21,267 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:48:21,434 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1257 ms
2018-05-04 14:48:21,975 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:48:21,995 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:48:22,031 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:48:22,260 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:48:22,261 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:48:22,271 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:48:25,488 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:48:25,489 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:48:25,494 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:48:26,151 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:48:26,152 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:48:26,155 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:48:26,168 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:48:26,169 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:48:26,173 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:48:33,980 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:48:33,981 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:48:33,985 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:48:33,989 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:48:34,046 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:48:34,046 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:48:34,057 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:48:34,066 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:48:34,066 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:48:34,068 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:48:34,074 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:48:34,075 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:48:34,085 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:48:34,253 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:48:34,253 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:48:34,256 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:48:34,260 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:48:34,261 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:48:34,263 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:48:37,935 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:48:37,935 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:48:37,945 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:48:37,960 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:48:37,960 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:48:37,962 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:48:38,003 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:48:38,004 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:48:38,005 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:48:38,018 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:48:38,019 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:48:38,022 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:48:45,364 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values (? ?) , (? ?) 
2018-05-04 14:48:45,366 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==> Parameters: 20(Integer), 2(Integer), 20(Integer), 3(Integer)
2018-05-04 14:48:45,384 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-05-04 14:48:45,545 INFO[org.springframework.jdbc.support.SQLErrorCodesFactory:128] - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-05-04 14:49:32,187 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:48:20 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:49:32,202 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:48:18 CST 2018]; root of context hierarchy
2018-05-04 14:49:38,351 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:49:38,395 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:49:38 CST 2018]; root of context hierarchy
2018-05-04 14:49:38,431 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:49:38,513 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:49:38,550 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:49:38,655 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:49:38,852 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:49:39,057 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:49:39,058 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:49:39,225 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:49:39,226 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:49:39,232 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:49:39,234 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:49:39,235 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:49:39,244 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:49:39,245 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:49:39,258 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:49:39,428 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1075 ms
2018-05-04 14:49:39,509 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:49:39,511 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:49:39 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:49:39,511 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:49:39,624 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:49:39,853 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:49:39,855 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:49:39,855 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:49:39,855 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:49:39,856 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:49:39,856 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:49:39,856 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:49:39,857 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:49:39,857 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:49:39,858 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:49:39,858 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:49:39,859 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:49:39,864 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:49:39,865 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:49:39,865 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:49:39,866 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:49:39,866 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:49:39,867 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:49:39,867 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:49:39,867 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:49:40,238 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:49:39 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:49:40,374 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:49:39 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:49:40,613 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:49:40,771 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1262 ms
2018-05-04 14:49:41,332 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:49:41,350 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:49:41,386 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:49:41,675 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:49:41,676 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:49:41,678 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:49:42,667 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:49:42,667 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:49:42,679 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:49:42,972 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:49:42,973 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:49:42,980 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:49:43,004 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:49:43,005 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:49:43,012 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:50:07,319 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:50:07,320 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:50:07,335 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:50:07,342 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:50:07,533 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:50:07,534 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:50:07,539 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:50:07,560 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:50:07,561 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:50:07,563 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:50:07,570 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:50:07,571 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:50:07,572 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:50:07,994 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:50:07,995 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:50:07,997 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:50:08,020 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:50:08,021 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:50:08,024 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:50:09,806 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:50:09,806 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:50:09,808 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:50:09,815 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:50:09,815 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:50:09,816 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:50:09,899 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:50:09,900 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:50:09,901 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:50:09,906 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:50:09,906 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:50:09,908 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:50:17,952 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values (?, ?) , (?, ?) 
2018-05-04 14:50:17,954 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==> Parameters: 20(Integer), 2(Integer), 20(Integer), 3(Integer)
2018-05-04 14:50:18,181 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - <==    Updates: 2
2018-05-04 14:50:45,913 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:49:39 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:50:45,978 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:49:38 CST 2018]; root of context hierarchy
2018-05-04 14:51:25,933 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:51:25,976 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:51:25 CST 2018]; root of context hierarchy
2018-05-04 14:51:26,038 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:51:26,274 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:51:26,317 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:51:26,419 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:51:26,680 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:51:26,836 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:51:26,836 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:51:27,143 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:51:27,143 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:51:27,149 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:51:27,151 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:51:27,153 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:51:27,160 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:51:27,160 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:51:27,171 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:51:27,301 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1366 ms
2018-05-04 14:51:27,400 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:51:27,402 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:51:27 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:51:27,403 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:51:27,512 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:51:27,739 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:51:27,740 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:51:27,740 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:51:27,741 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:51:27,741 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:51:27,741 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:51:27,742 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:51:27,742 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:51:27,742 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:51:27,742 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:51:27,743 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:51:27,743 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:51:27,748 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:51:27,749 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:51:27,749 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:51:27,749 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:51:27,750 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:51:27,750 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:51:27,750 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:51:27,751 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:51:28,127 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:51:27 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:51:28,258 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:51:27 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:51:28,482 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:51:29,041 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1640 ms
2018-05-04 14:51:29,798 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:51:29,817 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:51:29,836 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:51:30,118 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:51:30,119 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:51:30,121 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:51:37,149 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:51:37,150 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:51:37,205 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:51:38,784 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:51:38,784 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:51:38,787 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:51:38,960 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:51:38,960 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:51:38,970 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:52:35,532 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:52:35,542 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:52:35,556 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:52:35,600 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:52:35,826 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:52:35,827 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:52:35,830 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:52:35,860 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:52:35,861 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:52:35,873 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:52:35,883 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:52:35,884 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:52:35,885 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:52:36,006 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:52:36,012 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:52:36,014 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:52:36,020 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:52:36,021 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:52:36,024 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:52:38,856 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:52:38,857 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:52:38,858 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:52:38,892 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:52:38,893 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:52:38,894 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:52:38,975 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:52:38,976 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:52:38,977 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:52:38,981 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:52:38,982 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:52:38,983 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:53:26,015 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-05-04 14:53:26,017 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: 测试标签(String), summer(String), 2018-05-04 14-53-25(String), 5(Integer), 用于测试标签是否添加成功(String)
2018-05-04 14:53:26,117 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-05-04 14:53:26,149 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 14:53:26,149 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 14:53:26,152 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 14:53:26,315 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) 
2018-05-04 14:53:26,317 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==> Parameters: 22(Integer), 1(Integer), 22(Integer), 2(Integer), 22(Integer), 3(Integer), 22(Integer), 4(Integer), 22(Integer), 5(Integer), 22(Integer), 6(Integer)
2018-05-04 14:53:26,525 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - <==    Updates: 6
2018-05-04 14:57:12,762 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:51:27 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:57:12,926 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:51:25 CST 2018]; root of context hierarchy
2018-05-04 14:58:51,622 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 14:58:51,688 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 14:58:51 CST 2018]; root of context hierarchy
2018-05-04 14:58:51,726 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 14:58:51,937 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 14:58:51,974 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 14:58:52,072 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 14:58:52,309 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:58:52,454 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 14:58:52,454 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:58:52,773 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:58:52,773 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:58:52,779 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:58:52,781 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:58:52,782 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:58:52,788 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:58:52,789 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:58:52,800 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 14:58:52,906 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1282 ms
2018-05-04 14:58:52,993 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 14:58:52,995 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:58:52 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:58:52,995 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 14:58:53,142 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 14:58:53,357 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 14:58:53,358 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 14:58:53,358 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 14:58:53,359 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:58:53,359 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:58:53,360 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:58:53,360 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 14:58:53,360 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 14:58:53,360 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 14:58:53,361 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:58:53,361 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 14:58:53,362 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 14:58:53,367 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 14:58:53,367 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 14:58:53,368 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 14:58:53,368 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 14:58:53,368 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 14:58:53,369 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 14:58:53,369 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 14:58:53,369 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 14:58:53,742 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:58:52 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:58:53,871 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:58:52 CST 2018]; parent: Root WebApplicationContext
2018-05-04 14:58:54,140 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 14:58:54,312 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1319 ms
2018-05-04 14:58:54,986 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:58:55,005 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:58:55,040 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:58:55,325 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:58:55,326 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:58:55,364 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:59:11,458 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:59:11,459 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:59:11,464 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:59:23,023 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:59:23,024 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:59:23,047 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:59:23,071 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:59:23,072 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:59:23,094 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:59:36,372 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 14:59:36,373 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 14:59:36,435 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 14:59:36,475 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 14:59:36,800 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 14:59:36,801 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 14:59:36,807 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 14:59:36,857 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:59:36,858 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:59:36,929 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:59:37,000 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:59:37,001 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:59:37,003 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:59:37,389 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 14:59:37,390 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 14:59:37,393 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 14:59:37,424 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 14:59:37,425 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 14:59:37,429 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 14:59:40,774 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:59:40,775 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:59:40,776 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:59:40,799 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:59:40,799 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:59:40,801 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:59:40,973 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:59:40,973 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:59:40,974 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:59:41,091 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:59:41,092 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:59:41,094 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:59:54,392 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:59:54,393 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:59:54,396 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:59:54,498 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:59:54,499 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:59:54,506 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 14:59:54,522 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 14:59:54,523 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 14:59:54,524 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 14:59:54,533 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 14:59:54,533 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 14:59:54,534 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:00:29,339 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 14:58:52 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:00:29,432 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 14:58:51 CST 2018]; root of context hierarchy
2018-05-04 15:00:49,355 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 15:00:49,427 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 15:00:49 CST 2018]; root of context hierarchy
2018-05-04 15:00:49,473 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 15:00:49,675 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 15:00:49,712 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 15:00:49,810 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 15:00:50,067 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:00:50,220 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 15:00:50,221 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:00:50,527 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:00:50,528 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:00:50,534 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:00:50,537 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:00:50,538 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:00:50,545 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:00:50,545 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:00:50,557 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:00:50,681 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1324 ms
2018-05-04 15:00:50,759 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 15:00:50,762 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:00:50 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:00:50,762 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 15:00:50,905 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:00:51,113 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 15:00:51,115 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 15:00:51,115 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 15:00:51,116 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:00:51,116 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:00:51,116 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:00:51,117 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 15:00:51,117 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 15:00:51,117 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 15:00:51,118 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:00:51,118 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 15:00:51,119 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 15:00:51,124 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 15:00:51,124 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 15:00:51,125 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 15:00:51,125 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 15:00:51,125 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:00:51,126 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 15:00:51,126 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 15:00:51,126 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 15:00:51,481 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:00:50 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:00:51,614 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:00:50 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:00:51,877 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 15:00:52,099 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1340 ms
2018-05-04 15:00:53,267 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:00:53,285 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:00:53,411 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:00:53,932 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:00:53,932 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:00:53,937 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:01:07,887 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:01:07,888 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:01:07,974 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:01:13,694 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:01:13,695 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:01:13,706 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:01:13,739 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:01:13,740 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:01:13,758 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:01:32,871 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 15:01:32,872 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 15:01:32,950 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 15:01:32,994 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 15:01:33,404 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:01:33,405 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:01:33,421 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:01:33,531 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:01:33,531 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:01:33,593 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:01:33,662 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:01:33,663 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:01:33,665 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:01:34,126 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:01:34,127 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:01:34,130 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:01:34,237 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:01:34,238 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:01:34,240 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:01:36,156 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:01:36,157 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:01:36,158 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:01:36,171 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:01:36,172 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:01:36,174 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:01:36,278 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:01:36,278 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:01:36,287 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:01:36,292 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:01:36,292 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:01:36,294 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:02:15,388 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-05-04 15:02:15,400 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: 测试标签(String), summer(String), 2018-05-04 15-02-15(String), 5(Integer), 测试标签是否添加成功(String)
2018-05-04 15:02:16,212 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-05-04 15:02:16,396 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:02:16,396 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:02:16,398 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:02:16,543 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) , (?, ?) 
2018-05-04 15:02:16,545 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==> Parameters: 23(Integer), 1(Integer), 23(Integer), 2(Integer), 23(Integer), 3(Integer), 23(Integer), 4(Integer), 23(Integer), 5(Integer), 23(Integer), 6(Integer)
2018-05-04 15:02:16,713 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - <==    Updates: 6
2018-05-04 15:02:17,106 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:02:17,107 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:02:17,109 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:03:51,993 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:03:51,993 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:03:52,002 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:03:52,015 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:03:52,015 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 23(Integer), <h1 id="h1-u7528u4E8Eu6D4Bu8BD5u5728u6587u7AE0u4E0Au6DFBu52A0u6807u7B7E"><a name="用于测试在文章上添加标签" class="reference-link"></a><span class="header-link octicon octicon-link"></span>用于测试在文章上添加标签</h1><p>看是否成功</p>
(String)
2018-05-04 15:03:52,105 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:03:54,728 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:03:54,729 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:03:54,734 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:03:54,751 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:03:54,752 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 23(Integer), <h1 id="h1-u7528u4E8Eu6D4Bu8BD5u5728u6587u7AE0u4E0Au6DFBu52A0u6807u7B7E"><a name="用于测试在文章上添加标签" class="reference-link"></a><span class="header-link octicon octicon-link"></span>用于测试在文章上添加标签</h1><p>看是否成功</p>
(String)
2018-05-04 15:03:54,815 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:03:55,339 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:03:55,339 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:03:55,341 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:03:55,346 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:03:55,347 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 23(Integer), <h1 id="h1-u7528u4E8Eu6D4Bu8BD5u5728u6587u7AE0u4E0Au6DFBu52A0u6807u7B7E"><a name="用于测试在文章上添加标签" class="reference-link"></a><span class="header-link octicon octicon-link"></span>用于测试在文章上添加标签</h1><p>看是否成功</p>
(String)
2018-05-04 15:03:55,399 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:03:55,520 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:03:55,520 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:03:55,521 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:03:55,547 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:03:55,547 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 23(Integer), <h1 id="h1-u7528u4E8Eu6D4Bu8BD5u5728u6587u7AE0u4E0Au6DFBu52A0u6807u7B7E"><a name="用于测试在文章上添加标签" class="reference-link"></a><span class="header-link octicon octicon-link"></span>用于测试在文章上添加标签</h1><p>看是否成功</p>
(String)
2018-05-04 15:03:55,608 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:03:55,703 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:03:55,704 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:03:55,705 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:03:55,709 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:03:55,710 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 23(Integer), <h1 id="h1-u7528u4E8Eu6D4Bu8BD5u5728u6587u7AE0u4E0Au6DFBu52A0u6807u7B7E"><a name="用于测试在文章上添加标签" class="reference-link"></a><span class="header-link octicon octicon-link"></span>用于测试在文章上添加标签</h1><p>看是否成功</p>
(String)
2018-05-04 15:03:55,775 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:03:56,724 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:03:56,725 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:03:56,726 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:03:56,729 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:03:56,730 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 23(Integer), <h1 id="h1-u7528u4E8Eu6D4Bu8BD5u5728u6587u7AE0u4E0Au6DFBu52A0u6807u7B7E"><a name="用于测试在文章上添加标签" class="reference-link"></a><span class="header-link octicon octicon-link"></span>用于测试在文章上添加标签</h1><p>看是否成功</p>
(String)
2018-05-04 15:03:56,783 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:04:47,799 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:00:50 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:04:47,884 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 15:00:49 CST 2018]; root of context hierarchy
2018-05-04 15:05:17,311 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 15:05:17,388 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 15:05:17 CST 2018]; root of context hierarchy
2018-05-04 15:05:17,433 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 15:05:17,685 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 15:05:17,725 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 15:05:17,829 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 15:05:18,075 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:05:18,234 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 15:05:18,234 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:05:18,553 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:05:18,554 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:05:18,561 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:05:18,563 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:05:18,564 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:05:18,570 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:05:18,571 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:05:18,583 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:05:18,688 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1373 ms
2018-05-04 15:05:18,768 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 15:05:18,770 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:05:18 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:05:18,770 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 15:05:18,925 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:05:19,160 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 15:05:19,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 15:05:19,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 15:05:19,162 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:05:19,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:05:19,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 15:05:19,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 15:05:19,164 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 15:05:19,164 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:05:19,164 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:05:19,165 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 15:05:19,165 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 15:05:19,171 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 15:05:19,171 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 15:05:19,172 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 15:05:19,172 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 15:05:19,173 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:05:19,173 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 15:05:19,173 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 15:05:19,174 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 15:05:19,520 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:05:18 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:05:19,653 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:05:18 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:05:19,916 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 15:05:20,134 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1366 ms
2018-05-04 15:05:20,925 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:05:20,954 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:05:20,972 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:05:21,296 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:05:21,297 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:05:21,299 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:05:29,510 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:05:29,511 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:05:29,517 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:05:31,350 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:05:31,351 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:05:31,354 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:05:31,369 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:05:31,370 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:05:31,376 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:05:53,851 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 15:05:53,851 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 15:05:53,943 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 15:05:53,950 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 15:05:54,178 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:05:54,179 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:05:54,184 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:05:54,209 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:05:54,210 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:05:54,294 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:05:54,356 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:05:54,357 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:05:54,359 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:05:54,874 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:05:54,874 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:05:54,878 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:05:54,911 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:05:54,912 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:05:54,914 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:06:20,366 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:06:20,367 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:06:20,369 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:06:20,385 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:06:20,386 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 23(Integer), <h1 id="h1-u7528u4E8Eu6D4Bu8BD5u5728u6587u7AE0u4E0Au6DFBu52A0u6807u7B7E"><a name="用于测试在文章上添加标签" class="reference-link"></a><span class="header-link octicon octicon-link"></span>用于测试在文章上添加标签</h1><p>看是否成功</p>
(String)
2018-05-04 15:06:20,582 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:06:30,622 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:06:30,622 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:06:30,624 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:06:30,628 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:06:30,628 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 23(Integer), <h1 id="h1-u7528u4E8Eu6D4Bu8BD5u5728u6587u7AE0u4E0Au6DFBu52A0u6807u7B7E"><a name="用于测试在文章上添加标签" class="reference-link"></a><span class="header-link octicon octicon-link"></span>用于测试在文章上添加标签</h1><p>看是否成功</p>
(String)
2018-05-04 15:06:30,685 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:07:30,137 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:05:18 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:07:30,243 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 15:05:17 CST 2018]; root of context hierarchy
2018-05-04 15:07:48,153 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 15:07:48,214 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 15:07:48 CST 2018]; root of context hierarchy
2018-05-04 15:07:48,254 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 15:07:48,506 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 15:07:48,543 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 15:07:48,639 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 15:07:48,887 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:07:49,041 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 15:07:49,042 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:07:49,359 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:07:49,360 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:07:49,365 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:07:49,367 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:07:49,368 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:07:49,375 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:07:49,376 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:07:49,388 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:07:49,492 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1337 ms
2018-05-04 15:07:49,570 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 15:07:49,573 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:07:49 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:07:49,573 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 15:07:49,730 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:07:49,936 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 15:07:49,938 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:07:49,939 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:07:49,939 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 15:07:49,939 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 15:07:49,940 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 15:07:49,940 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:07:49,940 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 15:07:49,941 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 15:07:49,941 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:07:49,941 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 15:07:49,942 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 15:07:49,947 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 15:07:49,948 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 15:07:49,948 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 15:07:49,948 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 15:07:49,949 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:07:49,949 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 15:07:49,949 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 15:07:49,950 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 15:07:50,310 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:07:49 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:07:50,441 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:07:49 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:07:50,706 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 15:07:50,890 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1319 ms
2018-05-04 15:07:51,465 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:07:51,483 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:07:51,522 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:07:51,924 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:07:51,925 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:07:51,928 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:08:02,042 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:08:02,043 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:08:02,046 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:08:03,869 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:08:03,870 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:08:03,957 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:08:03,962 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:08:03,962 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:08:03,968 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:09:10,119 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 15:09:10,156 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 15:09:10,253 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 15:09:10,260 INFO[com.summer.blog.controller.UserController:76] - wrong user name or password
2018-05-04 15:09:15,831 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 15:09:15,832 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 15:09:15,833 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 15:09:15,835 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 15:09:15,870 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:09:15,871 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:09:15,873 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:09:15,904 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:09:15,905 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:09:16,055 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:09:16,092 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:09:16,093 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:09:16,094 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:09:16,432 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:09:16,433 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:09:16,435 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:09:16,439 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:09:16,439 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:09:16,441 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:09:42,240 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:09:42,272 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:09:42,274 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:09:42,432 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:09:42,433 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 23(Integer), <h1 id="h1-u7528u4E8Eu6D4Bu8BD5u5728u6587u7AE0u4E0Au6DFBu52A0u6807u7B7E"><a name="用于测试在文章上添加标签" class="reference-link"></a><span class="header-link octicon octicon-link"></span>用于测试在文章上添加标签</h1><p>看是否成功</p>
(String)
2018-05-04 15:09:42,802 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:09:42,884 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:09:42,884 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:09:42,886 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:09:43,486 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:09:43,487 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:09:43,488 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:09:43,492 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:09:43,493 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:09:43,495 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:09:44,386 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:09:44,386 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:09:44,388 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:09:44,392 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:09:44,393 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:09:44,395 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:09:54,774 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:09:54,775 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 15:09:54,776 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 15:09:54,787 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:09:54,788 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:09:54,789 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:09:54,793 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:09:54,793 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:09:54,794 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:09:54,926 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:09:54,926 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:09:54,927 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:09:54,931 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:09:54,931 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:09:55,033 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:09:56,933 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:09:56,934 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:09:56,935 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:09:56,942 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-04 15:09:56,942 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 23(Integer)
2018-05-04 15:09:57,035 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 9
2018-05-04 15:10:00,737 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:10:00,738 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:10:00,739 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:10:00,743 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-04 15:10:00,743 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 23(Integer)
2018-05-04 15:10:00,744 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 9
2018-05-04 15:10:21,203 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:10:21,203 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 2(Integer)
2018-05-04 15:10:21,204 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 15:10:21,213 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:10:21,213 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:10:21,214 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:10:21,218 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:10:21,218 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:10:21,219 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:10:22,054 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:10:22,055 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:10:22,056 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:10:22,059 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:10:22,059 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:10:22,061 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:10:23,743 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:10:23,744 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 安装Ubuntu 18.04 LTS后要做的11件事情(String)
2018-05-04 15:10:23,745 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:10:23,748 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-04 15:10:23,748 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 14(Integer)
2018-05-04 15:10:23,815 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 1
2018-05-04 15:11:07,821 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:11:07,822 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:11:07,823 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 6
2018-05-04 15:11:07,833 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:11:07,833 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:11:07,834 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:11:07,837 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:11:07,838 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:11:07,860 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:11:08,514 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:11:08,514 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:11:08,516 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:11:08,519 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:11:08,519 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:11:08,521 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:11:09,866 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:11:09,866 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 15:11:09,868 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 15:11:09,873 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:11:09,873 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:11:09,874 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:11:09,877 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:11:09,878 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:11:09,878 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:11:10,045 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:11:10,046 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:11:10,047 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:11:10,050 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:11:10,050 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:11:10,052 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:11:10,869 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:11:10,870 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:11:10,872 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:11:10,876 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-04 15:11:10,876 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 23(Integer)
2018-05-04 15:11:10,877 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 9
2018-05-04 15:11:23,202 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:11:23,203 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试标签(String)
2018-05-04 15:11:23,204 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:11:23,207 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-04 15:11:23,207 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 23(Integer)
2018-05-04 15:11:23,208 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 9
2018-05-04 15:12:39,615 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:12:39,616 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:12:39,617 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:12:39,622 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:12:39,622 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:12:39,623 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:12:39,691 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:12:39,691 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:12:39,692 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:12:39,696 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:12:39,696 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:12:39,698 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:12:55,323 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description) VALUES (?, ?, ?, ?, ?) 
2018-05-04 15:12:55,324 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: hdskufhsdukhfsdkhf(String), kbjhbjhb(String), 2018-05-04 15-12-55(String), 1(Integer), (String)
2018-05-04 15:12:55,394 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-05-04 15:12:55,398 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:12:55,398 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: hdskufhsdukhfsdkhf(String)
2018-05-04 15:12:55,399 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:12:55,594 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==>  Preparing: insert into article_label(article_id, label_id) values (?, ?) 
2018-05-04 15:12:55,594 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - ==> Parameters: 24(Integer), 1(Integer)
2018-05-04 15:12:55,703 DEBUG[com.summer.blog.dao.LabelDao.addLabels:159] - <==    Updates: 1
2018-05-04 15:12:55,996 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:12:55,996 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: hdskufhsdukhfsdkhf(String)
2018-05-04 15:12:55,997 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:13:00,698 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:13:00,699 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: hdskufhsdukhfsdkhf(String)
2018-05-04 15:13:00,700 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:13:00,703 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 15:13:00,704 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 24(Integer), <p>jdbjfhdbdjhdjfhd</p>
(String)
2018-05-04 15:13:00,779 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 15:13:00,800 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:13:00,801 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:13:00,803 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:13:00,809 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 15:13:00,810 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 15:13:00,810 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 15:13:00,813 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 15:13:00,813 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 15:13:00,814 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 15:13:00,981 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:13:00,981 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:13:00,982 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:13:00,985 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:13:00,986 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:13:00,988 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:13:05,399 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 15:13:05,400 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: hdskufhsdukhfsdkhf(String)
2018-05-04 15:13:05,401 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 15:13:05,404 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-04 15:13:05,404 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 24(Integer)
2018-05-04 15:13:05,405 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 1
2018-05-04 15:14:45,758 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:07:49 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:14:45,817 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 15:07:48 CST 2018]; root of context hierarchy
2018-05-04 15:15:03,282 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 15:15:03,353 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 15:15:03 CST 2018]; root of context hierarchy
2018-05-04 15:15:03,392 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 15:15:03,611 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 15:15:03,647 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 15:15:03,741 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 15:15:03,985 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:15:04,137 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 15:15:04,138 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:15:04,414 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:15:04,415 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:15:04,421 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:15:04,423 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:15:04,424 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:15:04,431 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:15:04,431 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:15:04,444 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:15:04,550 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1266 ms
2018-05-04 15:15:04,635 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 15:15:04,637 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:15:04 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:15:04,637 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 15:15:04,783 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:15:04,992 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 15:15:04,993 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 15:15:04,994 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 15:15:04,994 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:15:04,994 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:15:04,995 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 15:15:04,995 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 15:15:04,996 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 15:15:04,996 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:15:04,996 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:15:04,997 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 15:15:04,998 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 15:15:05,003 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 15:15:05,004 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 15:15:05,004 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 15:15:05,004 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 15:15:05,005 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:15:05,005 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 15:15:05,006 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 15:15:05,006 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 15:15:05,372 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:15:04 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:15:05,506 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:15:04 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:15:05,781 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 15:15:05,946 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1311 ms
2018-05-04 15:15:06,457 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:15:06,475 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:15:06,502 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:15:06,762 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:15:06,763 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:15:06,766 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:15:16,516 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:15:16,516 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:15:16,522 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:15:18,354 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:15:18,355 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:15:18,357 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:15:18,361 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:15:18,362 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:15:18,367 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:15:27,230 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/article/login.do] in DispatcherServlet with name 'myBlog'
2018-05-04 15:15:30,202 WARN[org.springframework.web.servlet.PageNotFound:1205] - No mapping found for HTTP request with URI [/article/login.do] in DispatcherServlet with name 'myBlog'
2018-05-04 15:30:48,013 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 15:30:48,059 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 15:30:48 CST 2018]; root of context hierarchy
2018-05-04 15:30:48,093 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 15:30:48,267 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 15:30:48,305 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 15:30:48,405 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 15:30:48,587 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:30:48,741 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 15:30:48,742 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:30:48,966 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:30:48,966 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:30:48,972 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:30:48,975 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:30:48,976 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:30:48,982 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:30:48,983 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:30:48,994 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:30:49,104 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1088 ms
2018-05-04 15:30:49,206 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 15:30:49,208 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:30:49 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:30:49,208 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 15:30:49,352 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:30:49,668 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 15:30:49,670 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 15:30:49,670 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 15:30:49,671 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:30:49,671 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:30:49,671 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:30:49,672 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 15:30:49,672 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 15:30:49,672 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 15:30:49,673 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:30:49,673 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 15:30:49,674 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 15:30:49,680 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:30:49,681 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 15:30:49,681 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 15:30:49,681 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 15:30:49,682 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 15:30:49,682 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 15:30:49,682 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 15:30:49,683 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 15:30:50,050 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:30:49 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:30:50,179 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:30:49 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:30:50,405 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 15:30:50,575 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1369 ms
2018-05-04 15:30:51,351 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:30:51,368 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:30:51,386 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:30:51,617 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:30:51,617 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:30:51,620 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:30:54,052 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:30:54,052 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:30:54,055 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:30:55,052 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:30:55,053 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:30:55,054 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:30:55,065 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:30:55,066 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:30:55,095 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:31:55,940 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:30:49 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:31:55,977 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 15:30:48 CST 2018]; root of context hierarchy
2018-05-04 15:32:04,190 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 15:32:04,244 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 15:32:04 CST 2018]; root of context hierarchy
2018-05-04 15:32:04,284 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 15:32:04,350 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 15:32:04,393 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 15:32:04,500 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 15:32:04,691 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:32:04,892 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 15:32:04,893 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:32:05,065 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:32:05,066 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:32:05,073 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:32:05,075 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:32:05,076 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:32:05,083 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:32:05,083 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:32:05,097 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:32:05,319 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1126 ms
2018-05-04 15:32:05,374 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 15:32:05,376 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:32:05 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:32:05,377 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 15:32:05,501 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:32:05,786 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:32:05,788 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 15:32:05,789 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 15:32:05,789 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 15:32:05,790 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:32:05,790 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:32:05,791 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:32:05,791 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 15:32:05,791 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 15:32:05,792 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 15:32:05,792 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 15:32:05,793 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 15:32:05,799 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:32:05,799 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 15:32:05,800 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 15:32:05,800 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 15:32:05,800 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 15:32:05,801 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 15:32:05,801 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 15:32:05,801 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 15:32:06,234 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:32:05 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:32:06,384 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:32:05 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:32:06,615 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 15:32:06,772 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1398 ms
2018-05-04 15:32:07,508 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:32:07,526 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:32:07,545 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:32:07,743 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:32:07,744 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:32:07,746 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:32:08,441 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:32:08,442 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:32:08,462 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:32:08,764 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:32:08,764 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:32:08,766 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:32:08,770 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:32:08,770 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:32:08,774 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:32:29,781 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:32:05 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:32:29,792 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 15:32:04 CST 2018]; root of context hierarchy
2018-05-04 15:33:01,765 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 15:33:01,823 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 15:33:01 CST 2018]; root of context hierarchy
2018-05-04 15:33:01,859 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 15:33:01,917 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 15:33:01,957 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 15:33:02,060 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 15:33:02,257 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:33:02,448 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 15:33:02,449 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:02,633 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:02,633 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:02,643 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:02,645 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:02,646 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:02,652 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:02,652 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:02,666 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:02,886 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1119 ms
2018-05-04 15:33:02,948 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 15:33:02,950 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:33:02 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:33:02,950 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 15:33:03,092 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:33:03,387 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:03,388 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:03,389 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 15:33:03,390 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 15:33:03,390 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:03,390 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:03,391 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:03,391 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 15:33:03,391 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 15:33:03,392 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 15:33:03,393 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 15:33:03,394 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:03,400 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:03,400 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 15:33:03,400 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 15:33:03,401 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 15:33:03,401 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 15:33:03,402 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 15:33:03,402 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 15:33:03,402 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 15:33:03,779 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:33:02 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:33:03,929 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:33:02 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:33:04,201 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 15:33:04,334 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1386 ms
2018-05-04 15:33:04,924 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:33:04,943 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:33:04,962 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:33:05,213 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:33:05,215 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:33:05,219 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:33:06,107 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:33:06,110 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:33:06,116 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:33:06,386 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:33:06,386 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:33:06,388 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:33:06,396 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:33:06,397 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:33:06,401 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:33:34,546 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:33:02 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:33:34,569 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 15:33:01 CST 2018]; root of context hierarchy
2018-05-04 15:33:42,819 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 15:33:42,863 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 15:33:42 CST 2018]; root of context hierarchy
2018-05-04 15:33:42,900 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 15:33:42,972 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 15:33:43,020 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 15:33:43,151 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 15:33:43,378 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:33:43,576 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 15:33:43,576 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:43,799 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:43,800 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:43,807 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:43,810 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:43,811 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:43,819 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:43,820 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:43,831 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:33:44,036 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1215 ms
2018-05-04 15:33:44,090 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 15:33:44,093 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:33:44 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:33:44,093 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 15:33:44,225 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:33:44,572 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:44,573 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 15:33:44,574 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 15:33:44,575 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:44,577 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:44,578 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:44,579 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 15:33:44,579 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 15:33:44,579 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 15:33:44,580 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:44,581 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 15:33:44,582 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:44,601 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 15:33:44,602 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 15:33:44,602 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 15:33:44,602 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 15:33:44,603 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:33:44,603 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 15:33:44,605 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 15:33:44,605 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 15:33:45,039 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:33:44 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:33:45,186 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:33:44 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:33:45,456 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 15:33:45,605 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1514 ms
2018-05-04 15:33:46,292 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:33:46,317 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:33:46,334 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:33:46,540 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:33:46,541 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:33:46,543 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:33:48,767 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:33:48,768 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:33:48,772 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:33:49,497 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:33:49,498 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:33:49,592 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:33:49,598 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:33:49,599 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:33:49,604 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:34:37,978 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:33:44 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:34:38,017 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 15:33:42 CST 2018]; root of context hierarchy
2018-05-04 15:40:24,488 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 15:40:24,567 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 15:40:24 CST 2018]; root of context hierarchy
2018-05-04 15:40:24,627 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 15:40:25,019 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 15:40:25,067 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 15:40:25,173 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 15:40:25,396 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:40:25,547 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 15:40:25,548 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:40:25,801 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:40:25,802 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:40:25,809 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:40:25,811 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:40:25,812 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:40:25,820 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:40:25,821 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:40:25,833 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 15:40:25,956 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1465 ms
2018-05-04 15:40:26,029 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 15:40:26,031 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:40:26 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:40:26,032 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 15:40:26,165 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 15:40:26,378 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 15:40:26,379 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 15:40:26,380 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 15:40:26,380 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:40:26,380 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:40:26,381 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:40:26,381 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 15:40:26,381 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 15:40:26,381 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 15:40:26,382 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:40:26,382 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 15:40:26,383 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 15:40:26,388 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 15:40:26,388 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 15:40:26,388 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 15:40:26,389 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 15:40:26,389 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 15:40:26,389 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 15:40:26,390 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 15:40:26,390 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 15:40:26,787 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:40:26 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:40:26,928 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:40:26 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:40:27,181 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 15:40:27,366 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1337 ms
2018-05-04 15:40:28,076 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:40:28,100 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:40:28,119 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:40:28,349 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:40:28,350 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:40:28,353 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:40:34,925 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:40:34,926 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 15:40:34,929 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 7
2018-05-04 15:40:36,073 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:40:36,074 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:40:36,076 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:40:36,080 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:40:36,080 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:40:36,085 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:41:01,152 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 15:41:01,153 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 3(Integer)
2018-05-04 15:41:01,154 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 15:41:01,230 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 15:41:01,230 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 15:41:01,233 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 15:41:01,236 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 15:41:01,237 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 15:41:01,239 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 15:41:07,815 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 15:40:26 CST 2018]; parent: Root WebApplicationContext
2018-05-04 15:41:07,830 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 15:40:24 CST 2018]; root of context hierarchy
2018-05-04 16:10:14,851 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:10:14,894 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:10:14 CST 2018]; root of context hierarchy
2018-05-04 16:10:14,928 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:10:15,315 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:10:15,361 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:10:15,465 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:10:15,669 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:10:15,966 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:10:15,967 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:10:16,350 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:10:16,350 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:10:16,357 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:10:16,360 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:10:16,361 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:10:16,369 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:10:16,369 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:10:16,382 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:10:16,500 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1647 ms
2018-05-04 16:10:16,654 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:10:16,657 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:10:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:10:16,657 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:10:16,793 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:10:17,083 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:10:17,084 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:10:17,085 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:10:17,085 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:10:17,086 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:10:17,086 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:10:17,086 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:10:17,086 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:10:17,087 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:10:17,087 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:10:17,088 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:10:17,088 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:10:17,094 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:10:17,095 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:10:17,096 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:10:17,096 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:10:17,097 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:10:17,097 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:10:17,097 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:10:17,097 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:10:17,477 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:10:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:10:17,630 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:10:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:10:17,948 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:10:18,136 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1481 ms
2018-05-04 16:10:18,891 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 16:10:18,924 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:10:18,940 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:10:19,179 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 16:10:19,179 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:10:19,180 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:10:26,994 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 16:10:26,995 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:10:26,996 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:10:29,441 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:10:29,442 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:10:29,659 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:10:29,665 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:10:29,665 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:10:29,869 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:10:47,606 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 16:10:47,607 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 16:10:47,684 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 16:10:47,690 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 16:10:47,734 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description FROM article WHERE type = ?; 
2018-05-04 16:10:47,734 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:10:47,839 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:10:47,851 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:10:47,852 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:10:47,934 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:10:47,940 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:10:47,941 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:10:48,035 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:10:48,795 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:10:48,795 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:10:48,847 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:10:48,853 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:10:48,854 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:10:48,892 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:10:52,952 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:10:52,953 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:10:52,989 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:10:52,995 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:10:52,996 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:10:53,068 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:10:53,111 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:10:53,112 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:10:53,136 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:10:53,141 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:10:53,142 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:10:53,144 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:11:08,494 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:10:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:11:08,520 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:10:14 CST 2018]; root of context hierarchy
2018-05-04 16:18:14,805 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:18:14,846 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:18:14 CST 2018]; root of context hierarchy
2018-05-04 16:18:14,878 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:18:14,944 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:18:14,985 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:18:15,080 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:18:15,360 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:18:15,734 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:18:15,735 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:18:16,465 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:18:16,465 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:18:16,472 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:18:16,474 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:18:16,475 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:18:16,482 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:18:16,483 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:18:16,496 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:18:16,601 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1794 ms
2018-05-04 16:18:16,773 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:18:16,776 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:18:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:18:16,776 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:18:16,920 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:18:17,161 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:18:17,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:18:17,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:18:17,163 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:18:17,164 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:18:17,164 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:18:17,164 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:18:17,165 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:18:17,165 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:18:17,165 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:18:17,166 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:18:17,167 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:18:17,172 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:18:17,173 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:18:17,173 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:18:17,174 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:18:17,174 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:18:17,175 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:18:17,176 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:18:17,177 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:18:17,516 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:18:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:18:17,649 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:18:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:18:17,882 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:18:17,998 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1224 ms
2018-05-04 16:18:18,532 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:18:18,551 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:18:18,562 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:18:18,762 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:18:18,762 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:18:18,798 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:18:20,261 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:18:20,261 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:18:20,262 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:18:21,994 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:18:21,995 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:18:22,034 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:18:22,038 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:18:22,039 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:18:22,043 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:18:35,184 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 16:18:35,184 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 16:18:35,224 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 16:18:35,230 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 16:18:35,270 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:18:35,271 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:18:35,314 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:18:35,325 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:18:35,326 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:18:35,328 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:18:35,333 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:18:35,333 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:18:35,380 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:18:35,512 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:18:35,513 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:18:35,516 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:18:35,520 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:18:35,521 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:18:35,524 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:18:37,642 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:18:37,643 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:18:37,644 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:18:37,673 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:18:37,674 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:18:37,704 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:18:37,767 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:18:37,768 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:18:37,801 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:18:37,805 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:18:37,806 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:18:37,808 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:18:54,121 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description, labels) VALUES (?, ?, ?, ?, ?, ?) 
2018-05-04 16:18:54,122 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: test(String), summer(String), 2018-05-04 16-18-54(String), 5(Integer), test(String), Linux,Ubuntu,Java,电影(String)
2018-05-04 16:18:54,300 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-05-04 16:18:54,465 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 16:18:54,466 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: test(String)
2018-05-04 16:18:54,471 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 16:18:54,654 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:18:54,655 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:18:54,657 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:18:54,662 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:18:54,662 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:18:54,664 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:19:14,629 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:19:14,630 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:19:14,655 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:19:14,668 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:19:14,669 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:19:14,677 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:19:14,681 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:19:14,682 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:19:14,684 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:19:14,902 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:19:14,902 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:19:14,934 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:19:14,940 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:19:14,941 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:19:14,945 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:19:17,692 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:19:17,693 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:19:17,694 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:19:17,699 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:19:17,699 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:19:17,743 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:19:17,746 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:19:17,747 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:19:17,758 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:19:17,921 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:19:17,921 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:19:17,923 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:19:17,926 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:19:17,926 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:19:17,928 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:19:30,947 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:18:16 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:19:31,016 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:18:14 CST 2018]; root of context hierarchy
2018-05-04 16:26:36,798 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:26:36,863 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:26:36 CST 2018]; root of context hierarchy
2018-05-04 16:26:36,902 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:26:37,186 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:26:37,252 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:26:37,373 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:26:37,556 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:26:37,709 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:26:37,709 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:26:37,883 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:26:37,883 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:26:37,890 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:26:37,892 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:26:37,893 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:26:37,901 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:26:37,903 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:26:37,917 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:26:38,042 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1242 ms
2018-05-04 16:26:38,112 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:26:38,115 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:26:38 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:26:38,115 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:26:38,232 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:26:38,457 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:26:38,458 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:26:38,458 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:26:38,459 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:26:38,459 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:26:38,460 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:26:38,460 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:26:38,460 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:26:38,460 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:26:38,461 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:26:38,461 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:26:38,462 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:26:38,467 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:26:38,467 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:26:38,468 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:26:38,468 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:26:38,468 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:26:38,469 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:26:38,469 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:26:38,469 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:26:38,828 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:26:38 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:26:39,009 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:26:38 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:26:39,233 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:26:39,411 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1299 ms
2018-05-04 16:26:40,058 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:26:40,091 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:26:40,113 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:26:40,299 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:26:40,300 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:26:40,316 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:26:42,816 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:26:42,819 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:26:42,827 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:26:43,087 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:26:43,087 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:26:43,712 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:26:43,718 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:26:43,719 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:26:43,724 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:26:46,420 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:26:46,420 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:26:46,425 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:26:46,685 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:26:46,686 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:26:46,689 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:26:46,694 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:26:46,694 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:26:46,698 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:27:12,171 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:26:38 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:27:12,184 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:26:36 CST 2018]; root of context hierarchy
2018-05-04 16:36:00,971 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:36:01,017 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:36:01 CST 2018]; root of context hierarchy
2018-05-04 16:36:01,056 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:36:01,149 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:36:01,193 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:36:01,297 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:36:01,523 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:36:01,712 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:36:01,713 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:36:02,066 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:36:02,067 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:36:02,073 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:36:02,075 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:36:02,076 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:36:02,083 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:36:02,084 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:36:02,095 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:36:02,235 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1260 ms
2018-05-04 16:36:02,383 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:36:02,386 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:36:02 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:36:02,386 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:36:02,527 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:36:02,820 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:36:02,822 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:36:02,822 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:36:02,822 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:36:02,823 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:36:02,823 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:36:02,823 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:36:02,824 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:36:02,824 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:36:02,824 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:36:02,825 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticleByLabel.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticleByLabel(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:36:02,825 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:36:02,826 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:36:02,831 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:36:02,832 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:36:02,832 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:36:02,832 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:36:02,833 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:36:02,833 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:36:02,834 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:36:02,834 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:36:03,336 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:36:02 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:36:03,505 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:36:02 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:36:03,772 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:36:03,901 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1517 ms
2018-05-04 16:36:04,670 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:36:04,699 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:36:04,710 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:36:04,936 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:36:04,937 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:36:04,937 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:36:09,078 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:36:09,079 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:36:09,382 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:36:12,630 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:36:12,631 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:36:12,742 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:36:12,748 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:36:12,749 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:36:12,753 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:36:26,648 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:36:26,649 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:36:26,810 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:36:27,786 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:36:27,787 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:36:27,789 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:36:27,818 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:36:27,818 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:36:27,821 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:36:29,327 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE title LIKE "%"?"%"; 
2018-05-04 16:36:29,327 DEBUG[com.summer.blog.dao.ArticleDao.searchArticle:159] - ==> Parameters: null
2018-05-04 16:36:29,738 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-05-04 16:36:29,872 INFO[org.springframework.jdbc.support.SQLErrorCodesFactory:128] - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-05-04 16:38:04,773 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:36:02 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:38:04,846 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:36:01 CST 2018]; root of context hierarchy
2018-05-04 16:38:38,767 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:38:38,844 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:38:38 CST 2018]; root of context hierarchy
2018-05-04 16:38:38,882 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:38:39,118 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:38:39,156 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:38:39,262 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:38:39,483 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:38:39,631 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:38:39,631 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:38:39,872 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:38:39,872 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:38:39,878 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:38:39,881 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:38:39,882 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:38:39,888 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:38:39,889 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:38:39,900 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:38:40,004 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1234 ms
2018-05-04 16:38:40,089 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:38:40,091 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:38:40 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:38:40,092 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:38:40,234 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:38:40,499 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:38:40,500 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:38:40,500 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:38:40,501 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:38:40,501 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:38:40,501 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticleByLabel.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticleByLabel(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:38:40,502 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:38:40,502 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:38:40,502 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:38:40,502 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:38:40,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:38:40,503 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:38:40,504 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:38:40,508 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:38:40,509 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:38:40,509 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:38:40,510 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:38:40,510 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:38:40,510 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:38:40,510 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:38:40,511 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:38:40,870 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:38:40 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:38:41,000 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:38:40 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:38:41,222 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:38:41,387 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1298 ms
2018-05-04 16:38:42,600 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:38:42,619 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:38:42,639 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:38:42,831 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:38:42,832 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:38:42,833 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:38:50,161 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:38:50,162 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:38:50,162 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:38:52,955 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:38:52,957 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:38:52,962 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:38:52,966 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:38:52,966 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:38:52,971 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:38:56,697 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:38:56,697 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:38:56,838 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:38:57,858 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:38:57,859 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:38:57,873 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:38:57,878 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:38:57,878 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:38:57,881 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:38:59,476 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE title LIKE "%"?"%"; 
2018-05-04 16:38:59,477 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==> Parameters: Linux(String)
2018-05-04 16:38:59,548 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - <==      Total: 0
2018-05-04 16:38:59,611 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:38:59,612 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:38:59,613 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:38:59,618 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:38:59,618 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:38:59,620 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:39:01,926 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:39:01,927 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:39:01,930 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:39:02,093 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:39:02,093 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:39:02,105 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:39:02,110 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:39:02,110 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:39:02,113 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:39:04,776 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE title LIKE "%"?"%"; 
2018-05-04 16:39:04,778 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==> Parameters: Ubuntu(String)
2018-05-04 16:39:04,779 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - <==      Total: 0
2018-05-04 16:39:04,938 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:39:04,939 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:39:04,941 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:39:04,945 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:39:04,945 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:39:05,010 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:39:22,092 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:39:22,093 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:39:22,095 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:39:22,241 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:39:22,242 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:39:22,268 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:39:22,273 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:39:22,273 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:39:22,277 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:39:31,206 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE title LIKE "%"?"%"; 
2018-05-04 16:39:31,206 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==> Parameters: Java(String)
2018-05-04 16:39:31,207 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - <==      Total: 0
2018-05-04 16:39:31,292 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:39:31,293 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:39:31,294 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:39:31,298 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:39:31,298 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:39:31,300 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:40:44,302 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:38:40 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:40:44,386 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:38:38 CST 2018]; root of context hierarchy
2018-05-04 16:41:01,844 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:41:01,933 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:41:01 CST 2018]; root of context hierarchy
2018-05-04 16:41:01,977 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:41:02,213 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:41:02,275 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:41:02,417 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:41:02,694 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:41:02,868 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:41:02,869 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:41:03,126 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:41:03,127 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:41:03,135 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:41:03,137 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:41:03,138 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:41:03,144 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:41:03,145 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:41:03,156 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:41:03,259 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1412 ms
2018-05-04 16:41:03,350 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:41:03,354 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:41:03 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:41:03,354 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:41:03,496 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:41:03,782 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:41:03,783 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:41:03,784 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:41:03,784 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticleByLabel.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticleByLabel(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:41:03,784 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:41:03,787 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:41:03,788 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:41:03,789 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:41:03,789 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:41:03,789 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:41:03,790 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:41:03,790 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:41:03,791 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:41:03,796 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:41:03,797 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:41:03,797 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:41:03,797 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:41:03,798 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:41:03,798 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:41:03,799 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:41:03,799 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:41:04,206 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:41:03 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:41:04,355 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:41:03 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:41:04,600 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:41:04,925 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1574 ms
2018-05-04 16:41:05,846 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:41:05,871 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:41:05,882 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:41:06,129 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:41:06,129 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:41:06,130 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:41:13,016 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:41:13,016 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:41:13,017 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:41:15,533 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:41:15,534 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:41:15,539 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:41:15,543 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:41:15,543 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:41:15,547 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:41:22,792 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:41:22,792 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:41:23,041 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:41:23,891 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:41:23,892 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:41:23,895 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:41:23,900 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:41:23,901 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:41:23,904 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:41:25,096 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE labels LIKE "%"?"%"; 
2018-05-04 16:41:25,097 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==> Parameters: Linux(String)
2018-05-04 16:41:25,129 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - <==      Total: 1
2018-05-04 16:41:25,272 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:41:25,273 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:41:25,311 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:41:25,315 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:41:25,316 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:41:25,318 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:41:26,385 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE labels LIKE "%"?"%"; 
2018-05-04 16:41:26,386 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==> Parameters: Ubuntu(String)
2018-05-04 16:41:26,387 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - <==      Total: 1
2018-05-04 16:41:26,562 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:41:26,563 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:41:26,564 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:41:26,568 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:41:26,569 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:41:26,571 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:46:28,549 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:41:03 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:46:28,650 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:41:01 CST 2018]; root of context hierarchy
2018-05-04 16:46:48,615 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:46:48,681 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:46:48 CST 2018]; root of context hierarchy
2018-05-04 16:46:48,724 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:46:48,951 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:46:48,991 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:46:49,098 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:46:49,366 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:46:49,540 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:46:49,541 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:46:49,776 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:46:49,776 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:46:49,787 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:46:49,789 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:46:49,790 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:46:49,797 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:46:49,798 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:46:49,809 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:46:49,938 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1321 ms
2018-05-04 16:46:50,026 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:46:50,028 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:46:50 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:46:50,033 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:46:50,152 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:46:50,436 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticleByLabel.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticleByLabel(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:46:50,437 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:46:50,438 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:46:50,438 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:46:50,438 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:46:50,439 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:46:50,439 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:46:50,439 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:46:50,440 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:46:50,440 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:46:50,440 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:46:50,441 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:46:50,441 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:46:50,448 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:46:50,448 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:46:50,449 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:46:50,451 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:46:50,451 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:46:50,452 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:46:50,452 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:46:50,452 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:46:50,858 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:46:50 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:46:51,004 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:46:50 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:46:51,246 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:46:51,427 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1401 ms
2018-05-04 16:46:52,248 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:46:52,268 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:46:52,290 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:46:52,526 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:46:52,526 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:46:52,527 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:47:00,478 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:47:00,478 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:47:00,479 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:47:03,087 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:47:03,087 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:47:03,186 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:47:03,193 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:47:03,194 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:47:03,308 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:47:06,802 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:47:06,802 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:47:06,808 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:47:07,540 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:47:07,541 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:47:07,543 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:47:07,548 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:47:07,549 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:47:07,551 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:47:52,033 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:46:50 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:47:52,044 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:46:48 CST 2018]; root of context hierarchy
2018-05-04 16:47:59,192 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:47:59,234 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:47:59 CST 2018]; root of context hierarchy
2018-05-04 16:47:59,266 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:47:59,328 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:47:59,363 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:47:59,458 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:47:59,640 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:47:59,807 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:47:59,808 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:47:59,997 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:47:59,998 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:48:00,018 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:48:00,020 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:48:00,022 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:48:00,030 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:48:00,032 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:48:00,045 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:48:00,157 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 961 ms
2018-05-04 16:48:00,290 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:48:00,293 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:48:00 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:48:00,293 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:48:00,430 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:48:00,649 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:48:00,650 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:48:00,651 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:48:00,651 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:48:00,652 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:48:00,652 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:48:00,652 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:48:00,653 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:48:00,653 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:48:00,653 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticleByLabel.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticleByLabel(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:48:00,654 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:48:00,654 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:48:00,655 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:48:00,660 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:48:00,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:48:00,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:48:00,661 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:48:00,662 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:48:00,662 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:48:00,662 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:48:00,663 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:48:01,028 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:48:00 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:48:01,177 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:48:00 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:48:01,428 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:48:01,548 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1258 ms
2018-05-04 16:48:01,968 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:48:01,986 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:48:02,088 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:48:02,268 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:48:02,269 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:48:02,269 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:48:02,951 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:48:02,952 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:48:02,952 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:48:03,271 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:48:03,272 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:48:03,276 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:48:03,281 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:48:03,281 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:48:03,290 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:48:17,240 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:48:17,241 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:48:17,242 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:48:17,440 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:48:17,440 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:48:17,444 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:48:17,448 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:48:17,449 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:48:17,451 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:48:19,382 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE labels LIKE "%"?"%"; 
2018-05-04 16:48:19,383 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==> Parameters: Linux(String)
2018-05-04 16:48:19,560 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - <==      Total: 1
2018-05-04 16:48:19,672 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:48:19,672 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:48:19,674 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:48:19,677 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:48:19,678 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:48:19,681 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:48:20,846 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE labels LIKE "%"?"%"; 
2018-05-04 16:48:20,846 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==> Parameters: Ubuntu(String)
2018-05-04 16:48:20,847 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - <==      Total: 1
2018-05-04 16:48:21,024 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:48:21,024 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:48:21,026 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:48:21,030 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:48:21,030 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:48:21,033 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:48:22,307 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE labels LIKE "%"?"%"; 
2018-05-04 16:48:22,308 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - ==> Parameters: Java(String)
2018-05-04 16:48:22,310 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByLabel:159] - <==      Total: 1
2018-05-04 16:48:22,508 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:48:22,509 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:48:22,511 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:48:22,538 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:48:22,538 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:48:22,542 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:50:39,969 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:48:00 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:50:39,982 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:47:59 CST 2018]; root of context hierarchy
2018-05-04 16:50:57,114 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:50:57,154 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:50:57 CST 2018]; root of context hierarchy
2018-05-04 16:50:57,187 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:50:57,249 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:50:57,286 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:50:57,379 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:50:57,573 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:50:57,755 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:50:57,756 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:50:57,920 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:50:57,920 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:50:57,927 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:50:57,929 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:50:57,930 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:50:57,937 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:50:57,938 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:50:57,950 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:50:58,064 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 948 ms
2018-05-04 16:50:58,170 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:50:58,172 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:50:58 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:50:58,173 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:50:58,298 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:50:58,550 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:50:58,552 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:50:58,552 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:50:58,553 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:50:58,553 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:50:58,554 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:50:58,554 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:50:58,554 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:50:58,555 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:50:58,555 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticleByLabel.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticleByLabel(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:50:58,555 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:50:58,556 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:50:58,556 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:50:58,561 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:50:58,562 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:50:58,562 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:50:58,563 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:50:58,563 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:50:58,563 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:50:58,564 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:50:58,564 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:50:58,923 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:50:58 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:50:59,091 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:50:58 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:50:59,354 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:50:59,473 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1303 ms
2018-05-04 16:50:59,985 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:51:00,002 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:51:00,023 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:51:00,219 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:51:00,220 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:51:00,220 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:51:02,284 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:51:02,285 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:51:02,286 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:51:02,527 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:51:02,527 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:51:02,534 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:51:02,558 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:51:02,558 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:51:02,565 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:51:13,701 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 16:51:13,702 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 16:51:13,765 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 16:51:13,771 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 16:51:14,010 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:51:14,011 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:51:14,012 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:51:14,041 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:51:14,041 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:51:14,100 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:51:14,113 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:51:14,113 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:51:14,118 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:51:14,320 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:51:14,320 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:51:14,322 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:51:14,329 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:51:14,329 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:51:14,332 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:51:15,740 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:51:15,740 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:51:15,748 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:51:15,753 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:51:15,754 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:51:15,761 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:51:15,770 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:51:15,771 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:51:15,789 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:51:16,007 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:51:16,008 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:51:16,010 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:51:16,015 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:51:16,016 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:51:16,019 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:51:39,739 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:51:39,740 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:51:39,741 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:51:39,843 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:51:39,844 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:51:39,876 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:52:42,033 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 16:52:42,033 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: test(String)
2018-05-04 16:52:42,034 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 16:52:42,041 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 16:52:42,042 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 25(Integer), <h1 id="h1-test"><a name="Test" class="reference-link"></a><span class="header-link octicon octicon-link"></span>Test</h1><p>初步完成了一个简单个人博客，<br>内置的markerdown编辑器的公式还没有实现</p>
(String)
2018-05-04 16:52:42,209 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 16:52:42,250 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:52:42,250 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:52:42,251 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:52:42,261 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:52:42,261 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:52:42,314 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:52:42,331 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:52:42,331 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:52:42,352 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:52:42,569 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:52:42,569 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:52:42,571 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:52:42,575 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:52:42,576 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:52:42,578 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:52:43,860 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:52:43,861 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:52:43,862 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 1
2018-05-04 16:52:43,867 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:52:43,867 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:52:43,868 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:52:43,902 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:52:43,902 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:52:43,904 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:52:44,010 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:52:44,011 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:52:44,012 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:52:44,087 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:52:44,088 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:52:44,091 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:52:45,028 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 16:52:45,029 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: test(String)
2018-05-04 16:52:45,030 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 16:52:45,042 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-04 16:52:45,043 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 25(Integer)
2018-05-04 16:52:45,050 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 1
2018-05-04 16:53:03,952 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:50:58 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:53:04,053 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:50:57 CST 2018]; root of context hierarchy
2018-05-04 16:53:54,427 INFO[org.springframework.web.context.ContextLoader:270] - Root WebApplicationContext: initialization started
2018-05-04 16:53:54,501 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing Root WebApplicationContext: startup date [Fri May 04 16:53:54 CST 2018]; root of context hierarchy
2018-05-04 16:53:54,545 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/applicationContext.xml]
2018-05-04 16:53:54,845 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-config.xml]
2018-05-04 16:53:54,919 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mybatis.xml]
2018-05-04 16:53:55,064 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-shiro.xml]
2018-05-04 16:53:55,295 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:53:55,465 INFO[org.springframework.jdbc.datasource.DriverManagerDataSource:133] - Loaded JDBC driver: com.mysql.cj.jdbc.Driver
2018-05-04 16:53:55,466 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'dataSource' of type [org.springframework.jdbc.datasource.DriverManagerDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:53:55,696 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.mybatis.spring.SqlSessionFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:53:55,697 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:53:55,703 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:53:55,705 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userDao' of type [com.sun.proxy.$Proxy19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:53:55,706 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'userServiceImpl' of type [com.summer.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:53:55,714 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'myRealm' of type [com.summer.blog.realms.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:53:55,714 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:53:55,729 INFO[org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker:326] - Bean 'logoutFilter' of type [org.apache.shiro.web.filter.authc.LogoutFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-05-04 16:53:55,848 INFO[org.springframework.web.context.ContextLoader:310] - Root WebApplicationContext: initialization completed in 1419 ms
2018-05-04 16:53:55,906 INFO[org.springframework.web.servlet.DispatcherServlet:494] - FrameworkServlet 'myBlog': initialization started
2018-05-04 16:53:55,909 INFO[org.springframework.web.context.support.XmlWebApplicationContext:589] - Refreshing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:53:55 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:53:55,909 INFO[org.springframework.beans.factory.xml.XmlBeanDefinitionReader:316] - Loading XML bean definitions from class path resource [spring/spring-mvc.xml]
2018-05-04 16:53:56,100 INFO[org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor:154] - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-05-04 16:53:56,393 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticleByLabel.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticleByLabel(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:53:56,395 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/getArticlesByType.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.getArticlesByTitle(int,javax.servlet.http.HttpServletRequest)
2018-05-04 16:53:56,396 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadImage.do],methods=[POST]}" onto public void com.summer.blog.controller.ArticleController.hello(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.web.multipart.MultipartFile)
2018-05-04 16:53:56,396 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/saveArticleToHtml.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.saveArticle(java.lang.String,java.lang.String)
2018-05-04 16:53:56,396 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/showArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.showArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:53:56,397 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/uploadFile.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.uploadFile(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:53:56,397 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/searchArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.searchArticle(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:53:56,397 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/main.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toMain()
2018-05-04 16:53:56,398 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toAddArticle.do]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toAddArticle()
2018-05-04 16:53:56,398 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/addArticle.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.ArticleController.addArticle(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
2018-05-04 16:53:56,398 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/article/toWriteArticle.do],methods=[GET]}" onto public java.lang.String com.summer.blog.controller.ArticleController.toWrite(java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:53:56,399 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/404.do]}" onto public java.lang.String com.summer.blog.controller.ErrorController.page404()
2018-05-04 16:53:56,399 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/getAllLabels.do]}" onto public void com.summer.blog.controller.LabelController.getAllLabels(javax.servlet.http.HttpServletRequest)
2018-05-04 16:53:56,404 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toUpdateUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUpdateUser()
2018-05-04 16:53:56,405 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/toCheckUser.do]}" onto public java.lang.String com.summer.blog.controller.UserController.toUserInfo()
2018-05-04 16:53:56,405 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/updateUser.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doUpdateUser(java.lang.String,java.lang.String)
2018-05-04 16:53:56,408 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/checkUserInfo.do]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.checkUserInfo()
2018-05-04 16:53:56,408 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doLogin.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doLogin(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2018-05-04 16:53:56,409 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/doRegister.do],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.summer.blog.controller.UserController.doRegister(java.lang.String,java.lang.String,java.lang.String)
2018-05-04 16:53:56,410 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/login.do]}" onto public java.lang.String com.summer.blog.controller.UserController.login()
2018-05-04 16:53:56,410 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping:549] - Mapped "{[/user/register.do]}" onto public java.lang.String com.summer.blog.controller.UserController.register()
2018-05-04 16:53:56,799 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:53:55 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:53:56,943 INFO[org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter:568] - Looking for @ControllerAdvice: WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:53:55 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:53:57,192 INFO[com.summer.blog.components.FreeMarkerConfigExtend:131] - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-05-04 16:53:57,424 INFO[org.springframework.web.servlet.DispatcherServlet:513] - FrameworkServlet 'myBlog': initialization completed in 1518 ms
2018-05-04 16:53:58,159 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:53:58,183 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:53:58,194 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:53:58,407 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:53:58,407 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:53:58,408 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:54:01,883 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:54:01,884 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:54:01,885 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:54:02,722 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:54:02,723 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:54:02,730 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:54:02,760 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:54:02,761 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:54:02,765 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:54:13,597 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==>  Preparing: SELECT * FROM user_info WHERE username = ?; 
2018-05-04 16:54:13,598 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - ==> Parameters: admin(String)
2018-05-04 16:54:13,600 DEBUG[com.summer.blog.dao.UserDao.getUserByUsername:159] - <==      Total: 1
2018-05-04 16:54:13,608 INFO[com.summer.blog.controller.UserController:68] - admin: login
2018-05-04 16:54:13,650 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:54:13,650 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:54:13,651 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:54:13,714 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:54:13,715 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:54:13,743 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:54:13,750 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:54:13,750 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:54:13,752 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:54:14,087 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:54:14,088 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:54:14,090 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:54:14,107 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:54:14,107 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:54:14,111 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:54:17,046 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:54:17,047 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:54:17,048 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:54:17,057 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:54:17,061 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:54:17,063 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:54:17,145 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:54:17,146 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:54:17,147 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:54:17,156 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:54:17,157 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:54:17,171 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:54:57,562 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==>  Preparing: INSERT INTO article(title, author, create_time, type, description, labels) VALUES (?, ?, ?, ?, ?, ?) 
2018-05-04 16:54:57,564 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - ==> Parameters: 测试添加图片(String), summer(String), 2018-05-04 16-54-57(String), 5(Integer), 用于添加图片(String), Linux,Ubuntu,Java,电影,Freemarker(String)
2018-05-04 16:54:57,752 DEBUG[com.summer.blog.dao.ArticleDao.addArticle:159] - <==    Updates: 1
2018-05-04 16:54:58,446 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 16:54:58,446 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试添加图片(String)
2018-05-04 16:54:58,499 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 16:54:58,736 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:54:58,737 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:54:58,774 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:54:58,842 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:54:58,843 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:54:58,867 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:55:14,433 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 16:55:14,434 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试添加图片(String)
2018-05-04 16:55:14,436 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 16:55:14,449 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==>  Preparing: insert into article_content(id, content) values (?, ?) 
2018-05-04 16:55:14,450 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - ==> Parameters: 26(Integer), <p><img src="/static/article_Img/wallls.com_183125.jpg" alt=""></p>
(String)
2018-05-04 16:55:14,552 DEBUG[com.summer.blog.dao.ArticleDao.saveContent:159] - <==    Updates: 1
2018-05-04 16:55:14,576 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:55:14,576 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 1(Integer)
2018-05-04 16:55:14,578 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 0
2018-05-04 16:55:14,821 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:55:14,822 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:55:14,827 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:55:14,837 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:55:14,838 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:55:14,839 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:55:15,016 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:55:15,017 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:55:15,018 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:55:15,028 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:55:15,028 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:55:15,030 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:55:16,471 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==>  Preparing: SELECT id, title, author, create_time time, type, description, labels FROM article WHERE type = ?; 
2018-05-04 16:55:16,472 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - ==> Parameters: 5(Integer)
2018-05-04 16:55:16,473 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByType:159] - <==      Total: 2
2018-05-04 16:55:16,479 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==>  Preparing: SELECT role_info.role_name FROM role_info INNER JOIN user_role ON user_role.role_id=role_info.role_id INNER JOIN user_info ON user_info.username=? AND user_info.id=user_role.user_id; 
2018-05-04 16:55:16,479 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - ==> Parameters: admin(String)
2018-05-04 16:55:16,480 DEBUG[com.summer.blog.dao.UserDao.getRoles:159] - <==      Total: 3
2018-05-04 16:55:16,483 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==>  Preparing: SELECT permission_info.permission_name FROM permission_info, user_info, user_role, role_permission WHERE permission_info.permission_id=role_permission.permission_id AND user_role.role_id=role_permission.role_id AND user_role.user_id=user_info.id AND user_info.username=?; 
2018-05-04 16:55:16,484 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - ==> Parameters: admin(String)
2018-05-04 16:55:16,485 DEBUG[com.summer.blog.dao.UserDao.getPermissions:159] - <==      Total: 14
2018-05-04 16:55:16,805 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==>  Preparing: select * from recommend_link; 
2018-05-04 16:55:16,805 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - ==> Parameters: 
2018-05-04 16:55:16,807 DEBUG[com.summer.blog.dao.LabelDao.getAllRecommends:159] - <==      Total: 10
2018-05-04 16:55:16,962 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==>  Preparing: SELECT label_id id, label_name labelName, use_count counts FROM label; 
2018-05-04 16:55:16,963 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - ==> Parameters: 
2018-05-04 16:55:16,966 DEBUG[com.summer.blog.dao.LabelDao.getAllLabel:159] - <==      Total: 32
2018-05-04 16:55:19,106 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==>  Preparing: SELECT * FROM article WHERE title = ? 
2018-05-04 16:55:19,107 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - ==> Parameters: 测试添加图片(String)
2018-05-04 16:55:19,171 DEBUG[com.summer.blog.dao.ArticleDao.getArticleByTitle:159] - <==      Total: 1
2018-05-04 16:55:19,280 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==>  Preparing: select content from article_content where id = ? 
2018-05-04 16:55:19,280 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - ==> Parameters: 26(Integer)
2018-05-04 16:55:19,281 DEBUG[com.summer.blog.dao.ArticleDao.showArticle:159] - <==      Total: 1
2018-05-04 16:55:33,814 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing WebApplicationContext for namespace 'myBlog-servlet': startup date [Fri May 04 16:53:55 CST 2018]; parent: Root WebApplicationContext
2018-05-04 16:55:33,898 INFO[org.springframework.web.context.support.XmlWebApplicationContext:989] - Closing Root WebApplicationContext: startup date [Fri May 04 16:53:54 CST 2018]; root of context hierarchy
